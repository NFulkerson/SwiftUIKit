{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"Logo.png"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"SwiftUIKit is divided into the sections found in the Topics section below."}]},{"anchor":"Supported-Platforms","level":2,"type":"heading","text":"Supported Platforms"},{"type":"paragraph","inlineContent":[{"type":"text","text":"SwiftUIKit supports "},{"type":"codeVoice","code":"iOS 13"},{"type":"text","text":", "},{"type":"codeVoice","code":"macOS 11"},{"type":"text","text":", "},{"type":"codeVoice","code":"tvOS 13"},{"type":"text","text":" and "},{"type":"codeVoice","code":"watchOS 6"},{"type":"text","text":"."}]},{"anchor":"Installation","level":2,"type":"heading","text":"Installation"},{"type":"paragraph","inlineContent":[{"type":"text","text":"SwiftUIKit can be installed with the Swift Package Manager:"}]},{"type":"codeListing","syntax":null,"code":["https:\/\/github.com\/danielsaidi\/SwiftUIKit.git"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"or with CocoaPods:"}]},{"type":"codeListing","syntax":null,"code":["pod DSSwiftUIKit"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can also clone the repository and build the library locally."}]},{"anchor":"About-this-documentation","level":2,"type":"heading","text":"About this documentation"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The online documentation is currently iOS-specific. To generate documentation for other platforms, open the package in Xcode, select a simulator then run "},{"type":"codeVoice","code":"Product\/Build Documentation"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note that type extensions are not included in this documentation."}]},{"anchor":"License","level":2,"type":"heading","text":"License"},{"type":"paragraph","inlineContent":[{"type":"text","text":"SwiftUIKit is available under the MIT license."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/swiftuikit"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"SwiftUIKit adds extra functionality to the SwiftUI framework, like extensions to native types, new views, pickers, utilites etc."}],"kind":"symbol","metadata":{"roleHeading":"Framework","externalID":"SwiftUIKit","title":"SwiftUIKit","symbolKind":"module","role":"collection","modules":[{"name":"SwiftUIKit"}]},"hierarchy":{"paths":[[]]},"topicSections":[{"title":"Cameras","identifiers":["doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/DocumentCamera","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/PhotoCamera"]},{"title":"Colors","identifiers":["doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/ColorRepresentable","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/SystemColor"]},{"title":"Data","identifiers":["doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/Persisted","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/ScanCodeGenerator","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/ScanCodeType","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/StandardScanCodeGenerator"]},{"title":"Errors","identifiers":["doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/ErrorAlerter","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/ErrorAlertConvertible"]},{"title":"Files","identifiers":["doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/FolderMonitor","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/FolderObservable"]},{"title":"Fonts","identifiers":["doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/FontRepresentable"]},{"title":"Gestures","identifiers":["doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/GestureTimer"]},{"title":"Images","identifiers":["doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/ImageRepresentable"]},{"title":"Navigation","identifiers":["doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/UrlOpener"]},{"title":"Pickers","identifiers":["doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/FilePicker","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/ForEachPicker","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/ForEachMultiPicker","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/ImagePicker","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/ImagePickerError","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/ListPicker","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/ListMultiPicker","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/ListPickerItem","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/ListPickerSection","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/SystemFontPicker","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/SystemFontForEachPicker","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/SystemFontListPicker","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/SystemFontPickerFont","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/SystemFontPickerItem"]},{"title":"Presentation","identifiers":["doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/PresentationContext","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/AlertContext","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/AlertContextFocusedValueKey","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/AlertProvider","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/FullScreenCoverContext","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/FullScreenCoverContextFocusedValueKey","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/FullScreenCoverProvider","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/SheetContext","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/SheetContextFocusedValueKey","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/SheetProvider"]},{"title":"Previews","identifiers":["doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/SwiftPreviewInspector","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/StandardSwiftPreviewInspector"]},{"title":"Printing","identifiers":["doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/ItemPrinter","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/ItemPrintingView","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/PrintableItem","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/StandardItemPrinter"]},{"title":"Sharing","identifiers":["doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/ShareSheet","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/UrlSharing"]},{"title":"Styles","identifiers":["doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/CornerRadiusStyle","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/FontIdentifier","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/FontStyle","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/ViewShadowStyle"]},{"title":"Views","identifiers":["doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/CustomRoundedRectangle","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/DismissableView","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/DotAnimation","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/DotAnimationText","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/FetchedDataView","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/NavigationButton","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/NavigationLinkArrow","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/PageIndicator","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/PageIndicatorDisplayMode","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/PageIndicatorStyle","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/PageView","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/SearchBar","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/ScrollViewHeader","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/TextReplacement"]},{"title":"Views\/CollectionView","identifiers":["doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/CollectionView","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/CollectionViewLayout","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/CollectionViewRow"]},{"title":"Views\/Flip","identifiers":["doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/FlipView","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/FlipDirection"]},{"title":"Views\/Form","identifiers":["doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/FormActionButton","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/FormActionButtonStyle","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/FormText","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/FormTextEditor","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/FormTextField"]},{"title":"Views\/List","identifiers":["doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/ListButtonStyle","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/ListSelectItem","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/ListSubtitle"]},{"title":"Views\/Progress","identifiers":["doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/CircularProgressBar","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/LinearProgressBar"]},{"title":"Views\/Text","identifiers":["doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/MultilineText","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/MultilineTextField","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/TextFieldClearButton"]},{"title":"Views\/Toggle","identifiers":["doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/ActionToggle"]},{"title":"Enumerations","identifiers":["doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/UndimmedPresentationDetent"]}],"references":{"doc://SwiftUIKit/documentation/SwiftUIKit/GestureTimer":{"role":"symbol","title":"GestureTimer","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"GestureTimer"}],"abstract":[{"type":"text","text":"This timer can be used to calculate the elapsed time of any"},{"type":"text","text":" "},{"type":"text","text":"gesture."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/GestureTimer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"GestureTimer"}],"url":"\/documentation\/swiftuikit\/gesturetimer"},"doc://SwiftUIKit/documentation/SwiftUIKit/Persisted":{"role":"symbol","title":"Persisted","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Persisted"}],"abstract":[{"type":"text","text":"This property wrapper automatically persists any new values"},{"type":"text","text":" "},{"type":"text","text":"to user defaults and sets the initial property value to the"},{"type":"text","text":" "},{"type":"text","text":"last persisted value or a default value."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/Persisted","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Persisted"}],"url":"\/documentation\/swiftuikit\/persisted"},"doc://SwiftUIKit/documentation/SwiftUIKit/StandardScanCodeGenerator":{"role":"symbol","title":"StandardScanCodeGenerator","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"StandardScanCodeGenerator"}],"abstract":[{"type":"text","text":"This scan code generator uses "},{"type":"codeVoice","code":"CoreImage"},{"type":"text","text":" to generate codes"},{"type":"text","text":" "},{"type":"text","text":"that can be scanned by a camera."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/StandardScanCodeGenerator","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"StandardScanCodeGenerator"}],"url":"\/documentation\/swiftuikit\/standardscancodegenerator"},"doc://SwiftUIKit/documentation/SwiftUIKit/CollectionViewLayout":{"deprecated":true,"role":"symbol","title":"CollectionViewLayout","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CollectionViewLayout"}],"abstract":[{"type":"text","text":"This struct can be used to provide "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/CollectionView"},{"type":"text","text":"s with"},{"type":"text","text":" "},{"type":"text","text":"a certain layout instead of injecting a provider block."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/CollectionViewLayout","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CollectionViewLayout"}],"url":"\/documentation\/swiftuikit\/collectionviewlayout"},"doc://SwiftUIKit/documentation/SwiftUIKit/ImageRepresentable":{"role":"symbol","title":"ImageRepresentable","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"ImageRepresentable"}],"abstract":[{"type":"text","text":"This typealias helps bridging UIKit and AppKit when working"},{"type":"text","text":" "},{"type":"text","text":"with images in a multi-platform context."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/ImageRepresentable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ImageRepresentable"}],"url":"\/documentation\/swiftuikit\/imagerepresentable"},"doc://SwiftUIKit/documentation/SwiftUIKit/FilePicker":{"role":"symbol","title":"FilePicker","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FilePicker"}],"abstract":[{"type":"text","text":"This picker wraps "},{"type":"codeVoice","code":"UIDocumentPickerViewController"},{"type":"text","text":" that can"},{"type":"text","text":" "},{"type":"text","text":"can be used to pick files from Files."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/FilePicker","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FilePicker"}],"url":"\/documentation\/swiftuikit\/filepicker"},"doc://SwiftUIKit/documentation/SwiftUIKit/NavigationButton":{"role":"symbol","title":"NavigationButton","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"NavigationButton"}],"abstract":[{"type":"text","text":"This view wraps a regular SwiftUI "},{"type":"codeVoice","code":"Button"},{"type":"text","text":" and also appends"},{"type":"text","text":" "},{"type":"text","text":"a trailing "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/NavigationLinkArrow"},{"type":"text","text":" to let the button render"},{"type":"text","text":" "},{"type":"text","text":"as a "},{"type":"codeVoice","code":"NavigationLink"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/NavigationButton","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"NavigationButton"}],"url":"\/documentation\/swiftuikit\/navigationbutton"},"doc://SwiftUIKit/documentation/SwiftUIKit/ScanCodeType":{"role":"symbol","title":"ScanCodeType","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ScanCodeType"}],"abstract":[{"type":"text","text":"This enum defines the scan code types that can be used with"},{"type":"text","text":" "},{"type":"text","text":"a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/ScanCodeGenerator"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/ScanCodeType","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ScanCodeType"}],"url":"\/documentation\/swiftuikit\/scancodetype"},"doc://SwiftUIKit/documentation/SwiftUIKit/FullScreenCoverContextFocusedValueKey":{"role":"symbol","title":"FullScreenCoverContextFocusedValueKey","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FullScreenCoverContextFocusedValueKey"}],"abstract":[{"type":"text","text":"This key can be used to keep track of the currently focused"},{"type":"text","text":" "},{"type":"text","text":"full screen cover context."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/FullScreenCoverContextFocusedValueKey","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FullScreenCoverContextFocusedValueKey"}],"url":"\/documentation\/swiftuikit\/fullscreencovercontextfocusedvaluekey"},"doc://SwiftUIKit/documentation/SwiftUIKit/PageIndicatorStyle":{"role":"symbol","title":"PageIndicatorStyle","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PageIndicatorStyle"}],"abstract":[{"type":"text","text":"This style can be used to style a "},{"type":"codeVoice","code":"PageIndicator"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/PageIndicatorStyle","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PageIndicatorStyle"}],"url":"\/documentation\/swiftuikit\/pageindicatorstyle"},"doc://SwiftUIKit/documentation/SwiftUIKit/NavigationLinkArrow":{"role":"symbol","title":"NavigationLinkArrow","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"NavigationLinkArrow"}],"abstract":[{"type":"text","text":"This view represents the trailing navigation arrow that are"},{"type":"text","text":" "},{"type":"text","text":"added to iOS "},{"type":"codeVoice","code":"NavigationLink"},{"type":"text","text":" items in a "},{"type":"codeVoice","code":"List"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/NavigationLinkArrow","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"NavigationLinkArrow"}],"url":"\/documentation\/swiftuikit\/navigationlinkarrow"},"doc://SwiftUIKit/documentation/SwiftUIKit/ColorRepresentable":{"role":"symbol","title":"ColorRepresentable","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"ColorRepresentable"}],"abstract":[{"type":"text","text":"This typealias helps bridging UIKit and AppKit when working"},{"type":"text","text":" "},{"type":"text","text":"with colors in a multi-platform context."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/ColorRepresentable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ColorRepresentable"}],"url":"\/documentation\/swiftuikit\/colorrepresentable"},"doc://SwiftUIKit/documentation/SwiftUIKit/FormActionButton":{"role":"symbol","title":"FormActionButton","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FormActionButton"}],"abstract":[{"type":"text","text":"This button aims to replicate the horizontal action buttons"},{"type":"text","text":" "},{"type":"text","text":"that are used in e.g. the Contacts app."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/FormActionButton","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FormActionButton"}],"url":"\/documentation\/swiftuikit\/formactionbutton"},"doc://SwiftUIKit/documentation/SwiftUIKit/SystemFontListPicker":{"role":"symbol","title":"SystemFontListPicker","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SystemFontListPicker"}],"abstract":[{"type":"text","text":"This system font picker renders a "},{"type":"codeVoice","code":"List"},{"type":"text","text":" that iterates over"},{"type":"text","text":" "},{"type":"text","text":"a collection of fonts, of which one can be selected."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/SystemFontListPicker","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SystemFontListPicker"}],"url":"\/documentation\/swiftuikit\/systemfontlistpicker"},"doc://SwiftUIKit/documentation/SwiftUIKit/SystemFontForEachPicker":{"role":"symbol","title":"SystemFontForEachPicker","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SystemFontForEachPicker"}],"abstract":[{"type":"text","text":"This system font picker renders a plain "},{"type":"codeVoice","code":"ForEach"},{"type":"text","text":" view that"},{"type":"text","text":" "},{"type":"text","text":"lists a collection of fonts, of which one can be selected."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/SystemFontForEachPicker","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SystemFontForEachPicker"}],"url":"\/documentation\/swiftuikit\/systemfontforeachpicker"},"doc://SwiftUIKit/documentation/SwiftUIKit/PrintableItem":{"role":"symbol","title":"PrintableItem","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"PrintableItem"}],"abstract":[{"type":"text","text":"This enum defines all supported printable types."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/PrintableItem","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PrintableItem"}],"url":"\/documentation\/swiftuikit\/printableitem"},"doc://SwiftUIKit/documentation/SwiftUIKit/MultilineTextField":{"role":"symbol","title":"MultilineTextField","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MultilineTextField"}],"abstract":[{"type":"text","text":"This view wraps a "},{"type":"codeVoice","code":"UITextView"},{"type":"text","text":" and provides multi-line text"},{"type":"text","text":" "},{"type":"text","text":"editing to SwiftUI apps."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/MultilineTextField","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MultilineTextField"}],"url":"\/documentation\/swiftuikit\/multilinetextfield"},"doc://SwiftUIKit/documentation/SwiftUIKit/ListSelectItem":{"role":"symbol","title":"ListSelectItem","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ListSelectItem"}],"abstract":[{"type":"text","text":"This view wraps the provided content within an "},{"type":"codeVoice","code":"HStack"},{"type":"text","text":" and"},{"type":"text","text":" "},{"type":"text","text":"adds a trailing image if the view is selected."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/ListSelectItem","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ListSelectItem"}],"url":"\/documentation\/swiftuikit\/listselectitem"},"doc://SwiftUIKit/documentation/SwiftUIKit/PageView":{"role":"symbol","title":"PageView","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PageView"}],"abstract":[{"type":"text","text":"This view wraps its pages within a "},{"type":"codeVoice","code":".page"},{"type":"text","text":" styled "},{"type":"codeVoice","code":"TabView"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/PageView","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PageView"}],"url":"\/documentation\/swiftuikit\/pageview"},"doc://SwiftUIKit/documentation/SwiftUIKit/SystemColor":{"role":"symbol","title":"SystemColor","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"SystemColor"}],"abstract":[{"type":"text","text":"This enum contains all SwiftUI colors, and makes them named"},{"type":"text","text":" "},{"type":"text","text":"and iterable, which makes it easy to use them in pickers."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/SystemColor","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SystemColor"}],"url":"\/documentation\/swiftuikit\/systemcolor"},"doc://SwiftUIKit/documentation/SwiftUIKit/AlertContextFocusedValueKey":{"role":"symbol","title":"AlertContextFocusedValueKey","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AlertContextFocusedValueKey"}],"abstract":[{"type":"text","text":"This key can be used to keep track of the currently focused"},{"type":"text","text":" "},{"type":"text","text":"alert context."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/AlertContextFocusedValueKey","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AlertContextFocusedValueKey"}],"url":"\/documentation\/swiftuikit\/alertcontextfocusedvaluekey"},"doc://SwiftUIKit/documentation/SwiftUIKit/StandardSwiftPreviewInspector":{"role":"symbol","title":"StandardSwiftPreviewInspector","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"StandardSwiftPreviewInspector"}],"abstract":[{"type":"text","text":"This class can be used to check if the code is running in a"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI preview."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/StandardSwiftPreviewInspector","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"StandardSwiftPreviewInspector"}],"url":"\/documentation\/swiftuikit\/standardswiftpreviewinspector"},"doc://SwiftUIKit/documentation/SwiftUIKit/UrlSharing/sheet":{"role":"symbol","title":"sheet","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"sheet"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SheetContext","preciseIdentifier":"s:10SwiftUIKit12SheetContextC"}],"abstract":[],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/UrlSharing\/sheet","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/swiftuikit\/urlsharing\/sheet"},"doc://SwiftUIKit/documentation/SwiftUIKit/ImagePickerError":{"role":"symbol","title":"ImagePickerError","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ImagePickerError"}],"abstract":[{"type":"text","text":"This enum is used to handle "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/ImagePicker"},{"type":"text","text":" specific errors."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/ImagePickerError","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ImagePickerError"}],"url":"\/documentation\/swiftuikit\/imagepickererror"},"doc://SwiftUIKit/documentation/SwiftUIKit/SystemFontPicker":{"role":"symbol","title":"SystemFontPicker","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SystemFontPicker"}],"abstract":[{"type":"text","text":"This system font picker renders a plain "},{"type":"codeVoice","code":"Picker"},{"type":"text","text":" view, that"},{"type":"text","text":" "},{"type":"text","text":"lists a collection of fonts, of which one can be selected."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/SystemFontPicker","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SystemFontPicker"}],"url":"\/documentation\/swiftuikit\/systemfontpicker"},"doc://SwiftUIKit/documentation/SwiftUIKit":{"role":"collection","title":"SwiftUIKit","abstract":[{"type":"text","text":"SwiftUIKit adds extra functionality to the SwiftUI framework, like extensions to native types, new views, pickers, utilites etc."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit","kind":"symbol","type":"topic","url":"\/documentation\/swiftuikit"},"doc://SwiftUIKit/documentation/SwiftUIKit/ErrorAlerter":{"role":"symbol","title":"ErrorAlerter","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ErrorAlerter"}],"abstract":[{"type":"text","text":"This protocol can be implemented by anything that can alert"},{"type":"text","text":" "},{"type":"text","text":"errors, e.g. a view that performs a throwing async function."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/ErrorAlerter","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ErrorAlerter"}],"url":"\/documentation\/swiftuikit\/erroralerter"},"doc://SwiftUIKit/documentation/SwiftUIKit/FontRepresentable":{"role":"symbol","title":"FontRepresentable","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"FontRepresentable"}],"abstract":[{"type":"text","text":"This typealias helps bridging UIKit and AppKit when working"},{"type":"text","text":" "},{"type":"text","text":"with fonts in a multi-platform context."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/FontRepresentable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FontRepresentable"}],"url":"\/documentation\/swiftuikit\/fontrepresentable"},"doc://SwiftUIKit/documentation/SwiftUIKit/ScanCodeGenerator":{"role":"symbol","title":"ScanCodeGenerator","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ScanCodeGenerator"}],"abstract":[{"type":"text","text":"This protocol can be implemented any type that can generate"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/ScanCodeType"},{"type":"text","text":" images of various types from a string."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/ScanCodeGenerator","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ScanCodeGenerator"}],"url":"\/documentation\/swiftuikit\/scancodegenerator"},"doc://SwiftUIKit/documentation/SwiftUIKit/SheetProvider":{"role":"symbol","title":"SheetProvider","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SheetProvider"}],"abstract":[{"type":"text","text":"This protocol can be implemented by anything (e.g. a struct,"},{"type":"text","text":" "},{"type":"text","text":"enum etc.) that can provide a sheet view."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/SheetProvider","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SheetProvider"}],"url":"\/documentation\/swiftuikit\/sheetprovider"},"doc://SwiftUIKit/documentation/SwiftUIKit/FormText":{"role":"symbol","title":"FormText","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FormText"}],"abstract":[{"type":"text","text":"This view can be used to present text values in a list form."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/FormText","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FormText"}],"url":"\/documentation\/swiftuikit\/formtext"},"doc://SwiftUIKit/documentation/SwiftUIKit/ListPicker":{"role":"symbol","title":"ListPicker","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ListPicker"}],"abstract":[{"type":"text","text":"This generic picker lists "},{"type":"codeVoice","code":"Identifiable"},{"type":"text","text":" items in a SwiftUI"},{"type":"text","text":" "},{"type":"codeVoice","code":"List"},{"type":"text","text":" and binds its "},{"type":"codeVoice","code":"selection"},{"type":"text","text":" to an external value."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/ListPicker","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ListPicker"}],"url":"\/documentation\/swiftuikit\/listpicker"},"doc://SwiftUIKit/documentation/SwiftUIKit/DotAnimation":{"role":"symbol","title":"DotAnimation","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DotAnimation"}],"abstract":[{"type":"text","text":"This animation can be used to render a list of dots where a"},{"type":"text","text":" "},{"type":"text","text":"timer increments the number of dots until the specified max"},{"type":"text","text":" "},{"type":"text","text":"count is reached, at which the view restarts with zero dots."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/DotAnimation","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DotAnimation"}],"url":"\/documentation\/swiftuikit\/dotanimation"},"doc://SwiftUIKit/documentation/SwiftUIKit/UrlSharing":{"role":"symbol","title":"UrlSharing","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"UrlSharing"}],"abstract":[{"type":"text","text":"This protocol can be implemented by any view that can share"},{"type":"text","text":" "},{"type":"text","text":"a url, using a certain "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/UrlSharing\/sheet"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/UrlSharing","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"UrlSharing"}],"url":"\/documentation\/swiftuikit\/urlsharing"},"doc://SwiftUIKit/documentation/SwiftUIKit/ListPickerItem":{"role":"symbol","title":"ListPickerItem","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ListPickerItem"}],"abstract":[{"type":"text","text":"This protocol can be implemented by "},{"type":"codeVoice","code":"PickerItem"},{"type":"text","text":" list items."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/ListPickerItem","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ListPickerItem"}],"url":"\/documentation\/swiftuikit\/listpickeritem"},"doc://SwiftUIKit/documentation/SwiftUIKit/FontIdentifier":{"role":"symbol","title":"FontIdentifier","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"FontIdentifier"}],"abstract":[{"type":"text","text":"This protocol can be implemented by classes or structs that"},{"type":"text","text":" "},{"type":"text","text":"can be used to identify a font."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/FontIdentifier","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FontIdentifier"}],"url":"\/documentation\/swiftuikit\/fontidentifier"},"doc://SwiftUIKit/documentation/SwiftUIKit/FlipDirection":{"role":"symbol","title":"FlipDirection","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlipDirection"}],"abstract":[{"type":"text","text":"This enum defines flip directions to use with "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/FlipView"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/FlipDirection","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FlipDirection"}],"url":"\/documentation\/swiftuikit\/flipdirection"},"doc://SwiftUIKit/documentation/SwiftUIKit/FullScreenCoverContext":{"role":"symbol","title":"FullScreenCoverContext","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"FullScreenCoverContext"}],"abstract":[{"type":"text","text":"This context can be used to present any "},{"type":"codeVoice","code":"SwiftUI"},{"type":"text","text":" view as a"},{"type":"text","text":" "},{"type":"text","text":"full screen cover. You can either present standard views or"},{"type":"text","text":" "},{"type":"text","text":"anything that implements "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/FullScreenCoverProvider"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/FullScreenCoverContext","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FullScreenCoverContext"}],"url":"\/documentation\/swiftuikit\/fullscreencovercontext"},"doc://SwiftUIKit/documentation/SwiftUIKit/FullScreenCoverProvider":{"role":"symbol","title":"FullScreenCoverProvider","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"FullScreenCoverProvider"}],"abstract":[{"type":"text","text":"This protocol can be implemented by anything (e.g. a struct,"},{"type":"text","text":" "},{"type":"text","text":"enum etc.) that can provide a full screen cover view."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/FullScreenCoverProvider","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FullScreenCoverProvider"}],"url":"\/documentation\/swiftuikit\/fullscreencoverprovider"},"doc://SwiftUIKit/documentation/SwiftUIKit/ListSubtitle":{"role":"symbol","title":"ListSubtitle","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ListSubtitle"}],"abstract":[{"type":"text","text":"This view can be used to display trailing subtitle texts in"},{"type":"text","text":" "},{"type":"text","text":"list items."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/ListSubtitle","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ListSubtitle"}],"url":"\/documentation\/swiftuikit\/listsubtitle"},"doc://SwiftUIKit/documentation/SwiftUIKit/PageIndicatorDisplayMode":{"role":"symbol","title":"PageIndicatorDisplayMode","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"PageIndicatorDisplayMode"}],"abstract":[{"type":"text","text":"This enum mimics "},{"type":"codeVoice","code":"PageTabViewStyle.IndexDisplayMode"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/PageIndicatorDisplayMode","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PageIndicatorDisplayMode"}],"url":"\/documentation\/swiftuikit\/pageindicatordisplaymode"},"doc://SwiftUIKit/documentation/SwiftUIKit/ItemPrintingView":{"role":"symbol","title":"ItemPrintingView","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ItemPrintingView"}],"abstract":[{"type":"text","text":"This protocol can be implemented by any view that should be"},{"type":"text","text":" "},{"type":"text","text":"able to print printable items."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/ItemPrintingView","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ItemPrintingView"}],"url":"\/documentation\/swiftuikit\/itemprintingview"},"doc://SwiftUIKit/documentation/SwiftUIKit/FormActionButtonStyle":{"role":"symbol","title":"FormActionButtonStyle","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FormActionButtonStyle"}],"abstract":[{"type":"text","text":"This style can be applied to a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/FormActionButton"},{"type":"text","text":" to make"},{"type":"text","text":" "},{"type":"text","text":"it look like the horizontal action buttons that are used in"},{"type":"text","text":" "},{"type":"text","text":"e.g. the Contacts app."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/FormActionButtonStyle","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FormActionButtonStyle"}],"url":"\/documentation\/swiftuikit\/formactionbuttonstyle"},"doc://SwiftUIKit/documentation/SwiftUIKit/ErrorAlertConvertible":{"role":"symbol","title":"ErrorAlertConvertible","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ErrorAlertConvertible"}],"abstract":[{"type":"text","text":"This protocol can be implemented by error types that can be"},{"type":"text","text":" "},{"type":"text","text":"used together with an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/ErrorAlerter"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/ErrorAlertConvertible","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ErrorAlertConvertible"}],"url":"\/documentation\/swiftuikit\/erroralertconvertible"},"doc://SwiftUIKit/documentation/SwiftUIKit/SheetContextFocusedValueKey":{"role":"symbol","title":"SheetContextFocusedValueKey","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SheetContextFocusedValueKey"}],"abstract":[{"type":"text","text":"This key can be used to keep track of the currently focused"},{"type":"text","text":" "},{"type":"text","text":"sheet context."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/SheetContextFocusedValueKey","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SheetContextFocusedValueKey"}],"url":"\/documentation\/swiftuikit\/sheetcontextfocusedvaluekey"},"doc://SwiftUIKit/documentation/SwiftUIKit/ShareSheet":{"role":"symbol","title":"ShareSheet","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ShareSheet"}],"abstract":[{"type":"text","text":"This sheet can be used to present "},{"type":"codeVoice","code":"UIActivityViewController"},{"type":"text","text":" "},{"type":"text","text":"modals for any kind of shareable content."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/ShareSheet","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ShareSheet"}],"url":"\/documentation\/swiftuikit\/sharesheet"},"doc://SwiftUIKit/documentation/SwiftUIKit/ActionToggle":{"role":"symbol","title":"ActionToggle","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ActionToggle"}],"abstract":[{"type":"text","text":"This toggle can be used to perform specific actions when it"},{"type":"text","text":" "},{"type":"text","text":"is toggled on and off, instead of affecting the binding."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/ActionToggle","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ActionToggle"}],"url":"\/documentation\/swiftuikit\/actiontoggle"},"doc://SwiftUIKit/documentation/SwiftUIKit/CollectionView":{"deprecated":true,"role":"symbol","title":"CollectionView","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CollectionView"}],"abstract":[{"type":"text","text":"This view can be used to create a collection view that uses"},{"type":"text","text":" "},{"type":"text","text":"any kind of layout, e.g. a vertically scrolling list with a"},{"type":"text","text":" "},{"type":"text","text":"set of horizontally scrolling rows."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/CollectionView","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CollectionView"}],"url":"\/documentation\/swiftuikit\/collectionview"},"doc://SwiftUIKit/documentation/SwiftUIKit/FetchedDataView":{"role":"symbol","title":"FetchedDataView","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FetchedDataView"}],"abstract":[{"type":"text","text":"This view can be used to present asynchronous data that can"},{"type":"text","text":" "},{"type":"text","text":"be either in a loading, fetched or failed state."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/FetchedDataView","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FetchedDataView"}],"url":"\/documentation\/swiftuikit\/fetcheddataview"},"doc://SwiftUIKit/documentation/SwiftUIKit/PresentationContext":{"role":"symbol","title":"PresentationContext","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"PresentationContext"}],"abstract":[{"type":"text","text":"This class is shared by presentation-specific contexts, and"},{"type":"text","text":" "},{"type":"text","text":"can be used to setup global state or present many different"},{"type":"text","text":" "},{"type":"text","text":"views with a single view modifier."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/PresentationContext","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PresentationContext"}],"url":"\/documentation\/swiftuikit\/presentationcontext"},"doc://SwiftUIKit/documentation/SwiftUIKit/ScrollViewHeader":{"role":"symbol","title":"ScrollViewHeader","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ScrollViewHeader"}],"abstract":[{"type":"text","text":"This view can be used as a topmost scroll view header, that"},{"type":"text","text":" "},{"type":"text","text":"stretches if the scroll view is pulled down."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/ScrollViewHeader","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ScrollViewHeader"}],"url":"\/documentation\/swiftuikit\/scrollviewheader"},"doc://SwiftUIKit/documentation/SwiftUIKit/CollectionViewRow":{"deprecated":true,"role":"symbol","title":"CollectionViewRow","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CollectionViewRow"}],"abstract":[{"type":"text","text":"This struct represents a row in a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/CollectionView"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/CollectionViewRow","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CollectionViewRow"}],"url":"\/documentation\/swiftuikit\/collectionviewrow"},"doc://SwiftUIKit/documentation/SwiftUIKit/TextFieldClearButton":{"role":"symbol","title":"TextFieldClearButton","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TextFieldClearButton"}],"abstract":[{"type":"text","text":"This view modifier adds a clear button to any "},{"type":"codeVoice","code":"TextField"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/TextFieldClearButton","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TextFieldClearButton"}],"url":"\/documentation\/swiftuikit\/textfieldclearbutton"},"doc://SwiftUIKit/documentation/SwiftUIKit/SwiftPreviewInspector":{"role":"symbol","title":"SwiftPreviewInspector","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SwiftPreviewInspector"}],"abstract":[{"type":"text","text":"This protocol can be implemented by types that can check if"},{"type":"text","text":" "},{"type":"text","text":"the code is running in a SwiftUI preview."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/SwiftPreviewInspector","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SwiftPreviewInspector"}],"url":"\/documentation\/swiftuikit\/swiftpreviewinspector"},"doc://SwiftUIKit/documentation/SwiftUIKit/SearchBar":{"role":"symbol","title":"SearchBar","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SearchBar"}],"abstract":[{"type":"text","text":"This view wraps a text field within a rounded rectangle and"},{"type":"text","text":" "},{"type":"text","text":"appends a clear button and a trailing cancel button."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/SearchBar","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SearchBar"}],"url":"\/documentation\/swiftuikit\/searchbar"},"Logo.png":{"alt":"SwiftUIKit logo","type":"image","identifier":"Logo.png","variants":[{"url":"\/images\/Logo.png","traits":["1x","light"]}]},"doc://SwiftUIKit/documentation/SwiftUIKit/LinearProgressBar":{"role":"symbol","title":"LinearProgressBar","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LinearProgressBar"}],"abstract":[{"type":"text","text":"This view displays progress as a linear bar."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/LinearProgressBar","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LinearProgressBar"}],"url":"\/documentation\/swiftuikit\/linearprogressbar"},"doc://SwiftUIKit/documentation/SwiftUIKit/ViewShadowStyle":{"role":"symbol","title":"ViewShadowStyle","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewShadowStyle"}],"abstract":[{"type":"text","text":"This struct represents a style with properties that matches"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"SwiftUI"},{"type":"text","text":"s "},{"type":"codeVoice","code":"shadow"},{"type":"text","text":" modifier."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/ViewShadowStyle","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ViewShadowStyle"}],"url":"\/documentation\/swiftuikit\/viewshadowstyle"},"doc://SwiftUIKit/documentation/SwiftUIKit/ForEachPicker":{"role":"symbol","title":"ForEachPicker","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ForEachPicker"}],"abstract":[{"type":"text","text":"This generic picker lists "},{"type":"codeVoice","code":"Identifiable"},{"type":"text","text":" items in a SwiftUI"},{"type":"text","text":" "},{"type":"codeVoice","code":"ForEach"},{"type":"text","text":" and binds its "},{"type":"codeVoice","code":"selection"},{"type":"text","text":" to an external value."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/ForEachPicker","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ForEachPicker"}],"url":"\/documentation\/swiftuikit\/foreachpicker"},"doc://SwiftUIKit/documentation/SwiftUIKit/UndimmedPresentationDetent":{"role":"symbol","title":"UndimmedPresentationDetent","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"UndimmedPresentationDetent"}],"abstract":[{"type":"text","text":"This enum is used to bridge the SwiftUI "},{"type":"codeVoice","code":"PresentationDetent"},{"type":"text","text":" "},{"type":"text","text":"with the "},{"type":"codeVoice","code":"UISheetPresentationController.Detent.Identifier"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/UndimmedPresentationDetent","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"UndimmedPresentationDetent"}],"url":"\/documentation\/swiftuikit\/undimmedpresentationdetent"},"doc://SwiftUIKit/documentation/SwiftUIKit/CircularProgressBar":{"role":"symbol","title":"CircularProgressBar","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CircularProgressBar"}],"abstract":[{"type":"text","text":"This view displays progress as a circle progress view, with"},{"type":"text","text":" "},{"type":"text","text":"the progress text in the center of the circle."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/CircularProgressBar","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CircularProgressBar"}],"url":"\/documentation\/swiftuikit\/circularprogressbar"},"doc://SwiftUIKit/documentation/SwiftUIKit/FormTextField":{"role":"symbol","title":"FormTextField","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FormTextField"}],"abstract":[{"type":"text","text":"This view can be used to present text fields in a list form."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/FormTextField","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FormTextField"}],"url":"\/documentation\/swiftuikit\/formtextfield"},"doc://SwiftUIKit/documentation/SwiftUIKit/DotAnimationText":{"role":"symbol","title":"DotAnimationText","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DotAnimationText"}],"abstract":[{"type":"text","text":"This text view renders a text with a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/DotAnimation"},{"type":"text","text":" added"},{"type":"text","text":" "},{"type":"text","text":"after the text, to animate a loading state."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/DotAnimationText","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DotAnimationText"}],"url":"\/documentation\/swiftuikit\/dotanimationtext"},"doc://SwiftUIKit/documentation/SwiftUIKit/FlipView":{"role":"symbol","title":"FlipView","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlipView"}],"abstract":[{"type":"text","text":"This view has a front and a back view and can be flipped to"},{"type":"text","text":" "},{"type":"text","text":"show the other side when it’s tapped, swiped or both."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/FlipView","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FlipView"}],"url":"\/documentation\/swiftuikit\/flipview"},"doc://SwiftUIKit/documentation/SwiftUIKit/StandardItemPrinter":{"role":"symbol","title":"StandardItemPrinter","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"StandardItemPrinter"}],"abstract":[{"type":"text","text":"This class implements the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/ItemPrinter"},{"type":"text","text":" protocol by using"},{"type":"text","text":" "},{"type":"text","text":"a "},{"type":"codeVoice","code":"UIPrintInteractionController"},{"type":"text","text":" to print items."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/StandardItemPrinter","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"StandardItemPrinter"}],"url":"\/documentation\/swiftuikit\/standarditemprinter"},"doc://SwiftUIKit/documentation/SwiftUIKit/DocumentCamera":{"role":"symbol","title":"DocumentCamera","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DocumentCamera"}],"abstract":[{"type":"text","text":"This view can be used to open a camera that can scan one or"},{"type":"text","text":" "},{"type":"text","text":"multiple pages in a physical document."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/DocumentCamera","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DocumentCamera"}],"url":"\/documentation\/swiftuikit\/documentcamera"},"doc://SwiftUIKit/documentation/SwiftUIKit/ImagePicker":{"role":"symbol","title":"ImagePicker","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ImagePicker"}],"abstract":[{"type":"text","text":"This picker wraps a "},{"type":"codeVoice","code":"UIImagePickerController"},{"type":"text","text":", which can be"},{"type":"text","text":" "},{"type":"text","text":"used to pick an images from photos, the camera etc."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/ImagePicker","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ImagePicker"}],"url":"\/documentation\/swiftuikit\/imagepicker"},"doc://SwiftUIKit/documentation/SwiftUIKit/ListPickerSection":{"role":"symbol","title":"ListPickerSection","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ListPickerSection"}],"abstract":[{"type":"text","text":"This type can be used to defina a section in a list picker."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/ListPickerSection","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ListPickerSection"}],"url":"\/documentation\/swiftuikit\/listpickersection"},"doc://SwiftUIKit/documentation/SwiftUIKit/ItemPrinter":{"role":"symbol","title":"ItemPrinter","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ItemPrinter"}],"abstract":[{"type":"text","text":"This protocol can be implemented by a type that can be used"},{"type":"text","text":" "},{"type":"text","text":"to print printable items."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/ItemPrinter","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ItemPrinter"}],"url":"\/documentation\/swiftuikit\/itemprinter"},"doc://SwiftUIKit/documentation/SwiftUIKit/DismissableView":{"role":"symbol","title":"DismissableView","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DismissableView"}],"abstract":[{"type":"text","text":"This protocol simplifies dismissing "},{"type":"codeVoice","code":"SwiftUI"},{"type":"text","text":" views, e.g. a"},{"type":"text","text":" "},{"type":"text","text":"view that is presented as a modal sheet."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/DismissableView","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DismissableView"}],"url":"\/documentation\/swiftuikit\/dismissableview"},"doc://SwiftUIKit/documentation/SwiftUIKit/FormTextEditor":{"role":"symbol","title":"FormTextEditor","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FormTextEditor"}],"abstract":[{"type":"text","text":"This view can be used to present text fields in a list form."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/FormTextEditor","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FormTextEditor"}],"url":"\/documentation\/swiftuikit\/formtexteditor"},"doc://SwiftUIKit/documentation/SwiftUIKit/UrlOpener":{"role":"symbol","title":"UrlOpener","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"UrlOpener"}],"abstract":[{"type":"text","text":"This protocol can be implemented by anything that should be"},{"type":"text","text":" "},{"type":"text","text":"able to open a URL."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/UrlOpener","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"UrlOpener"}],"url":"\/documentation\/swiftuikit\/urlopener"},"doc://SwiftUIKit/documentation/SwiftUIKit/MultilineText":{"role":"symbol","title":"MultilineText","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MultilineText"}],"abstract":[{"type":"text","text":"This view can be used to force text to display properly for"},{"type":"text","text":" "},{"type":"text","text":"multiline texts. This view also accepts markdown content."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/MultilineText","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MultilineText"}],"url":"\/documentation\/swiftuikit\/multilinetext"},"doc://SwiftUIKit/documentation/SwiftUIKit/FolderMonitor":{"role":"symbol","title":"FolderMonitor","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"FolderMonitor"}],"abstract":[{"type":"text","text":"This class can be used to monitor file system changes for a"},{"type":"text","text":" "},{"type":"text","text":"certain folder."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/FolderMonitor","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FolderMonitor"}],"url":"\/documentation\/swiftuikit\/foldermonitor"},"doc://SwiftUIKit/documentation/SwiftUIKit/FontStyle":{"role":"symbol","title":"FontStyle","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FontStyle"}],"abstract":[{"type":"text","text":"This struct represents a custom font with a "},{"type":"codeVoice","code":"name"},{"type":"text","text":", "},{"type":"codeVoice","code":"style"},{"type":"text","text":" "},{"type":"text","text":"and "},{"type":"codeVoice","code":"weight"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/FontStyle","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FontStyle"}],"url":"\/documentation\/swiftuikit\/fontstyle"},"doc://SwiftUIKit/documentation/SwiftUIKit/ForEachMultiPicker":{"role":"symbol","title":"ForEachMultiPicker","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ForEachMultiPicker"}],"abstract":[{"type":"text","text":"This generic picker lists "},{"type":"codeVoice","code":"Identifiable"},{"type":"text","text":" items in a SwiftUI"},{"type":"text","text":" "},{"type":"codeVoice","code":"List"},{"type":"text","text":" and binds its "},{"type":"codeVoice","code":"selection"},{"type":"text","text":" to an external value."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/ForEachMultiPicker","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ForEachMultiPicker"}],"url":"\/documentation\/swiftuikit\/foreachmultipicker"},"doc://SwiftUIKit/documentation/SwiftUIKit/CornerRadiusStyle":{"role":"symbol","title":"CornerRadiusStyle","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CornerRadiusStyle"}],"abstract":[{"type":"text","text":"This struct represents a style with a property that matches"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"SwiftUI"},{"type":"text","text":"s "},{"type":"codeVoice","code":"cornerRadius"},{"type":"text","text":" modifier."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/CornerRadiusStyle","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CornerRadiusStyle"}],"url":"\/documentation\/swiftuikit\/cornerradiusstyle"},"doc://SwiftUIKit/documentation/SwiftUIKit/SheetContext":{"role":"symbol","title":"SheetContext","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SheetContext"}],"abstract":[{"type":"text","text":"This context can be used to present any "},{"type":"codeVoice","code":"SwiftUI"},{"type":"text","text":" view as a"},{"type":"text","text":" "},{"type":"text","text":"modal sheet. You can either present plain views or anything"},{"type":"text","text":" "},{"type":"text","text":"that implements "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/SheetProvider"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/SheetContext","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SheetContext"}],"url":"\/documentation\/swiftuikit\/sheetcontext"},"doc://SwiftUIKit/documentation/SwiftUIKit/SystemFontPickerItem":{"role":"symbol","title":"SystemFontPickerItem","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SystemFontPickerItem"}],"abstract":[{"type":"text","text":"This picker item displays the provided font."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/SystemFontPickerItem","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SystemFontPickerItem"}],"url":"\/documentation\/swiftuikit\/systemfontpickeritem"},"doc://SwiftUIKit/documentation/SwiftUIKit/FolderObservable":{"role":"symbol","title":"FolderObservable","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"FolderObservable"}],"abstract":[{"type":"text","text":"This class can be used to observe file system changes for a"},{"type":"text","text":" "},{"type":"text","text":"certain folder."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/FolderObservable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FolderObservable"}],"url":"\/documentation\/swiftuikit\/folderobservable"},"doc://SwiftUIKit/documentation/SwiftUIKit/ListMultiPicker":{"role":"symbol","title":"ListMultiPicker","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ListMultiPicker"}],"abstract":[{"type":"text","text":"This generic picker lists "},{"type":"codeVoice","code":"Identifiable"},{"type":"text","text":" items in a SwiftUI"},{"type":"text","text":" "},{"type":"codeVoice","code":"List"},{"type":"text","text":" and binds its "},{"type":"codeVoice","code":"selection"},{"type":"text","text":" to an external value."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/ListMultiPicker","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ListMultiPicker"}],"url":"\/documentation\/swiftuikit\/listmultipicker"},"doc://SwiftUIKit/documentation/SwiftUIKit/SystemFontPickerFont":{"role":"symbol","title":"SystemFontPickerFont","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SystemFontPickerFont"}],"abstract":[{"type":"text","text":"This struct is used by the various font pickers to make the"},{"type":"text","text":" "},{"type":"text","text":"font type platform-agnostic."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/SystemFontPickerFont","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SystemFontPickerFont"}],"url":"\/documentation\/swiftuikit\/systemfontpickerfont"},"doc://SwiftUIKit/documentation/SwiftUIKit/AlertContext":{"role":"symbol","title":"AlertContext","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AlertContext"}],"abstract":[{"type":"text","text":"This context can be used to present "},{"type":"codeVoice","code":"SwiftUI"},{"type":"text","text":" "},{"type":"codeVoice","code":"Alert"},{"type":"text","text":"s. You"},{"type":"text","text":" "},{"type":"text","text":"can either present plain "},{"type":"codeVoice","code":"Alert"},{"type":"text","text":" instances or anything that"},{"type":"text","text":" "},{"type":"text","text":"implements "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/AlertProvider"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/AlertContext","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AlertContext"}],"url":"\/documentation\/swiftuikit\/alertcontext"},"doc://SwiftUIKit/documentation/SwiftUIKit/AlertProvider":{"role":"symbol","title":"AlertProvider","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AlertProvider"}],"abstract":[{"type":"text","text":"This protocol can be implemented by anything (e.g. a struct,"},{"type":"text","text":" "},{"type":"text","text":"enum or class) that can provide a SwiftUI "},{"type":"codeVoice","code":"Alert"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/AlertProvider","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AlertProvider"}],"url":"\/documentation\/swiftuikit\/alertprovider"},"doc://SwiftUIKit/documentation/SwiftUIKit/CustomRoundedRectangle":{"role":"symbol","title":"CustomRoundedRectangle","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CustomRoundedRectangle"}],"abstract":[{"type":"text","text":"This shape is a rounded rectangle where every corner can be"},{"type":"text","text":" "},{"type":"text","text":"given a custom corner radius."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/CustomRoundedRectangle","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CustomRoundedRectangle"}],"url":"\/documentation\/swiftuikit\/customroundedrectangle"},"doc://SwiftUIKit/documentation/SwiftUIKit/PageIndicator":{"role":"symbol","title":"PageIndicator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PageIndicator"}],"abstract":[{"type":"text","text":"This view can be used to display a horizontal collection of"},{"type":"text","text":" "},{"type":"text","text":"dots that are bound to pages in a page view."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/PageIndicator","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PageIndicator"}],"url":"\/documentation\/swiftuikit\/pageindicator"},"doc://SwiftUIKit/documentation/SwiftUIKit/PhotoCamera":{"role":"symbol","title":"PhotoCamera","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PhotoCamera"}],"abstract":[{"type":"text","text":"This view can be used to open a camera that can take photos."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/PhotoCamera","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PhotoCamera"}],"url":"\/documentation\/swiftuikit\/photocamera"},"doc://SwiftUIKit/documentation/SwiftUIKit/TextReplacement":{"role":"symbol","title":"TextReplacement","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TextReplacement"}],"abstract":[{"type":"text","text":"This view replaces a certain string with a replacement text"},{"type":"text","text":" "},{"type":"text","text":"view, then joins all views into a single "},{"type":"codeVoice","code":"HStack"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/TextReplacement","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TextReplacement"}],"url":"\/documentation\/swiftuikit\/textreplacement"},"doc://SwiftUIKit/documentation/SwiftUIKit/ListButtonStyle":{"role":"symbol","title":"ListButtonStyle","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ListButtonStyle"}],"abstract":[{"type":"text","text":"This button style makes the button label take up the entire"},{"type":"text","text":" "},{"type":"text","text":"width and applies a content shape that makes the entire row"},{"type":"text","text":" "},{"type":"text","text":"tappable."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/ListButtonStyle","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ListButtonStyle"}],"url":"\/documentation\/swiftuikit\/listbuttonstyle"}}}