{"interfaceLanguages":{"swift":[{"children":[{"title":"Cameras","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/documentcamera\/init(cancelaction:resultaction:)","title":"init(cancelAction: CancelAction, resultAction: ResultAction)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/documentcamera\/makecoordinator()","title":"func makeCoordinator() -> Coordinator","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/makeuiviewcontroller(context:)","title":"func makeUIViewController(context: Context) -> VNDocumentCameraViewController","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/updateuiviewcontroller(_:context:)","title":"func updateUIViewController(VNDocumentCameraViewController, context: Context)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/documentcamera\/cameraresult","title":"DocumentCamera.CameraResult","type":"typealias"},{"path":"\/documentation\/swiftuikit\/documentcamera\/cancelaction","title":"DocumentCamera.CancelAction","type":"typealias"},{"path":"\/documentation\/swiftuikit\/documentcamera\/resultaction","title":"DocumentCamera.ResultAction","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/documentcamera\/coordinator\/init(cancelaction:resultaction:)","title":"init(cancelAction: DocumentCamera.CancelAction, resultAction: DocumentCamera.ResultAction)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/documentcamera\/coordinator\/documentcameraviewcontroller(_:didfailwitherror:)","title":"func documentCameraViewController(VNDocumentCameraViewController, didFailWithError: Error)","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/coordinator\/documentcameraviewcontroller(_:didfinishwith:)","title":"func documentCameraViewController(VNDocumentCameraViewController, didFinishWith: VNDocumentCameraScan)","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/coordinator\/documentcameraviewcontrollerdidcancel(_:)","title":"func documentCameraViewControllerDidCancel(VNDocumentCameraViewController)","type":"method"}],"path":"\/documentation\/swiftuikit\/documentcamera\/coordinator","title":"DocumentCamera.Coordinator","type":"class"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/documentcamera\/body","title":"var body: Never","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/documentcamera\/sizethatfits(_:uiviewcontroller:context:)","title":"func sizeThatFits(ProposedViewSize, uiViewController: Self.UIViewControllerType, context: Self.Context) -> CGSize?","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/documentcamera\/dismantleuiviewcontroller(_:coordinator:)","title":"static func dismantleUIViewController(Self.UIViewControllerType, coordinator: Self.Coordinator)","type":"method"}],"path":"\/documentation\/swiftuikit\/documentcamera\/uiviewcontrollerrepresentable-implementations","title":"UIViewControllerRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/documentcamera\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/documentcamera\/accessibility(activationpoint:)-1zxl8","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/documentcamera\/accessibility(activationpoint:)-8i8p7","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/documentcamera\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/documentcamera\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/documentcamera\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/documentcamera\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/documentcamera\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/documentcamera\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/documentcamera\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/documentcamera\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/documentcamera\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/accessibilityaction(named:_:)","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/accessibilityactivationpoint(_:)-1gfmz","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/accessibilityactivationpoint(_:)-6k5bq","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/accessibilitycustomcontent(_:_:importance:)-1mw7z","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/accessibilitycustomcontent(_:_:importance:)-5ggyc","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/accessibilitycustomcontent(_:_:importance:)-66ylb","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/accessibilitycustomcontent(_:_:importance:)-7livi","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/accessibilitycustomcontent(_:_:importance:)-8nxa7","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/accessibilitycustomcontent(_:_:importance:)-8wtl","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/accessibilitycustomcontent(_:_:importance:)-9cl9y","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/accessibilitycustomcontent(_:_:importance:)-qq65","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/accessibilityhint(_:)-1b7pf","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/accessibilityhint(_:)-6zwoo","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/accessibilityhint(_:)-8olpz","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/accessibilityinputlabels(_:)-283w4","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/accessibilityinputlabels(_:)-47rwk","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/accessibilityinputlabels(_:)-5h1ic","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/accessibilitylabel(_:)-26b1r","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/accessibilitylabel(_:)-6poq7","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/accessibilitylabel(_:)-8fwg5","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/accessibilityrotor(_:entries:)-406p1","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/accessibilityrotor(_:entries:)-6vxab","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/accessibilityrotor(_:entries:)-7hatv","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/accessibilityrotor(_:entries:)-8ko7n","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/accessibilityrotor(_:entries:entryid:entrylabel:)-1ae98","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/accessibilityrotor(_:entries:entryid:entrylabel:)-1iy3u","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/accessibilityrotor(_:entries:entryid:entrylabel:)-336au","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/accessibilityrotor(_:entries:entryid:entrylabel:)-8vrjm","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/accessibilityrotor(_:entries:entrylabel:)-3r7vb","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/accessibilityrotor(_:entries:entrylabel:)-4p3dw","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/accessibilityrotor(_:entries:entrylabel:)-7ttv","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/accessibilityrotor(_:entries:entrylabel:)-9bvs7","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/accessibilityrotor(_:textranges:)-3w2ry","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/accessibilityrotor(_:textranges:)-4h44u","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/accessibilityrotor(_:textranges:)-9z3on","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/accessibilityrotor(_:textranges:)-zg6h","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/accessibilityvalue(_:)-59gz1","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/accessibilityvalue(_:)-76qxr","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/accessibilityvalue(_:)-x371","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/documentcamera\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/documentcamera\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/alert(_:)","title":"func alert(AlertContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/alert(_:ispresented:actions:)-1zwzo","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/alert(_:ispresented:actions:)-85fcc","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/alert(_:ispresented:actions:)-xdif","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/alert(_:ispresented:actions:message:)-3jfrz","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/alert(_:ispresented:actions:message:)-6kgtd","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/alert(_:ispresented:actions:message:)-7rism","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/alert(_:ispresented:presenting:actions:)-3uynv","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/alert(_:ispresented:presenting:actions:)-6ldfg","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/alert(_:ispresented:presenting:actions:)-740bi","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/alert(_:ispresented:presenting:actions:message:)-2bnk5","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/alert(_:ispresented:presenting:actions:message:)-4u17d","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/alert(_:ispresented:presenting:actions:message:)-8tpog","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/documentcamera\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/documentcamera\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/alignmentguide(_:computevalue:)-6ozbi","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/alignmentguide(_:computevalue:)-9khzv","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/documentcamera\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/any()","title":"func any() -> AnyView","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/aspectratio(_:contentmode:)-1gzvp","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/aspectratio(_:contentmode:)-48c82","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/documentcamera\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/autosave(_:debounceinterval:action:)","title":"func autosave<T>(Published<T>.Publisher, debounceInterval: RunLoop.SchedulerTimeType.Stride, action: () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/documentcamera\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/background(_:in:fillstyle:)-8daac","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/background(_:in:fillstyle:)-9naew","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/background(in:fillstyle:)-50o2t","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/background(in:fillstyle:)-7cza7","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/badge(_:)-16v7s","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/badge(_:)-271kc","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/badge(_:)-5hq88","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/badge(_:)-7gv62","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/bindsafeareainsets(to:)","title":"func bindSafeAreaInsets(to: Binding<EdgeInsets>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/bindsize(to:)","title":"func bindSize(to: Binding<CGSize>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/border(_:width:cornerradius:)","title":"func border<Content>(Content, width: CGFloat, cornerRadius: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/buttonstyle(_:)-5tr28","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/buttonstyle(_:)-705ov","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/documentcamera\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/confirmationdialog(_:ispresented:titlevisibility:actions:)-527nc","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/confirmationdialog(_:ispresented:titlevisibility:actions:)-6gj39","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/confirmationdialog(_:ispresented:titlevisibility:actions:)-8iofs","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-47mkv","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-84gfi","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-jxas","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-1n86f","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-4cx1k","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-5zcsx","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-3vr93","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-brtv","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-sn9e","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/documentcamera\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/documentcamera\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/cornerradius(_:)","title":"func cornerRadius(CornerRadiusStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/documentcamera\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/disabledynamictype(sizecategory:)","title":"func disableDynamicType(sizeCategory: ContentSizeCategory) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/dynamictypesize(_:)-8vazt","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/dynamictypesize(_:)-9r0ae","title":"func dynamicTypeSize<T>(T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/documentcamera\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/enabled(_:)","title":"func enabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-1e6f7","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-4tred","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/fileexporter(ispresented:documents:contenttype:oncompletion:)-1iheb","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/fileexporter(ispresented:documents:contenttype:oncompletion:)-7rgf1","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/focusedobject(_:)-1q0p3","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/focusedobject(_:)-228fc","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/focusedsceneobject(_:)-4fdy4","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/focusedsceneobject(_:)-73bbg","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/focusedscenevalue(_:_:)-1tn9r","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/focusedscenevalue(_:_:)-26mn6","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/focusedvalue(_:_:)-4rdat","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/focusedvalue(_:_:)-7c70p","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/font(_:)-6tqm5","title":"func font(FontStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/font(_:)-6wha5","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/font(identifier:style:weight:)","title":"func font(identifier: FontIdentifier, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/font(name:style:weight:)","title":"func font(name: String, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/frame(_:)","title":"func frame(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/frame(square:)","title":"func frame(square: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/fullscreencover(_:)","title":"func fullScreenCover(FullScreenCoverContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/height(_:)","title":"func height(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/help(_:)-1pabf","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/help(_:)-9aems","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/help(_:)-q9v4","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/hidden(if:)","title":"func hidden(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/hidekeyboard()","title":"func hideKeyboard()","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/keyboardshortcut(_:)-93xes","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/keyboardshortcut(_:)-kig3","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/linelimit(_:)","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/listitemtint(_:)-50n5k","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/listitemtint(_:)-67qm1","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/documentcamera\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/documentcamera\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/documentcamera\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/documentcamera\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/documentcamera\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/documentcamera\/navigationbartitle(_:)-39o68","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/documentcamera\/navigationbartitle(_:)-597vw","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/documentcamera\/navigationbartitle(_:)-5batz","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/documentcamera\/navigationbartitle(_:displaymode:)-69dfb","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/documentcamera\/navigationbartitle(_:displaymode:)-6y56g","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/documentcamera\/navigationbartitle(_:displaymode:)-7u0so","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/navigationdocument(_:)-5dcx7","title":"func navigationDocument<D>(D) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/navigationdocument(_:)-9vkj9","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/navigationdocument(_:preview:)-1iym9","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/navigationdocument(_:preview:)-1n1be","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/navigationdocument(_:preview:)-3t1oa","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/navigationdocument(_:preview:)-635jh","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/navigationtitle(_:)-2hhiz","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/navigationtitle(_:)-3ajiv","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/navigationtitle(_:)-3d7t","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/navigationtitle(_:)-3rm3k","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/navigationtitle(_:)-7jm4m","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/documentcamera\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/ondrop(of:delegate:)-3w8c1","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/documentcamera\/ondrop(of:delegate:)-555lz","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/documentcamera\/ondrop(of:istargeted:perform:)-2c0v1","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/ondrop(of:istargeted:perform:)-3vs9u","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/ondrop(of:istargeted:perform:)-80rog","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/documentcamera\/ondrop(of:istargeted:perform:)-9tqp5","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/documentcamera\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/documentcamera\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/onswipegesture(maximumtime:minimumdistance:maximumdistance:gesturetimer:up:left:right:down:)","title":"func onSwipeGesture(maximumTime: TimeInterval, minimumDistance: CGFloat, maximumDistance: CGFloat, gestureTimer: GestureTimer, up: () -> Void, left: () -> Void, right: () -> Void, down: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/documentcamera\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/padding(_:)-64mjy","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/padding(_:)-8mo9l","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/preferspersistentsystemoverlayshidden()","title":"func prefersPersistentSystemOverlaysHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/presentationdetents(undimmed:largestundimmed:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/presentationdetents(undimmed:largestundimmed:selection:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/renameaction(_:)-7awnc","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/renameaction(_:)-8f6ln","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/safeareainset(edge:alignment:spacing:content:)-6c57n","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/safeareainset(edge:alignment:spacing:content:)-7nvgm","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/scaleeffect(_:anchor:)-7dxw7","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/scaleeffect(_:anchor:)-8die","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/searchcompletion(_:)-6tjoo","title":"func searchCompletion<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/searchcompletion(_:)-7c7sx","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/searchable(if:text:placement:prompt:)","title":"func searchable(if: Bool, text: Binding<String>, placement: SearchFieldPlacement, prompt: String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/searchable(text:placement:prompt:)-1w73f","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/searchable(text:placement:prompt:)-6cr4l","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/searchable(text:placement:prompt:)-84zhb","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/documentcamera\/searchable(text:placement:prompt:suggestions:)-1gpqp","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/documentcamera\/searchable(text:placement:prompt:suggestions:)-38edd","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/documentcamera\/searchable(text:placement:prompt:suggestions:)-51v6y","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/searchable(text:tokens:placement:prompt:token:)-2kh2s","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/searchable(text:tokens:placement:prompt:token:)-6esse","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/searchable(text:tokens:placement:prompt:token:)-r68z","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-3ykwq","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-gyjx","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-mv6r","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/shadow(_:)","title":"func shadow(ViewShadowStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/sheet(_:)","title":"func sheet(SheetContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/documentcamera\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/tint(_:)-5gmv2","title":"func tint<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/tint(_:)-6ipss","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/toolbar(content:)-2hrtk","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/toolbar(content:)-8h1wv","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/toolbarbackground(_:for:)-37hdm","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/toolbarbackground(_:for:)-qttl","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/visible(if:)","title":"func visible(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/width(_:)","title":"func width(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/documentcamera\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/swiftuikit\/documentcamera\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/swiftuikit\/documentcamera","title":"DocumentCamera","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/photocamera\/init(cancelaction:resultaction:)","title":"init(cancelAction: ImagePicker.CancelAction, resultAction: ImagePicker.ResultAction)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/photocamera\/body","title":"var body: some View","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/photocamera\/cameraresult","title":"PhotoCamera.CameraResult","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/photocamera\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/photocamera\/accessibility(activationpoint:)-3ojoe","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/photocamera\/accessibility(activationpoint:)-6i8yu","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/photocamera\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/photocamera\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/photocamera\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/photocamera\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/photocamera\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/photocamera\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/photocamera\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/photocamera\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/photocamera\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/accessibilityaction(named:_:)","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/accessibilityactivationpoint(_:)-1n3uk","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/accessibilityactivationpoint(_:)-6q5zn","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/accessibilitycustomcontent(_:_:importance:)-310no","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/accessibilitycustomcontent(_:_:importance:)-4pk8m","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/accessibilitycustomcontent(_:_:importance:)-4yfzu","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/accessibilitycustomcontent(_:_:importance:)-6kazf","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/accessibilitycustomcontent(_:_:importance:)-75k6v","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/accessibilitycustomcontent(_:_:importance:)-7o51q","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/accessibilitycustomcontent(_:_:importance:)-8ecj9","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/accessibilitycustomcontent(_:_:importance:)-9oj6t","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/accessibilityhint(_:)-1gy4k","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/accessibilityhint(_:)-7cbql","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/accessibilityhint(_:)-95v7i","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/accessibilityinputlabels(_:)-77rdj","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/accessibilityinputlabels(_:)-skl2","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/accessibilityinputlabels(_:)-u3dn","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/accessibilitylabel(_:)-4g0va","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/accessibilitylabel(_:)-5w74","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/accessibilitylabel(_:)-6wfry","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/accessibilityrotor(_:entries:)-7yvyv","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/accessibilityrotor(_:entries:)-8whnc","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/accessibilityrotor(_:entries:)-9yqus","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/accessibilityrotor(_:entries:)-fd3t","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/accessibilityrotor(_:entries:entryid:entrylabel:)-4cv1n","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/accessibilityrotor(_:entries:entryid:entrylabel:)-7vofq","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/accessibilityrotor(_:entries:entryid:entrylabel:)-90idr","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/accessibilityrotor(_:entries:entryid:entrylabel:)-g393","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/accessibilityrotor(_:entries:entrylabel:)-58u6o","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/accessibilityrotor(_:entries:entrylabel:)-6tkma","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/accessibilityrotor(_:entries:entrylabel:)-7nvpi","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/accessibilityrotor(_:entries:entrylabel:)-9cso8","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/accessibilityrotor(_:textranges:)-1vu8n","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/accessibilityrotor(_:textranges:)-2eqzr","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/accessibilityrotor(_:textranges:)-8dc6s","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/accessibilityrotor(_:textranges:)-hrtk","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/accessibilityvalue(_:)-1q3ti","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/accessibilityvalue(_:)-3a5e","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/accessibilityvalue(_:)-9nafo","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/photocamera\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/photocamera\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/alert(_:)","title":"func alert(AlertContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/alert(_:ispresented:actions:)-4vtm6","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/alert(_:ispresented:actions:)-8u6u","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/alert(_:ispresented:actions:)-bbb","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/alert(_:ispresented:actions:message:)-68kk1","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/alert(_:ispresented:actions:message:)-6or47","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/alert(_:ispresented:actions:message:)-8vol3","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/alert(_:ispresented:presenting:actions:)-1aiih","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/alert(_:ispresented:presenting:actions:)-276l4","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/alert(_:ispresented:presenting:actions:)-2glp6","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/alert(_:ispresented:presenting:actions:message:)-5067e","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/alert(_:ispresented:presenting:actions:message:)-72avx","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/alert(_:ispresented:presenting:actions:message:)-7xd5j","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/photocamera\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/photocamera\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/alignmentguide(_:computevalue:)-4ku8b","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/alignmentguide(_:computevalue:)-9u1z","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/photocamera\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/any()","title":"func any() -> AnyView","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/aspectratio(_:contentmode:)-20jbp","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/aspectratio(_:contentmode:)-5co1i","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/photocamera\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/autosave(_:debounceinterval:action:)","title":"func autosave<T>(Published<T>.Publisher, debounceInterval: RunLoop.SchedulerTimeType.Stride, action: () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/photocamera\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/background(_:in:fillstyle:)-8p7pw","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/background(_:in:fillstyle:)-z19z","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/background(in:fillstyle:)-2pmos","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/background(in:fillstyle:)-3f9gt","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/badge(_:)-2trs8","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/badge(_:)-77w6r","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/badge(_:)-7ihqq","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/badge(_:)-pl1o","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/bindsafeareainsets(to:)","title":"func bindSafeAreaInsets(to: Binding<EdgeInsets>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/bindsize(to:)","title":"func bindSize(to: Binding<CGSize>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/border(_:width:cornerradius:)","title":"func border<Content>(Content, width: CGFloat, cornerRadius: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/buttonstyle(_:)-6gpab","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/buttonstyle(_:)-6u72n","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/photocamera\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/confirmationdialog(_:ispresented:titlevisibility:actions:)-1y90r","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/confirmationdialog(_:ispresented:titlevisibility:actions:)-7c333","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/confirmationdialog(_:ispresented:titlevisibility:actions:)-835dh","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-4lsgf","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-4p81n","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-66cp9","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-6rgem","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-70lm7","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-9she8","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-31bf9","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-395az","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-9691h","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/photocamera\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/photocamera\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/cornerradius(_:)","title":"func cornerRadius(CornerRadiusStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/photocamera\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/disabledynamictype(sizecategory:)","title":"func disableDynamicType(sizeCategory: ContentSizeCategory) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/dynamictypesize(_:)-7q5gq","title":"func dynamicTypeSize<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/dynamictypesize(_:)-9sgl5","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/photocamera\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/enabled(_:)","title":"func enabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-2eewu","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-4q5n9","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/fileexporter(ispresented:documents:contenttype:oncompletion:)-4ab4p","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/fileexporter(ispresented:documents:contenttype:oncompletion:)-54iyc","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/focusedobject(_:)-41kca","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/focusedobject(_:)-4e5zu","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/focusedsceneobject(_:)-1nezi","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/focusedsceneobject(_:)-jblp","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/focusedscenevalue(_:_:)-2vahl","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/focusedscenevalue(_:_:)-84xse","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/focusedvalue(_:_:)-6o6xy","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/focusedvalue(_:_:)-876fx","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/font(_:)-72ksd","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/font(_:)-7ridn","title":"func font(FontStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/font(identifier:style:weight:)","title":"func font(identifier: FontIdentifier, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/font(name:style:weight:)","title":"func font(name: String, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/frame(_:)","title":"func frame(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/frame(square:)","title":"func frame(square: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/fullscreencover(_:)","title":"func fullScreenCover(FullScreenCoverContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/height(_:)","title":"func height(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/help(_:)-7f7au","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/help(_:)-8c61u","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/help(_:)-971ea","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/hidden(if:)","title":"func hidden(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/hidekeyboard()","title":"func hideKeyboard()","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/keyboardshortcut(_:)-4wtcg","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/keyboardshortcut(_:)-5ubdk","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/linelimit(_:)","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/listitemtint(_:)-43q8t","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/listitemtint(_:)-9cv9i","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/photocamera\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/photocamera\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/photocamera\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/photocamera\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/photocamera\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/photocamera\/navigationbartitle(_:)-5fiwn","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/photocamera\/navigationbartitle(_:)-7f8ir","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/photocamera\/navigationbartitle(_:)-97u6u","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/photocamera\/navigationbartitle(_:displaymode:)-47c5r","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/photocamera\/navigationbartitle(_:displaymode:)-8gf79","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/photocamera\/navigationbartitle(_:displaymode:)-9fu8d","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/navigationdocument(_:)-3ctr0","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/navigationdocument(_:)-96rml","title":"func navigationDocument<D>(D) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/navigationdocument(_:preview:)-14oka","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/navigationdocument(_:preview:)-52xxl","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/navigationdocument(_:preview:)-6qoh5","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/navigationdocument(_:preview:)-7n8rl","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/navigationtitle(_:)-1xsze","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/navigationtitle(_:)-33ay6","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/navigationtitle(_:)-380u","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/navigationtitle(_:)-970at","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/navigationtitle(_:)-9j4oj","title":"func navigationTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/photocamera\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/ondrop(of:delegate:)-5iosd","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/photocamera\/ondrop(of:delegate:)-6nhg5","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/ondrop(of:istargeted:perform:)-4y62t","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/ondrop(of:istargeted:perform:)-640v5","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/photocamera\/ondrop(of:istargeted:perform:)-6vs9n","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/photocamera\/ondrop(of:istargeted:perform:)-8sjfs","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/photocamera\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/photocamera\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/onswipegesture(maximumtime:minimumdistance:maximumdistance:gesturetimer:up:left:right:down:)","title":"func onSwipeGesture(maximumTime: TimeInterval, minimumDistance: CGFloat, maximumDistance: CGFloat, gestureTimer: GestureTimer, up: () -> Void, left: () -> Void, right: () -> Void, down: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/photocamera\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/padding(_:)-4d1gn","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/padding(_:)-91qjb","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/preferspersistentsystemoverlayshidden()","title":"func prefersPersistentSystemOverlaysHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/presentationdetents(undimmed:largestundimmed:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/presentationdetents(undimmed:largestundimmed:selection:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/renameaction(_:)-5c0rk","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/renameaction(_:)-6ydqm","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/safeareainset(edge:alignment:spacing:content:)-29drm","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/safeareainset(edge:alignment:spacing:content:)-4ovi1","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/scaleeffect(_:anchor:)-4blu0","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/scaleeffect(_:anchor:)-9r5x","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/searchcompletion(_:)-3vsnh","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/searchcompletion(_:)-69xsw","title":"func searchCompletion<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/searchable(if:text:placement:prompt:)","title":"func searchable(if: Bool, text: Binding<String>, placement: SearchFieldPlacement, prompt: String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/searchable(text:placement:prompt:)-71q5a","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/searchable(text:placement:prompt:)-81zs3","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/searchable(text:placement:prompt:)-iet","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/photocamera\/searchable(text:placement:prompt:suggestions:)-3lf6r","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/photocamera\/searchable(text:placement:prompt:suggestions:)-4u6qo","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/photocamera\/searchable(text:placement:prompt:suggestions:)-5m41z","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/searchable(text:tokens:placement:prompt:token:)-242v6","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/searchable(text:tokens:placement:prompt:token:)-7k0ns","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/searchable(text:tokens:placement:prompt:token:)-8ogcg","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-1o4w0","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-1reip","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-4djdm","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/shadow(_:)","title":"func shadow(ViewShadowStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/sheet(_:)","title":"func sheet(SheetContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/photocamera\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/tint(_:)-6pdlb","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/tint(_:)-7gigr","title":"func tint<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/toolbar(content:)-5aohm","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/toolbar(content:)-5grpn","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/toolbarbackground(_:for:)-9mkzn","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/toolbarbackground(_:for:)-pbrz","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/visible(if:)","title":"func visible(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/width(_:)","title":"func width(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/photocamera\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/swiftuikit\/photocamera\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/swiftuikit\/photocamera","title":"PhotoCamera","type":"struct"},{"title":"Colors","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/colorrepresentable","title":"ColorRepresentable","type":"typealias"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/systemcolor\/black","title":"case black","type":"case"},{"path":"\/documentation\/swiftuikit\/systemcolor\/blue","title":"case blue","type":"case"},{"path":"\/documentation\/swiftuikit\/systemcolor\/brown","title":"case brown","type":"case"},{"path":"\/documentation\/swiftuikit\/systemcolor\/clear","title":"case clear","type":"case"},{"path":"\/documentation\/swiftuikit\/systemcolor\/cyan","title":"case cyan","type":"case"},{"path":"\/documentation\/swiftuikit\/systemcolor\/darkgray","title":"case darkGray","type":"case"},{"path":"\/documentation\/swiftuikit\/systemcolor\/gray","title":"case gray","type":"case"},{"path":"\/documentation\/swiftuikit\/systemcolor\/green","title":"case green","type":"case"},{"path":"\/documentation\/swiftuikit\/systemcolor\/indigo","title":"case indigo","type":"case"},{"path":"\/documentation\/swiftuikit\/systemcolor\/label","title":"case label","type":"case"},{"path":"\/documentation\/swiftuikit\/systemcolor\/lightgray","title":"case lightGray","type":"case"},{"path":"\/documentation\/swiftuikit\/systemcolor\/magenta","title":"case magenta","type":"case"},{"path":"\/documentation\/swiftuikit\/systemcolor\/mint","title":"case mint","type":"case"},{"path":"\/documentation\/swiftuikit\/systemcolor\/orange","title":"case orange","type":"case"},{"path":"\/documentation\/swiftuikit\/systemcolor\/pink","title":"case pink","type":"case"},{"path":"\/documentation\/swiftuikit\/systemcolor\/primary","title":"case primary","type":"case"},{"path":"\/documentation\/swiftuikit\/systemcolor\/purple","title":"case purple","type":"case"},{"path":"\/documentation\/swiftuikit\/systemcolor\/quaternarylabel","title":"case quaternaryLabel","type":"case"},{"path":"\/documentation\/swiftuikit\/systemcolor\/quaternarysystemfill","title":"case quaternarySystemFill","type":"case"},{"path":"\/documentation\/swiftuikit\/systemcolor\/red","title":"case red","type":"case"},{"path":"\/documentation\/swiftuikit\/systemcolor\/secondary","title":"case secondary","type":"case"},{"path":"\/documentation\/swiftuikit\/systemcolor\/secondarylabel","title":"case secondaryLabel","type":"case"},{"path":"\/documentation\/swiftuikit\/systemcolor\/secondarysystemfill","title":"case secondarySystemFill","type":"case"},{"path":"\/documentation\/swiftuikit\/systemcolor\/systemfill","title":"case systemFill","type":"case"},{"path":"\/documentation\/swiftuikit\/systemcolor\/teal","title":"case teal","type":"case"},{"path":"\/documentation\/swiftuikit\/systemcolor\/tertiarylabel","title":"case tertiaryLabel","type":"case"},{"path":"\/documentation\/swiftuikit\/systemcolor\/tertiarysystemfill","title":"case tertiarySystemFill","type":"case"},{"path":"\/documentation\/swiftuikit\/systemcolor\/white","title":"case white","type":"case"},{"path":"\/documentation\/swiftuikit\/systemcolor\/yellow","title":"case yellow","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/systemcolor\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/systemcolor\/color","title":"var color: Color","type":"property"},{"path":"\/documentation\/swiftuikit\/systemcolor\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/swiftuikit\/systemcolor\/issupported","title":"var isSupported: Bool","type":"property"},{"path":"\/documentation\/swiftuikit\/systemcolor\/name","title":"var name: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/systemcolor\/random","title":"static var random: SystemColor","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/systemcolor\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftuikit\/systemcolor\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/systemcolor\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/systemcolor\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/systemcolor\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftuikit\/systemcolor\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftuikit\/systemcolor\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftuikit\/systemcolor","title":"SystemColor","type":"enum"},{"title":"Data","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/persisted\/init(key:store:defaultvalue:)","title":"init(key: String, store: UserDefaults, defaultValue: Value)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/persisted\/wrappedvalue","title":"var wrappedValue: Value","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/persisted\/update()","title":"func update()","type":"method"}],"path":"\/documentation\/swiftuikit\/persisted\/dynamicproperty-implementations","title":"DynamicProperty Implementations","type":"symbol"}],"path":"\/documentation\/swiftuikit\/persisted","title":"Persisted","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/scancodegenerator\/generatescancode(oftype:from:)","title":"func generateScanCode(ofType: ScanCodeType, from: String) -> ImageRepresentable?","type":"method"},{"path":"\/documentation\/swiftuikit\/scancodegenerator\/generatescancodeview(oftype:from:)","title":"func generateScanCodeView(ofType: ScanCodeType, from: String) -> Image?","type":"method"}],"path":"\/documentation\/swiftuikit\/scancodegenerator","title":"ScanCodeGenerator","type":"protocol"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/scancodetype\/aztek","title":"case aztek","type":"case"},{"path":"\/documentation\/swiftuikit\/scancodetype\/code128","title":"case code128","type":"case"},{"path":"\/documentation\/swiftuikit\/scancodetype\/pdf417","title":"case pdf417","type":"case"},{"path":"\/documentation\/swiftuikit\/scancodetype\/qr","title":"case qr","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/scancodetype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/scancodetype\/cifiltername","title":"var ciFilterName: String","type":"property"},{"path":"\/documentation\/swiftuikit\/scancodetype\/name","title":"var name: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/scancodetype\/barcode","title":"static var barcode: ScanCodeType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/scancodetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftuikit\/scancodetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/scancodetype\/id-2s1d2","title":"var id: ObjectIdentifier","type":"property"},{"path":"\/documentation\/swiftuikit\/scancodetype\/id-3f9tw","title":"var id: String","type":"property"}],"path":"\/documentation\/swiftuikit\/scancodetype\/identifiable-implementations","title":"Identifiable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/scancodetype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/scancodetype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftuikit\/scancodetype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftuikit\/scancodetype","title":"ScanCodeType","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/standardscancodegenerator\/init(scale:)","title":"init(scale: CGFloat)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/standardscancodegenerator\/transform","title":"let transform: CGAffineTransform","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/standardscancodegenerator\/generatescancode(oftype:from:)","title":"func generateScanCode(ofType: ScanCodeType, from: String) -> ImageRepresentable?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/standardscancodegenerator\/generatescancodeview(oftype:from:)","title":"func generateScanCodeView(ofType: ScanCodeType, from: String) -> Image?","type":"method"}],"path":"\/documentation\/swiftuikit\/standardscancodegenerator\/scancodegenerator-implementations","title":"ScanCodeGenerator Implementations","type":"symbol"}],"path":"\/documentation\/swiftuikit\/standardscancodegenerator","title":"StandardScanCodeGenerator","type":"class"},{"title":"Errors","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/erroralerter\/alert","title":"var alert: AlertContext","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/erroralerter\/alert(error:okbuttontext:)","title":"func alert(error: Error, okButtonText: String)","type":"method"},{"path":"\/documentation\/swiftuikit\/erroralerter\/alertasync(error:)","title":"func alertAsync(error: Error)","type":"method"},{"path":"\/documentation\/swiftuikit\/erroralerter\/trywitherroralert(_:)","title":"func tryWithErrorAlert(AsyncOperation)","type":"method"},{"path":"\/documentation\/swiftuikit\/erroralerter\/trywitherroralert(_:completion:)","title":"func tryWithErrorAlert<ErrorType>(BlockOperation<ErrorType>, completion: BlockCompletion<ErrorType>)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/erroralerter\/asyncoperation","title":"ErrorAlerter.AsyncOperation","type":"typealias"},{"path":"\/documentation\/swiftuikit\/erroralerter\/blockcompletion","title":"ErrorAlerter.BlockCompletion","type":"typealias"},{"path":"\/documentation\/swiftuikit\/erroralerter\/blockoperation","title":"ErrorAlerter.BlockOperation","type":"typealias"},{"path":"\/documentation\/swiftuikit\/erroralerter\/blockresult","title":"ErrorAlerter.BlockResult","type":"typealias"}],"path":"\/documentation\/swiftuikit\/erroralerter","title":"ErrorAlerter","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/erroralertconvertible\/erroralert","title":"var errorAlert: Alert","type":"property"},{"path":"\/documentation\/swiftuikit\/erroralertconvertible\/errorbuttontext","title":"var errorButtonText: String","type":"property"},{"path":"\/documentation\/swiftuikit\/erroralertconvertible\/errormessage","title":"var errorMessage: String","type":"property"},{"path":"\/documentation\/swiftuikit\/erroralertconvertible\/errortitle","title":"var errorTitle: String","type":"property"}],"path":"\/documentation\/swiftuikit\/erroralertconvertible","title":"ErrorAlertConvertible","type":"protocol"},{"title":"Files","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/foldermonitor\/init(folderurl:onchange:)","title":"init(folderUrl: URL, onChange: () -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/foldermonitor\/startmonitoring()","title":"func startMonitoring()","type":"method"},{"path":"\/documentation\/swiftuikit\/foldermonitor\/stopmonitoring()","title":"func stopMonitoring()","type":"method"}],"path":"\/documentation\/swiftuikit\/foldermonitor","title":"FolderMonitor","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/folderobservable\/init(folderurl:filemanager:)","title":"init(folderUrl: URL, fileManager: FileManager)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/folderobservable\/files","title":"var files: [URL]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/folderobservable\/objectwillchange","title":"var objectWillChange: ObservableObjectPublisher","type":"property"}],"path":"\/documentation\/swiftuikit\/folderobservable\/observableobject-implementations","title":"ObservableObject Implementations","type":"symbol"}],"path":"\/documentation\/swiftuikit\/folderobservable","title":"FolderObservable","type":"class"},{"title":"Fonts","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/fontrepresentable","title":"FontRepresentable","type":"typealias"},{"title":"Gestures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/gesturetimer\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/gesturetimer\/elapsedtime","title":"var elapsedTime: TimeInterval","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/gesturetimer\/start()","title":"func start()","type":"method"}],"path":"\/documentation\/swiftuikit\/gesturetimer","title":"GestureTimer","type":"class"},{"title":"Images","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/imagerepresentable","title":"ImageRepresentable","type":"typealias"},{"title":"Navigation","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/urlopener\/canopen(_:)-45rbx","title":"func canOpen(URL) -> Bool","type":"method"},{"path":"\/documentation\/swiftuikit\/urlopener\/canopen(_:)-7nz03","title":"func canOpen(URL?) -> Bool","type":"method"},{"path":"\/documentation\/swiftuikit\/urlopener\/canopen(urlstring:)","title":"func canOpen(urlString: String?) -> Bool","type":"method"},{"path":"\/documentation\/swiftuikit\/urlopener\/tryopen(_:completion:)-7aanx","title":"func tryOpen(URL, completion: OpenUrlCompletion)","type":"method"},{"path":"\/documentation\/swiftuikit\/urlopener\/tryopen(_:completion:)-h85h","title":"func tryOpen(URL?, completion: OpenUrlCompletion)","type":"method"},{"path":"\/documentation\/swiftuikit\/urlopener\/tryopen(urlstring:completion:)","title":"func tryOpen(urlString: String?, completion: OpenUrlCompletion)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/urlopener\/openurlcompletion","title":"UrlOpener.OpenUrlCompletion","type":"typealias"}],"path":"\/documentation\/swiftuikit\/urlopener","title":"UrlOpener","type":"protocol"},{"title":"Pickers","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/filepicker\/init(documenttypes:cancelaction:resultaction:)","title":"init(documentTypes: [String], cancelAction: CancelAction, resultAction: ResultAction)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/filepicker\/makecoordinator()","title":"func makeCoordinator() -> Coordinator","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/makeuiviewcontroller(context:)","title":"func makeUIViewController(context: Context) -> UIDocumentPickerViewController","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/updateuiviewcontroller(_:context:)","title":"func updateUIViewController(UIDocumentPickerViewController, context: Context)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/filepicker\/cancelaction","title":"FilePicker.CancelAction","type":"typealias"},{"path":"\/documentation\/swiftuikit\/filepicker\/pickerresult","title":"FilePicker.PickerResult","type":"typealias"},{"path":"\/documentation\/swiftuikit\/filepicker\/resultaction","title":"FilePicker.ResultAction","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/filepicker\/pickererror\/noavailableurl","title":"case noAvailableUrl","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/filepicker\/pickererror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftuikit\/filepicker\/pickererror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/filepicker\/pickererror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/swiftuikit\/filepicker\/pickererror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/swiftuikit\/filepicker\/pickererror","title":"FilePicker.PickerError","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/filepicker\/coordinator\/init(picker:)","title":"init(picker: FilePicker)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/filepicker\/coordinator\/documentpicker(_:didpickdocumentsat:)","title":"func documentPicker(UIDocumentPickerViewController, didPickDocumentsAt: [URL])","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/coordinator\/documentpickerwascancelled(_:)","title":"func documentPickerWasCancelled(UIDocumentPickerViewController)","type":"method"}],"path":"\/documentation\/swiftuikit\/filepicker\/coordinator","title":"FilePicker.Coordinator","type":"class"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/filepicker\/body","title":"var body: Never","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/filepicker\/sizethatfits(_:uiviewcontroller:context:)","title":"func sizeThatFits(ProposedViewSize, uiViewController: Self.UIViewControllerType, context: Self.Context) -> CGSize?","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/filepicker\/dismantleuiviewcontroller(_:coordinator:)","title":"static func dismantleUIViewController(Self.UIViewControllerType, coordinator: Self.Coordinator)","type":"method"}],"path":"\/documentation\/swiftuikit\/filepicker\/uiviewcontrollerrepresentable-implementations","title":"UIViewControllerRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/filepicker\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/filepicker\/accessibility(activationpoint:)-9z4tr","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/filepicker\/accessibility(activationpoint:)-j8ml","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/filepicker\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/filepicker\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/filepicker\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/filepicker\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/filepicker\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/filepicker\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/filepicker\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/filepicker\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/filepicker\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/accessibilityaction(named:_:)","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/accessibilityactivationpoint(_:)-6lvic","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/accessibilityactivationpoint(_:)-n2xm","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/accessibilitycustomcontent(_:_:importance:)-2vtw1","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/accessibilitycustomcontent(_:_:importance:)-342zk","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/accessibilitycustomcontent(_:_:importance:)-3z7k7","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/accessibilitycustomcontent(_:_:importance:)-47p6w","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/accessibilitycustomcontent(_:_:importance:)-4siay","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/accessibilitycustomcontent(_:_:importance:)-65coa","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/accessibilitycustomcontent(_:_:importance:)-8kyh2","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/accessibilitycustomcontent(_:_:importance:)-8yylz","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/accessibilityhint(_:)-3mfa4","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/accessibilityhint(_:)-81d0l","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/accessibilityhint(_:)-pmq5","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/accessibilityinputlabels(_:)-18a2z","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/accessibilityinputlabels(_:)-2iegg","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/accessibilityinputlabels(_:)-6hyln","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/accessibilitylabel(_:)-4hl03","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/accessibilitylabel(_:)-7jrot","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/accessibilitylabel(_:)-84mqq","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/accessibilityrotor(_:entries:)-21vui","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/accessibilityrotor(_:entries:)-2t76v","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/accessibilityrotor(_:entries:)-3xkp3","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/accessibilityrotor(_:entries:)-5ukxv","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/accessibilityrotor(_:entries:entryid:entrylabel:)-2ovwq","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/accessibilityrotor(_:entries:entryid:entrylabel:)-45hs8","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/accessibilityrotor(_:entries:entryid:entrylabel:)-6jh0u","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/accessibilityrotor(_:entries:entryid:entrylabel:)-9s2ch","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/accessibilityrotor(_:entries:entrylabel:)-18nkn","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/accessibilityrotor(_:entries:entrylabel:)-1arb5","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/accessibilityrotor(_:entries:entrylabel:)-2798","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/accessibilityrotor(_:entries:entrylabel:)-5l3pk","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/accessibilityrotor(_:textranges:)-23z7s","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/accessibilityrotor(_:textranges:)-6fs9m","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/accessibilityrotor(_:textranges:)-8gjp2","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/accessibilityrotor(_:textranges:)-8uxyc","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/accessibilityvalue(_:)-384nl","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/accessibilityvalue(_:)-4etqu","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/accessibilityvalue(_:)-5ico8","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/filepicker\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/filepicker\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/alert(_:)","title":"func alert(AlertContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/alert(_:ispresented:actions:)-5i0wn","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/alert(_:ispresented:actions:)-8d03e","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/alert(_:ispresented:actions:)-jvqs","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/alert(_:ispresented:actions:message:)-6jl9z","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/alert(_:ispresented:actions:message:)-9s0ba","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/alert(_:ispresented:actions:message:)-znql","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/alert(_:ispresented:presenting:actions:)-40l9z","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/alert(_:ispresented:presenting:actions:)-48z1l","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/alert(_:ispresented:presenting:actions:)-8tss7","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/alert(_:ispresented:presenting:actions:message:)-2fdzp","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/alert(_:ispresented:presenting:actions:message:)-8t8q2","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/alert(_:ispresented:presenting:actions:message:)-nac5","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/filepicker\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/filepicker\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/alignmentguide(_:computevalue:)-2gnyy","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/alignmentguide(_:computevalue:)-8x7o2","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/filepicker\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/any()","title":"func any() -> AnyView","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/aspectratio(_:contentmode:)-4gkqq","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/aspectratio(_:contentmode:)-knpa","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/filepicker\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/autosave(_:debounceinterval:action:)","title":"func autosave<T>(Published<T>.Publisher, debounceInterval: RunLoop.SchedulerTimeType.Stride, action: () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/filepicker\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/background(_:in:fillstyle:)-1rpe3","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/background(_:in:fillstyle:)-z76e","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/background(in:fillstyle:)-751oc","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/background(in:fillstyle:)-mx07","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/badge(_:)-5zofg","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/badge(_:)-6zhz5","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/badge(_:)-7xhh8","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/badge(_:)-9041h","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/bindsafeareainsets(to:)","title":"func bindSafeAreaInsets(to: Binding<EdgeInsets>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/bindsize(to:)","title":"func bindSize(to: Binding<CGSize>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/border(_:width:cornerradius:)","title":"func border<Content>(Content, width: CGFloat, cornerRadius: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/buttonstyle(_:)-7di6m","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/buttonstyle(_:)-k3m7","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/filepicker\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/confirmationdialog(_:ispresented:titlevisibility:actions:)-2mbn9","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/confirmationdialog(_:ispresented:titlevisibility:actions:)-4rxhk","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/confirmationdialog(_:ispresented:titlevisibility:actions:)-78fui","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-2nyze","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-529ec","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-80act","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-28ws0","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-6ygs6","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-9ptf1","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-24khz","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-6pxcs","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-8mqvd","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/filepicker\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/filepicker\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/cornerradius(_:)","title":"func cornerRadius(CornerRadiusStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/filepicker\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/disabledynamictype(sizecategory:)","title":"func disableDynamicType(sizeCategory: ContentSizeCategory) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/dynamictypesize(_:)-2zqjz","title":"func dynamicTypeSize<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/dynamictypesize(_:)-6d97a","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/filepicker\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/enabled(_:)","title":"func enabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-7b3ez","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-98nou","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/fileexporter(ispresented:documents:contenttype:oncompletion:)-4041p","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/fileexporter(ispresented:documents:contenttype:oncompletion:)-48m55","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/focusedobject(_:)-34bpv","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/focusedobject(_:)-8fp71","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/focusedsceneobject(_:)-8htf0","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/focusedsceneobject(_:)-t90g","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/focusedscenevalue(_:_:)-2k1e3","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/focusedscenevalue(_:_:)-8azz7","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/focusedvalue(_:_:)-26a8c","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/focusedvalue(_:_:)-8ykq2","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/font(_:)-3t3di","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/font(_:)-47v2u","title":"func font(FontStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/font(identifier:style:weight:)","title":"func font(identifier: FontIdentifier, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/font(name:style:weight:)","title":"func font(name: String, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/frame(_:)","title":"func frame(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/frame(square:)","title":"func frame(square: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/fullscreencover(_:)","title":"func fullScreenCover(FullScreenCoverContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/height(_:)","title":"func height(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/help(_:)-2ia6q","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/help(_:)-6s0nv","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/help(_:)-h02g","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/hidden(if:)","title":"func hidden(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/hidekeyboard()","title":"func hideKeyboard()","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/keyboardshortcut(_:)-8rcls","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/keyboardshortcut(_:)-925b7","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/linelimit(_:)","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/listitemtint(_:)-45dfo","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/listitemtint(_:)-9pd8s","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/filepicker\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/filepicker\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/filepicker\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/filepicker\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/filepicker\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/filepicker\/navigationbartitle(_:)-4c1f3","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/filepicker\/navigationbartitle(_:)-51rh8","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/filepicker\/navigationbartitle(_:)-97zrj","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/filepicker\/navigationbartitle(_:displaymode:)-3lazk","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/filepicker\/navigationbartitle(_:displaymode:)-4yl3m","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/filepicker\/navigationbartitle(_:displaymode:)-5hk7g","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/navigationdocument(_:)-93zw1","title":"func navigationDocument<D>(D) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/navigationdocument(_:)-9vddw","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/navigationdocument(_:preview:)-13xl3","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/navigationdocument(_:preview:)-2yvwu","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/navigationdocument(_:preview:)-39uiv","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/navigationdocument(_:preview:)-6covs","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/navigationtitle(_:)-2fk2s","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/navigationtitle(_:)-2x6pb","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/navigationtitle(_:)-4n3bi","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/navigationtitle(_:)-4r5dd","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/navigationtitle(_:)-9ctzt","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/filepicker\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/ondrop(of:delegate:)-1ywl1","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/filepicker\/ondrop(of:delegate:)-8wvwb","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/ondrop(of:istargeted:perform:)-17wxv","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/filepicker\/ondrop(of:istargeted:perform:)-24nkx","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/ondrop(of:istargeted:perform:)-5x9m2","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/filepicker\/ondrop(of:istargeted:perform:)-i2x4","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/filepicker\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/filepicker\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/onswipegesture(maximumtime:minimumdistance:maximumdistance:gesturetimer:up:left:right:down:)","title":"func onSwipeGesture(maximumTime: TimeInterval, minimumDistance: CGFloat, maximumDistance: CGFloat, gestureTimer: GestureTimer, up: () -> Void, left: () -> Void, right: () -> Void, down: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/filepicker\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/padding(_:)-3ldwp","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/padding(_:)-3ym2v","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/preferspersistentsystemoverlayshidden()","title":"func prefersPersistentSystemOverlaysHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/presentationdetents(undimmed:largestundimmed:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/presentationdetents(undimmed:largestundimmed:selection:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/renameaction(_:)-1eoax","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/renameaction(_:)-1hlzx","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/safeareainset(edge:alignment:spacing:content:)-3t1a5","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/safeareainset(edge:alignment:spacing:content:)-w30n","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/scaleeffect(_:anchor:)-5zvcl","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/scaleeffect(_:anchor:)-6kjt","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/searchcompletion(_:)-660qo","title":"func searchCompletion<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/searchcompletion(_:)-7os64","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/searchable(if:text:placement:prompt:)","title":"func searchable(if: Bool, text: Binding<String>, placement: SearchFieldPlacement, prompt: String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/searchable(text:placement:prompt:)-4cp3f","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/searchable(text:placement:prompt:)-5llea","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/searchable(text:placement:prompt:)-5u1j7","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/filepicker\/searchable(text:placement:prompt:suggestions:)-2q4ko","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/filepicker\/searchable(text:placement:prompt:suggestions:)-71xc9","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/filepicker\/searchable(text:placement:prompt:suggestions:)-9p9v3","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/searchable(text:tokens:placement:prompt:token:)-38q4a","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/searchable(text:tokens:placement:prompt:token:)-8s225","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/searchable(text:tokens:placement:prompt:token:)-9pupm","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-3uqg0","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-7eo8n","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-yby1","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/shadow(_:)","title":"func shadow(ViewShadowStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/sheet(_:)","title":"func sheet(SheetContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/filepicker\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/tint(_:)-8yb4f","title":"func tint<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/tint(_:)-9uyv5","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/toolbar(content:)-1th1d","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/toolbar(content:)-3snll","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/toolbarbackground(_:for:)-4cv9e","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/toolbarbackground(_:for:)-54hxq","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/visible(if:)","title":"func visible(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/width(_:)","title":"func width(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/filepicker\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/swiftuikit\/filepicker\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/swiftuikit\/filepicker","title":"FilePicker","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/init(items:selection:animatedselection:dismissafterpick:listitem:)","title":"init(items: [Item], selection: Binding<Item>, animatedSelection: Bool, dismissAfterPick: Bool, listItem: ItemViewBuilder)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/body","title":"var body: some View","type":"property"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/presentationmode","title":"var presentationMode: Binding<PresentationMode>","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/itemviewbuilder","title":"ForEachPicker.ItemViewBuilder","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/dismiss()","title":"func dismiss()","type":"method"}],"path":"\/documentation\/swiftuikit\/foreachpicker\/dismissableview-implementations","title":"DismissableView Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachpicker\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibility(activationpoint:)-6xbvp","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibility(activationpoint:)-8kiai","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibilityaction(named:_:)","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibilityactivationpoint(_:)-3o8rx","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibilityactivationpoint(_:)-4f8x7","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibilitycustomcontent(_:_:importance:)-10qs3","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibilitycustomcontent(_:_:importance:)-17sas","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibilitycustomcontent(_:_:importance:)-1l6ft","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibilitycustomcontent(_:_:importance:)-4h70p","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibilitycustomcontent(_:_:importance:)-545pr","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibilitycustomcontent(_:_:importance:)-6tzqf","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibilitycustomcontent(_:_:importance:)-8rn97","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibilitycustomcontent(_:_:importance:)-9u925","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibilityhint(_:)-778rb","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibilityhint(_:)-7r56t","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibilityhint(_:)-td6t","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibilityinputlabels(_:)-39hl4","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibilityinputlabels(_:)-5iia3","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibilityinputlabels(_:)-6d2o","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibilitylabel(_:)-3hzci","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibilitylabel(_:)-4s58w","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibilitylabel(_:)-9pit3","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibilityrotor(_:entries:)-2jyiu","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibilityrotor(_:entries:)-adjv","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibilityrotor(_:entries:)-oki0","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibilityrotor(_:entries:)-zdg8","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibilityrotor(_:entries:entryid:entrylabel:)-7318y","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibilityrotor(_:entries:entryid:entrylabel:)-79zau","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibilityrotor(_:entries:entryid:entrylabel:)-7d0yk","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibilityrotor(_:entries:entryid:entrylabel:)-8k1ao","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibilityrotor(_:entries:entrylabel:)-6qobl","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibilityrotor(_:entries:entrylabel:)-6ziix","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibilityrotor(_:entries:entrylabel:)-869gg","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibilityrotor(_:entries:entrylabel:)-8mih4","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibilityrotor(_:textranges:)-1hi4l","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibilityrotor(_:textranges:)-1tmur","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibilityrotor(_:textranges:)-2rne0","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibilityrotor(_:textranges:)-o4p7","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibilityvalue(_:)-72w5t","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibilityvalue(_:)-9f5c2","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/accessibilityvalue(_:)-d62o","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachpicker\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachpicker\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/alert(_:)","title":"func alert(AlertContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/alert(_:ispresented:actions:)-18c2j","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/alert(_:ispresented:actions:)-5aelx","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/alert(_:ispresented:actions:)-5x9nl","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/alert(_:ispresented:actions:message:)-3h4sw","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/alert(_:ispresented:actions:message:)-6kr3k","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/alert(_:ispresented:actions:message:)-9oiiz","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/alert(_:ispresented:presenting:actions:)-27xwj","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/alert(_:ispresented:presenting:actions:)-2mm8q","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/alert(_:ispresented:presenting:actions:)-730v5","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/alert(_:ispresented:presenting:actions:message:)-3icby","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/alert(_:ispresented:presenting:actions:message:)-7gsbx","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/alert(_:ispresented:presenting:actions:message:)-83aot","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachpicker\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachpicker\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/alignmentguide(_:computevalue:)-3voam","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/alignmentguide(_:computevalue:)-4m14o","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachpicker\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/any()","title":"func any() -> AnyView","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/aspectratio(_:contentmode:)-25r4o","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/aspectratio(_:contentmode:)-52aqo","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachpicker\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/autosave(_:debounceinterval:action:)","title":"func autosave<T>(Published<T>.Publisher, debounceInterval: RunLoop.SchedulerTimeType.Stride, action: () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachpicker\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/background(_:in:fillstyle:)-2bkxm","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/background(_:in:fillstyle:)-99tct","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/background(in:fillstyle:)-3dqim","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/background(in:fillstyle:)-7jbx4","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/badge(_:)-13vy9","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/badge(_:)-2a06r","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/badge(_:)-2do2u","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/badge(_:)-3ppix","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/bindsafeareainsets(to:)","title":"func bindSafeAreaInsets(to: Binding<EdgeInsets>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/bindsize(to:)","title":"func bindSize(to: Binding<CGSize>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/border(_:width:cornerradius:)","title":"func border<Content>(Content, width: CGFloat, cornerRadius: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/buttonstyle(_:)-4v4gq","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/buttonstyle(_:)-5nl9l","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachpicker\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/confirmationdialog(_:ispresented:titlevisibility:actions:)-4g4ls","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/confirmationdialog(_:ispresented:titlevisibility:actions:)-5b2jt","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/confirmationdialog(_:ispresented:titlevisibility:actions:)-9k3qa","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-1o8vz","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-3yjab","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-7sapy","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-398ro","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-42k3o","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-86tmw","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-27iho","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-970zg","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-wbhl","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachpicker\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachpicker\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/cornerradius(_:)","title":"func cornerRadius(CornerRadiusStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachpicker\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/disabledynamictype(sizecategory:)","title":"func disableDynamicType(sizeCategory: ContentSizeCategory) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/dynamictypesize(_:)-4diqn","title":"func dynamicTypeSize<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/dynamictypesize(_:)-9i4q7","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachpicker\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/enabled(_:)","title":"func enabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-74mex","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-ajjg","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/fileexporter(ispresented:documents:contenttype:oncompletion:)-7h9c6","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/fileexporter(ispresented:documents:contenttype:oncompletion:)-8yrvb","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/focusedobject(_:)-1x9td","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/focusedobject(_:)-73cgj","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/focusedsceneobject(_:)-20gsy","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/focusedsceneobject(_:)-7fgzm","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/focusedscenevalue(_:_:)-2sm9x","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/focusedscenevalue(_:_:)-3xl44","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/focusedvalue(_:_:)-47efb","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/focusedvalue(_:_:)-9i10j","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/font(_:)-3e27l","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/font(_:)-58xui","title":"func font(FontStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/font(identifier:style:weight:)","title":"func font(identifier: FontIdentifier, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/font(name:style:weight:)","title":"func font(name: String, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/frame(_:)","title":"func frame(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/frame(square:)","title":"func frame(square: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/fullscreencover(_:)","title":"func fullScreenCover(FullScreenCoverContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/height(_:)","title":"func height(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/help(_:)-3ji5f","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/help(_:)-3r01c","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/help(_:)-71qth","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/hidden(if:)","title":"func hidden(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/hidekeyboard()","title":"func hideKeyboard()","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/keyboardshortcut(_:)-70j7e","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/keyboardshortcut(_:)-74jr3","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/linelimit(_:)","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/listitemtint(_:)-36oys","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/listitemtint(_:)-9lgz7","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachpicker\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachpicker\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachpicker\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachpicker\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachpicker\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachpicker\/navigationbartitle(_:)-2o8r4","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachpicker\/navigationbartitle(_:)-5cfsz","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachpicker\/navigationbartitle(_:)-f198","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachpicker\/navigationbartitle(_:displaymode:)-186c0","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachpicker\/navigationbartitle(_:displaymode:)-8pkh7","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachpicker\/navigationbartitle(_:displaymode:)-9xncn","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/navigationdocument(_:)-8csa9","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/navigationdocument(_:)-9ctyy","title":"func navigationDocument<D>(D) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/navigationdocument(_:preview:)-5q2pk","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/navigationdocument(_:preview:)-7jpkv","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/navigationdocument(_:preview:)-878ho","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/navigationdocument(_:preview:)-98s48","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/navigationtitle(_:)-14uge","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/navigationtitle(_:)-15xtg","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/navigationtitle(_:)-3tpbr","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/navigationtitle(_:)-7o43g","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/navigationtitle(_:)-9seli","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachpicker\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachpicker\/ondrop(of:delegate:)-2rzen","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/ondrop(of:delegate:)-51fwf","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachpicker\/ondrop(of:istargeted:perform:)-1hlzi","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachpicker\/ondrop(of:istargeted:perform:)-346bl","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/ondrop(of:istargeted:perform:)-80hbg","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/ondrop(of:istargeted:perform:)-9xhh7","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachpicker\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachpicker\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/onswipegesture(maximumtime:minimumdistance:maximumdistance:gesturetimer:up:left:right:down:)","title":"func onSwipeGesture(maximumTime: TimeInterval, minimumDistance: CGFloat, maximumDistance: CGFloat, gestureTimer: GestureTimer, up: () -> Void, left: () -> Void, right: () -> Void, down: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachpicker\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/padding(_:)-43igy","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/padding(_:)-5suvs","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/preferspersistentsystemoverlayshidden()","title":"func prefersPersistentSystemOverlaysHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/presentationdetents(undimmed:largestundimmed:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/presentationdetents(undimmed:largestundimmed:selection:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/renameaction(_:)-54v35","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/renameaction(_:)-8qgaw","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/safeareainset(edge:alignment:spacing:content:)-5am1j","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/safeareainset(edge:alignment:spacing:content:)-fu0d","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/scaleeffect(_:anchor:)-77xvr","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/scaleeffect(_:anchor:)-7soe","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/searchcompletion(_:)-53d2a","title":"func searchCompletion<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/searchcompletion(_:)-684zn","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/searchable(if:text:placement:prompt:)","title":"func searchable(if: Bool, text: Binding<String>, placement: SearchFieldPlacement, prompt: String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/searchable(text:placement:prompt:)-8vrhn","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/searchable(text:placement:prompt:)-9kemt","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/searchable(text:placement:prompt:)-9lacb","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachpicker\/searchable(text:placement:prompt:suggestions:)-213nm","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachpicker\/searchable(text:placement:prompt:suggestions:)-223du","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachpicker\/searchable(text:placement:prompt:suggestions:)-776zd","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/searchable(text:tokens:placement:prompt:token:)-1uwm0","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/searchable(text:tokens:placement:prompt:token:)-5hafb","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/searchable(text:tokens:placement:prompt:token:)-5uiah","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-2b9e6","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-4zd3t","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-94e3y","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/shadow(_:)","title":"func shadow(ViewShadowStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/sheet(_:)","title":"func sheet(SheetContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachpicker\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/tint(_:)-6mrcr","title":"func tint<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/tint(_:)-6ocs6","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/toolbar(content:)-3ee24","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/toolbar(content:)-dq48","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/toolbarbackground(_:for:)-25fqc","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/toolbarbackground(_:for:)-8dnkm","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/visible(if:)","title":"func visible(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/width(_:)","title":"func width(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachpicker\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/swiftuikit\/foreachpicker\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/swiftuikit\/foreachpicker","title":"ForEachPicker","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/init(items:selection:listitem:)","title":"init(items: [Item], selection: Binding<[Item]>, listItem: ItemViewBuilder)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/body","title":"var body: some View","type":"property"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/presentationmode","title":"var presentationMode: Binding<PresentationMode>","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/itemviewbuilder","title":"ForEachMultiPicker.ItemViewBuilder","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/dismiss()","title":"func dismiss()","type":"method"}],"path":"\/documentation\/swiftuikit\/foreachmultipicker\/dismissableview-implementations","title":"DismissableView Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibility(activationpoint:)-1jd13","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibility(activationpoint:)-54inq","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibilityaction(named:_:)","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibilityactivationpoint(_:)-2631o","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibilityactivationpoint(_:)-5ldck","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibilitycustomcontent(_:_:importance:)-1rg0w","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibilitycustomcontent(_:_:importance:)-2bkud","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibilitycustomcontent(_:_:importance:)-3cdr6","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibilitycustomcontent(_:_:importance:)-4c4x4","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibilitycustomcontent(_:_:importance:)-5ddew","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibilitycustomcontent(_:_:importance:)-5zh1w","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibilitycustomcontent(_:_:importance:)-71i12","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibilitycustomcontent(_:_:importance:)-8kilc","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibilityhint(_:)-4cnvp","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibilityhint(_:)-4okyw","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibilityhint(_:)-803a0","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibilityinputlabels(_:)-4obg9","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibilityinputlabels(_:)-6271m","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibilityinputlabels(_:)-98sy4","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibilitylabel(_:)-59fcp","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibilitylabel(_:)-5fzrc","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibilitylabel(_:)-9aekr","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibilityrotor(_:entries:)-3bu0s","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibilityrotor(_:entries:)-3c14k","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibilityrotor(_:entries:)-44f3e","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibilityrotor(_:entries:)-7zae8","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibilityrotor(_:entries:entryid:entrylabel:)-1qoma","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibilityrotor(_:entries:entryid:entrylabel:)-4mufl","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibilityrotor(_:entries:entryid:entrylabel:)-6xs0n","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibilityrotor(_:entries:entryid:entrylabel:)-73gv7","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibilityrotor(_:entries:entrylabel:)-1f25q","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibilityrotor(_:entries:entrylabel:)-29zkt","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibilityrotor(_:entries:entrylabel:)-2aaev","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibilityrotor(_:entries:entrylabel:)-659wp","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibilityrotor(_:textranges:)-2069n","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibilityrotor(_:textranges:)-40p81","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibilityrotor(_:textranges:)-5j046","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibilityrotor(_:textranges:)-86qqa","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibilityvalue(_:)-2b7j7","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibilityvalue(_:)-8a46a","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/accessibilityvalue(_:)-9x3ao","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachmultipicker\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachmultipicker\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/alert(_:)","title":"func alert(AlertContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/alert(_:ispresented:actions:)-1rz0b","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/alert(_:ispresented:actions:)-43nvt","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/alert(_:ispresented:actions:)-5129d","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/alert(_:ispresented:actions:message:)-14pgu","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/alert(_:ispresented:actions:message:)-3e5w1","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/alert(_:ispresented:actions:message:)-4w6ds","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/alert(_:ispresented:presenting:actions:)-26eky","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/alert(_:ispresented:presenting:actions:)-4t4pz","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/alert(_:ispresented:presenting:actions:)-829tr","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/alert(_:ispresented:presenting:actions:message:)-4i5es","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/alert(_:ispresented:presenting:actions:message:)-4qm10","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/alert(_:ispresented:presenting:actions:message:)-5u7z8","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachmultipicker\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachmultipicker\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/alignmentguide(_:computevalue:)-3bz5c","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/alignmentguide(_:computevalue:)-6bldf","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachmultipicker\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/any()","title":"func any() -> AnyView","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/aspectratio(_:contentmode:)-8qk8u","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/aspectratio(_:contentmode:)-o9sx","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachmultipicker\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/autosave(_:debounceinterval:action:)","title":"func autosave<T>(Published<T>.Publisher, debounceInterval: RunLoop.SchedulerTimeType.Stride, action: () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachmultipicker\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/background(_:in:fillstyle:)-24xzu","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/background(_:in:fillstyle:)-7yylr","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/background(in:fillstyle:)-5xcco","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/background(in:fillstyle:)-9jhx8","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/badge(_:)-1850w","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/badge(_:)-2lnra","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/badge(_:)-4n1nf","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/badge(_:)-77ni1","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/bindsafeareainsets(to:)","title":"func bindSafeAreaInsets(to: Binding<EdgeInsets>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/bindsize(to:)","title":"func bindSize(to: Binding<CGSize>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/border(_:width:cornerradius:)","title":"func border<Content>(Content, width: CGFloat, cornerRadius: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/buttonstyle(_:)-1kngc","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/buttonstyle(_:)-1n6yi","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachmultipicker\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/confirmationdialog(_:ispresented:titlevisibility:actions:)-2pwky","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/confirmationdialog(_:ispresented:titlevisibility:actions:)-3gwr3","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/confirmationdialog(_:ispresented:titlevisibility:actions:)-4hx3d","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-43tx6","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-4eind","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-73ixs","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-1epi6","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-5stf9","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-bjwq","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-1c3qq","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-5kmi2","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-6tdr3","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachmultipicker\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachmultipicker\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/cornerradius(_:)","title":"func cornerRadius(CornerRadiusStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachmultipicker\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/disabledynamictype(sizecategory:)","title":"func disableDynamicType(sizeCategory: ContentSizeCategory) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/dynamictypesize(_:)-2t9hz","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/dynamictypesize(_:)-3f6wo","title":"func dynamicTypeSize<T>(T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachmultipicker\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/enabled(_:)","title":"func enabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-2bfmw","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-3gs1x","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/fileexporter(ispresented:documents:contenttype:oncompletion:)-393v4","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/fileexporter(ispresented:documents:contenttype:oncompletion:)-kiy","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/focusedobject(_:)-3ywtl","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/focusedobject(_:)-7n1v9","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/focusedsceneobject(_:)-3ffqu","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/focusedsceneobject(_:)-6dx0z","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/focusedscenevalue(_:_:)-4f9yi","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/focusedscenevalue(_:_:)-8ir3","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/focusedvalue(_:_:)-5umxa","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/focusedvalue(_:_:)-68eog","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/font(_:)-4ksej","title":"func font(FontStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/font(_:)-9dqg6","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/font(identifier:style:weight:)","title":"func font(identifier: FontIdentifier, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/font(name:style:weight:)","title":"func font(name: String, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/frame(_:)","title":"func frame(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/frame(square:)","title":"func frame(square: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/fullscreencover(_:)","title":"func fullScreenCover(FullScreenCoverContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/height(_:)","title":"func height(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/help(_:)-1dy7t","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/help(_:)-8cjhi","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/help(_:)-8rd1y","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/hidden(if:)","title":"func hidden(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/hidekeyboard()","title":"func hideKeyboard()","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/keyboardshortcut(_:)-3grd","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/keyboardshortcut(_:)-9sgbv","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/linelimit(_:)","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/listitemtint(_:)-8w0n5","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/listitemtint(_:)-g7x9","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachmultipicker\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachmultipicker\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachmultipicker\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachmultipicker\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachmultipicker\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachmultipicker\/navigationbartitle(_:)-1hoif","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachmultipicker\/navigationbartitle(_:)-2xxy7","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachmultipicker\/navigationbartitle(_:)-6pgua","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachmultipicker\/navigationbartitle(_:displaymode:)-7jc22","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachmultipicker\/navigationbartitle(_:displaymode:)-7rcdd","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachmultipicker\/navigationbartitle(_:displaymode:)-9b5cp","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/navigationdocument(_:)-1d6zf","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/navigationdocument(_:)-85qii","title":"func navigationDocument<D>(D) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/navigationdocument(_:preview:)-2mkr2","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/navigationdocument(_:preview:)-3j9m7","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/navigationdocument(_:preview:)-58pgy","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/navigationdocument(_:preview:)-7lauu","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/navigationtitle(_:)-3dkx4","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/navigationtitle(_:)-3k85z","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/navigationtitle(_:)-7w5ek","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/navigationtitle(_:)-8jw3y","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/navigationtitle(_:)-qlw4","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachmultipicker\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachmultipicker\/ondrop(of:delegate:)-5okhx","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/ondrop(of:delegate:)-7ici4","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/ondrop(of:istargeted:perform:)-2jxxx","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachmultipicker\/ondrop(of:istargeted:perform:)-2lm67","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/ondrop(of:istargeted:perform:)-4ed8r","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachmultipicker\/ondrop(of:istargeted:perform:)-6vhai","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachmultipicker\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachmultipicker\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/onswipegesture(maximumtime:minimumdistance:maximumdistance:gesturetimer:up:left:right:down:)","title":"func onSwipeGesture(maximumTime: TimeInterval, minimumDistance: CGFloat, maximumDistance: CGFloat, gestureTimer: GestureTimer, up: () -> Void, left: () -> Void, right: () -> Void, down: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachmultipicker\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/padding(_:)-790gz","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/padding(_:)-8dwtm","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/preferspersistentsystemoverlayshidden()","title":"func prefersPersistentSystemOverlaysHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/presentationdetents(undimmed:largestundimmed:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/presentationdetents(undimmed:largestundimmed:selection:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/renameaction(_:)-3buij","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/renameaction(_:)-7jxog","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/safeareainset(edge:alignment:spacing:content:)-3qsjr","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/safeareainset(edge:alignment:spacing:content:)-7g1j9","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/scaleeffect(_:anchor:)-6ipkj","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/scaleeffect(_:anchor:)-97utq","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/searchcompletion(_:)-2752c","title":"func searchCompletion<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/searchcompletion(_:)-8g1en","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/searchable(if:text:placement:prompt:)","title":"func searchable(if: Bool, text: Binding<String>, placement: SearchFieldPlacement, prompt: String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/searchable(text:placement:prompt:)-4qgnb","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/searchable(text:placement:prompt:)-5da4x","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/searchable(text:placement:prompt:)-784j7","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachmultipicker\/searchable(text:placement:prompt:suggestions:)-4aq67","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachmultipicker\/searchable(text:placement:prompt:suggestions:)-5xg8k","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachmultipicker\/searchable(text:placement:prompt:suggestions:)-fb71","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/searchable(text:tokens:placement:prompt:token:)-3kscq","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/searchable(text:tokens:placement:prompt:token:)-4m2iv","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/searchable(text:tokens:placement:prompt:token:)-5x56j","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-6rf1k","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-871ro","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-971g3","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/shadow(_:)","title":"func shadow(ViewShadowStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/sheet(_:)","title":"func sheet(SheetContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/foreachmultipicker\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/tint(_:)-87484","title":"func tint<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/tint(_:)-9dj88","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/toolbar(content:)-1rxpc","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/toolbar(content:)-7a5md","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/toolbarbackground(_:for:)-5jfp0","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/toolbarbackground(_:for:)-9hv1o","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/visible(if:)","title":"func visible(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/width(_:)","title":"func width(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/foreachmultipicker\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/swiftuikit\/foreachmultipicker\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/swiftuikit\/foreachmultipicker","title":"ForEachMultiPicker","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/imagepicker\/init(sourcetype:cancelaction:resultaction:)","title":"init(sourceType: UIImagePickerController.SourceType, cancelAction: CancelAction, resultAction: ResultAction)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/imagepicker\/makecoordinator()","title":"func makeCoordinator() -> Coordinator","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/makeuiviewcontroller(context:)","title":"func makeUIViewController(context: Context) -> UIImagePickerController","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/updateuiviewcontroller(_:context:)","title":"func updateUIViewController(UIImagePickerController, context: Context)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/imagepicker\/cancelaction","title":"ImagePicker.CancelAction","type":"typealias"},{"path":"\/documentation\/swiftuikit\/imagepicker\/pickerresult","title":"ImagePicker.PickerResult","type":"typealias"},{"path":"\/documentation\/swiftuikit\/imagepicker\/resultaction","title":"ImagePicker.ResultAction","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/imagepicker\/allsourcetypes","title":"static var allSourceTypes: [UIImagePickerController.SourceType]","type":"property"},{"path":"\/documentation\/swiftuikit\/imagepicker\/availablesourcetypes","title":"static var availableSourceTypes: [UIImagePickerController.SourceType]","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/imagepicker\/pickererror\/missingphotolibrarypermissions","title":"case missingPhotoLibraryPermissions","type":"case"},{"path":"\/documentation\/swiftuikit\/imagepicker\/pickererror\/missingpickedimage","title":"case missingPickedImage","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/imagepicker\/pickererror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftuikit\/imagepicker\/pickererror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/imagepicker\/pickererror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/swiftuikit\/imagepicker\/pickererror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/swiftuikit\/imagepicker\/pickererror","title":"ImagePicker.PickerError","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/imagepicker\/coordinator\/init(picker:)","title":"init(picker: ImagePicker)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/imagepicker\/coordinator\/imagepickercontroller(_:didfinishpickingmediawithinfo:)","title":"func imagePickerController(UIImagePickerController, didFinishPickingMediaWithInfo: [UIImagePickerController.InfoKey : Any])","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/coordinator\/imagepickercontrollerdidcancel(_:)","title":"func imagePickerControllerDidCancel(UIImagePickerController)","type":"method"}],"path":"\/documentation\/swiftuikit\/imagepicker\/coordinator","title":"ImagePicker.Coordinator","type":"class"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/imagepicker\/body","title":"var body: Never","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/imagepicker\/sizethatfits(_:uiviewcontroller:context:)","title":"func sizeThatFits(ProposedViewSize, uiViewController: Self.UIViewControllerType, context: Self.Context) -> CGSize?","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/imagepicker\/dismantleuiviewcontroller(_:coordinator:)","title":"static func dismantleUIViewController(Self.UIViewControllerType, coordinator: Self.Coordinator)","type":"method"}],"path":"\/documentation\/swiftuikit\/imagepicker\/uiviewcontrollerrepresentable-implementations","title":"UIViewControllerRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/imagepicker\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/imagepicker\/accessibility(activationpoint:)-2ta9i","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/imagepicker\/accessibility(activationpoint:)-3ocji","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/imagepicker\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/imagepicker\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/imagepicker\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/imagepicker\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/imagepicker\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/imagepicker\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/imagepicker\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/imagepicker\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/imagepicker\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/accessibilityaction(named:_:)","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/accessibilityactivationpoint(_:)-8d6jt","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/accessibilityactivationpoint(_:)-8nerr","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/accessibilitycustomcontent(_:_:importance:)-1fgzp","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/accessibilitycustomcontent(_:_:importance:)-2xxwg","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/accessibilitycustomcontent(_:_:importance:)-3lky0","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/accessibilitycustomcontent(_:_:importance:)-48hqr","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/accessibilitycustomcontent(_:_:importance:)-4sz45","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/accessibilitycustomcontent(_:_:importance:)-59qf7","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/accessibilitycustomcontent(_:_:importance:)-61jeh","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/accessibilitycustomcontent(_:_:importance:)-u7pt","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/accessibilityhint(_:)-10a1m","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/accessibilityhint(_:)-4v9ud","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/accessibilityhint(_:)-63y8v","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/accessibilityinputlabels(_:)-3wbsv","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/accessibilityinputlabels(_:)-6rfw3","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/accessibilityinputlabels(_:)-7wnzo","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/accessibilitylabel(_:)-1kiw7","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/accessibilitylabel(_:)-8m60f","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/accessibilitylabel(_:)-8v0qf","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/accessibilityrotor(_:entries:)-6nltn","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/accessibilityrotor(_:entries:)-7d7d6","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/accessibilityrotor(_:entries:)-9e648","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/accessibilityrotor(_:entries:)-9iylq","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/accessibilityrotor(_:entries:entryid:entrylabel:)-1yqkj","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/accessibilityrotor(_:entries:entryid:entrylabel:)-4fgro","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/accessibilityrotor(_:entries:entryid:entrylabel:)-6jghj","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/accessibilityrotor(_:entries:entryid:entrylabel:)-8zvdy","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/accessibilityrotor(_:entries:entrylabel:)-2r310","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/accessibilityrotor(_:entries:entrylabel:)-3ydba","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/accessibilityrotor(_:entries:entrylabel:)-4qbor","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/accessibilityrotor(_:entries:entrylabel:)-7275l","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/accessibilityrotor(_:textranges:)-4bx4p","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/accessibilityrotor(_:textranges:)-5vgmk","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/accessibilityrotor(_:textranges:)-7rdch","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/accessibilityrotor(_:textranges:)-8pdv8","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/accessibilityvalue(_:)-50383","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/accessibilityvalue(_:)-6jcmx","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/accessibilityvalue(_:)-7ltlx","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/imagepicker\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/imagepicker\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/alert(_:)","title":"func alert(AlertContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/alert(_:ispresented:actions:)-5f114","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/alert(_:ispresented:actions:)-64d3k","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/alert(_:ispresented:actions:)-8gix9","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/alert(_:ispresented:actions:message:)-2p833","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/alert(_:ispresented:actions:message:)-4imw5","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/alert(_:ispresented:actions:message:)-52o8q","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/alert(_:ispresented:presenting:actions:)-12638","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/alert(_:ispresented:presenting:actions:)-31i74","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/alert(_:ispresented:presenting:actions:)-7mnf","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/alert(_:ispresented:presenting:actions:message:)-36ny8","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/alert(_:ispresented:presenting:actions:message:)-44cka","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/alert(_:ispresented:presenting:actions:message:)-8s10u","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/imagepicker\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/imagepicker\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/alignmentguide(_:computevalue:)-7wes4","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/alignmentguide(_:computevalue:)-vvo3","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/imagepicker\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/any()","title":"func any() -> AnyView","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/aspectratio(_:contentmode:)-4w6ve","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/aspectratio(_:contentmode:)-91537","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/imagepicker\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/autosave(_:debounceinterval:action:)","title":"func autosave<T>(Published<T>.Publisher, debounceInterval: RunLoop.SchedulerTimeType.Stride, action: () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/imagepicker\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/background(_:in:fillstyle:)-4jcz6","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/background(_:in:fillstyle:)-9joe0","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/background(in:fillstyle:)-7i1im","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/background(in:fillstyle:)-9vic2","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/badge(_:)-2umez","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/badge(_:)-52wox","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/badge(_:)-8ussw","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/badge(_:)-9hc0p","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/bindsafeareainsets(to:)","title":"func bindSafeAreaInsets(to: Binding<EdgeInsets>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/bindsize(to:)","title":"func bindSize(to: Binding<CGSize>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/border(_:width:cornerradius:)","title":"func border<Content>(Content, width: CGFloat, cornerRadius: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/buttonstyle(_:)-17xj5","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/buttonstyle(_:)-89sx8","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/imagepicker\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/confirmationdialog(_:ispresented:titlevisibility:actions:)-1gaxu","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/confirmationdialog(_:ispresented:titlevisibility:actions:)-4c317","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/confirmationdialog(_:ispresented:titlevisibility:actions:)-lhmi","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-48qkn","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-4lbii","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-6fj74","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-25dfi","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-7avee","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-9zxm","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-1ew2u","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-8nuzo","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-934zo","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/imagepicker\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/imagepicker\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/cornerradius(_:)","title":"func cornerRadius(CornerRadiusStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/imagepicker\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/disabledynamictype(sizecategory:)","title":"func disableDynamicType(sizeCategory: ContentSizeCategory) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/dynamictypesize(_:)-2jsyc","title":"func dynamicTypeSize<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/dynamictypesize(_:)-9g6wj","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/imagepicker\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/enabled(_:)","title":"func enabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-1xc12","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-2h6tu","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/fileexporter(ispresented:documents:contenttype:oncompletion:)-623lg","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/fileexporter(ispresented:documents:contenttype:oncompletion:)-795ik","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/focusedobject(_:)-8394k","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/focusedobject(_:)-cqxj","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/focusedsceneobject(_:)-11q9t","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/focusedsceneobject(_:)-8yann","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/focusedscenevalue(_:_:)-4llbo","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/focusedscenevalue(_:_:)-4p10i","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/focusedvalue(_:_:)-4i825","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/focusedvalue(_:_:)-9awq","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/font(_:)-4s7z1","title":"func font(FontStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/font(_:)-6k22u","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/font(identifier:style:weight:)","title":"func font(identifier: FontIdentifier, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/font(name:style:weight:)","title":"func font(name: String, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/frame(_:)","title":"func frame(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/frame(square:)","title":"func frame(square: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/fullscreencover(_:)","title":"func fullScreenCover(FullScreenCoverContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/height(_:)","title":"func height(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/help(_:)-1vxla","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/help(_:)-3by16","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/help(_:)-86xu4","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/hidden(if:)","title":"func hidden(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/hidekeyboard()","title":"func hideKeyboard()","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/keyboardshortcut(_:)-5bsv9","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/keyboardshortcut(_:)-vee5","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/linelimit(_:)","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/listitemtint(_:)-1moat","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/listitemtint(_:)-3e8xn","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/imagepicker\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/imagepicker\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/imagepicker\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/imagepicker\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/imagepicker\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/imagepicker\/navigationbartitle(_:)-19o3x","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/imagepicker\/navigationbartitle(_:)-2xhds","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/imagepicker\/navigationbartitle(_:)-3v3v5","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/imagepicker\/navigationbartitle(_:displaymode:)-3623o","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/imagepicker\/navigationbartitle(_:displaymode:)-5u8w4","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/imagepicker\/navigationbartitle(_:displaymode:)-8kep3","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/navigationdocument(_:)-2ub1d","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/navigationdocument(_:)-5vmn4","title":"func navigationDocument<D>(D) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/navigationdocument(_:preview:)-315u1","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/navigationdocument(_:preview:)-7lark","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/navigationdocument(_:preview:)-8geoy","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/navigationdocument(_:preview:)-9oqnr","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/navigationtitle(_:)-1nrlw","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/navigationtitle(_:)-5sdq1","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/navigationtitle(_:)-6tzhx","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/navigationtitle(_:)-7cidj","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/navigationtitle(_:)-7tudw","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/imagepicker\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/imagepicker\/ondrop(of:delegate:)-d4un","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/ondrop(of:delegate:)-o2zb","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/ondrop(of:istargeted:perform:)-4d267","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/ondrop(of:istargeted:perform:)-5ehq","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/imagepicker\/ondrop(of:istargeted:perform:)-6wmne","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/imagepicker\/ondrop(of:istargeted:perform:)-jxrk","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/imagepicker\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/imagepicker\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/onswipegesture(maximumtime:minimumdistance:maximumdistance:gesturetimer:up:left:right:down:)","title":"func onSwipeGesture(maximumTime: TimeInterval, minimumDistance: CGFloat, maximumDistance: CGFloat, gestureTimer: GestureTimer, up: () -> Void, left: () -> Void, right: () -> Void, down: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/imagepicker\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/padding(_:)-3vytb","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/padding(_:)-50bkk","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/preferspersistentsystemoverlayshidden()","title":"func prefersPersistentSystemOverlaysHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/presentationdetents(undimmed:largestundimmed:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/presentationdetents(undimmed:largestundimmed:selection:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/renameaction(_:)-4pexb","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/renameaction(_:)-q3vp","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/safeareainset(edge:alignment:spacing:content:)-7uocj","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/safeareainset(edge:alignment:spacing:content:)-9dt3a","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/scaleeffect(_:anchor:)-6q03e","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/scaleeffect(_:anchor:)-8azcx","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/searchcompletion(_:)-5pj4e","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/searchcompletion(_:)-7wyee","title":"func searchCompletion<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/searchable(if:text:placement:prompt:)","title":"func searchable(if: Bool, text: Binding<String>, placement: SearchFieldPlacement, prompt: String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/searchable(text:placement:prompt:)-1q8pi","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/searchable(text:placement:prompt:)-2vzxj","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/searchable(text:placement:prompt:)-7o7ac","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/imagepicker\/searchable(text:placement:prompt:suggestions:)-10s0q","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/imagepicker\/searchable(text:placement:prompt:suggestions:)-16k2x","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/imagepicker\/searchable(text:placement:prompt:suggestions:)-6t153","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/searchable(text:tokens:placement:prompt:token:)-6971v","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/searchable(text:tokens:placement:prompt:token:)-6heq7","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/searchable(text:tokens:placement:prompt:token:)-favk","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-1uw7b","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-7z9um","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-87qbl","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/shadow(_:)","title":"func shadow(ViewShadowStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/sheet(_:)","title":"func sheet(SheetContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/imagepicker\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/tint(_:)-1csap","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/tint(_:)-2b75g","title":"func tint<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/toolbar(content:)-9hqqp","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/toolbar(content:)-lmyc","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/toolbarbackground(_:for:)-1gq2z","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/toolbarbackground(_:for:)-7tr57","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/visible(if:)","title":"func visible(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/width(_:)","title":"func width(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/imagepicker\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/swiftuikit\/imagepicker\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/swiftuikit\/imagepicker","title":"ImagePicker","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/imagepickererror\/hasnophotolibraryaccess(status:)","title":"case hasNoPhotoLibraryAccess(status: PHAuthorizationStatus)","type":"case"}],"path":"\/documentation\/swiftuikit\/imagepickererror","title":"ImagePickerError","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/listpicker\/init(items:selection:animatedselection:dismissafterpick:listitem:)","title":"init(items: [Item], selection: Binding<Item>, animatedSelection: Bool, dismissAfterPick: Bool, listItem: ItemViewBuilder)","type":"init"},{"path":"\/documentation\/swiftuikit\/listpicker\/init(sections:selection:animatedselection:dismissafterpick:listitem:)","title":"init(sections: [ListPickerSection<Item>], selection: Binding<Item>, animatedSelection: Bool, dismissAfterPick: Bool, listItem: ItemViewBuilder)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/listpicker\/body","title":"var body: some View","type":"property"},{"path":"\/documentation\/swiftuikit\/listpicker\/presentationmode","title":"var presentationMode: Binding<PresentationMode>","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/listpicker\/itemviewbuilder","title":"ListPicker.ItemViewBuilder","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/listpicker\/dismiss()","title":"func dismiss()","type":"method"}],"path":"\/documentation\/swiftuikit\/listpicker\/dismissableview-implementations","title":"DismissableView Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listpicker\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listpicker\/accessibility(activationpoint:)-5169e","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listpicker\/accessibility(activationpoint:)-99v3q","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listpicker\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listpicker\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listpicker\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listpicker\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listpicker\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listpicker\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listpicker\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listpicker\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listpicker\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/accessibilityaction(named:_:)","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/accessibilityactivationpoint(_:)-3ud2a","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/accessibilityactivationpoint(_:)-8kdbr","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/accessibilitycustomcontent(_:_:importance:)-1ncun","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/accessibilitycustomcontent(_:_:importance:)-36a7p","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/accessibilitycustomcontent(_:_:importance:)-3wyd6","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/accessibilitycustomcontent(_:_:importance:)-53xn7","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/accessibilitycustomcontent(_:_:importance:)-5gfog","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/accessibilitycustomcontent(_:_:importance:)-6ljar","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/accessibilitycustomcontent(_:_:importance:)-8tl3r","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/accessibilitycustomcontent(_:_:importance:)-8ueq","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/accessibilityhint(_:)-2ekf4","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/accessibilityhint(_:)-7c6gl","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/accessibilityhint(_:)-9yiqw","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/accessibilityinputlabels(_:)-4qpnu","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/accessibilityinputlabels(_:)-556tu","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/accessibilityinputlabels(_:)-5x7l2","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/accessibilitylabel(_:)-5odcp","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/accessibilitylabel(_:)-66zio","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/accessibilitylabel(_:)-970sz","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/accessibilityrotor(_:entries:)-1edri","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/accessibilityrotor(_:entries:)-67q66","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/accessibilityrotor(_:entries:)-6l8e9","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/accessibilityrotor(_:entries:)-851xq","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/accessibilityrotor(_:entries:entryid:entrylabel:)-36f6j","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/accessibilityrotor(_:entries:entryid:entrylabel:)-4m1nh","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/accessibilityrotor(_:entries:entryid:entrylabel:)-6fzue","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/accessibilityrotor(_:entries:entryid:entrylabel:)-73f71","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/accessibilityrotor(_:entries:entrylabel:)-14l29","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/accessibilityrotor(_:entries:entrylabel:)-9szss","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/accessibilityrotor(_:entries:entrylabel:)-e1kf","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/accessibilityrotor(_:entries:entrylabel:)-xdhw","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/accessibilityrotor(_:textranges:)-32wiz","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/accessibilityrotor(_:textranges:)-63n2s","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/accessibilityrotor(_:textranges:)-6lwut","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/accessibilityrotor(_:textranges:)-898fr","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/accessibilityvalue(_:)-11s2b","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/accessibilityvalue(_:)-53uhn","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/accessibilityvalue(_:)-7nhc2","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listpicker\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listpicker\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/alert(_:)","title":"func alert(AlertContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/alert(_:ispresented:actions:)-1e6t8","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/alert(_:ispresented:actions:)-4rfp8","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/alert(_:ispresented:actions:)-4zl7y","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/alert(_:ispresented:actions:message:)-1adff","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/alert(_:ispresented:actions:message:)-50kqw","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/alert(_:ispresented:actions:message:)-6gsvn","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/alert(_:ispresented:presenting:actions:)-2p6q6","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/alert(_:ispresented:presenting:actions:)-84kxu","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/alert(_:ispresented:presenting:actions:)-9vuif","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/alert(_:ispresented:presenting:actions:message:)-1u2vr","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/alert(_:ispresented:presenting:actions:message:)-33ctx","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/alert(_:ispresented:presenting:actions:message:)-75rac","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listpicker\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listpicker\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/alignmentguide(_:computevalue:)-6yll7","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/alignmentguide(_:computevalue:)-80x16","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listpicker\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/any()","title":"func any() -> AnyView","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/aspectratio(_:contentmode:)-1fjex","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/aspectratio(_:contentmode:)-9ueg4","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listpicker\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/autosave(_:debounceinterval:action:)","title":"func autosave<T>(Published<T>.Publisher, debounceInterval: RunLoop.SchedulerTimeType.Stride, action: () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listpicker\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/background(_:in:fillstyle:)-1ujps","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/background(_:in:fillstyle:)-7pgpp","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/background(in:fillstyle:)-4nu8e","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/background(in:fillstyle:)-58s50","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/badge(_:)-2l2sy","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/badge(_:)-3q9mo","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/badge(_:)-957ku","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/badge(_:)-vrhw","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/bindsafeareainsets(to:)","title":"func bindSafeAreaInsets(to: Binding<EdgeInsets>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/bindsize(to:)","title":"func bindSize(to: Binding<CGSize>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/border(_:width:cornerradius:)","title":"func border<Content>(Content, width: CGFloat, cornerRadius: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/buttonstyle(_:)-213mo","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/buttonstyle(_:)-8az44","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listpicker\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/confirmationdialog(_:ispresented:titlevisibility:actions:)-3vsu5","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/confirmationdialog(_:ispresented:titlevisibility:actions:)-5260k","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/confirmationdialog(_:ispresented:titlevisibility:actions:)-6o2ni","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-1wmej","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-5cb1a","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-7afqo","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-2sqs0","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-3idrs","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-4dreb","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-21gbj","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-4iwk2","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-7tgqx","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listpicker\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listpicker\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/cornerradius(_:)","title":"func cornerRadius(CornerRadiusStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listpicker\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/disabledynamictype(sizecategory:)","title":"func disableDynamicType(sizeCategory: ContentSizeCategory) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/dynamictypesize(_:)-7f3e4","title":"func dynamicTypeSize<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/dynamictypesize(_:)-7ji1m","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listpicker\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/enabled(_:)","title":"func enabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-2clie","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-3e8t0","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/fileexporter(ispresented:documents:contenttype:oncompletion:)-6hvov","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/fileexporter(ispresented:documents:contenttype:oncompletion:)-7pgkc","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/focusedobject(_:)-8eyzf","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/focusedobject(_:)-9k73","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/focusedsceneobject(_:)-3y9ig","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/focusedsceneobject(_:)-653yb","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/focusedscenevalue(_:_:)-6kyne","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/focusedscenevalue(_:_:)-8l1ex","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/focusedvalue(_:_:)-5l5z2","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/focusedvalue(_:_:)-6o7o1","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/font(_:)-1gcxc","title":"func font(FontStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/font(_:)-8ei01","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/font(identifier:style:weight:)","title":"func font(identifier: FontIdentifier, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/font(name:style:weight:)","title":"func font(name: String, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/frame(_:)","title":"func frame(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/frame(square:)","title":"func frame(square: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/fullscreencover(_:)","title":"func fullScreenCover(FullScreenCoverContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/height(_:)","title":"func height(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/help(_:)-2gfd2","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/help(_:)-5a62b","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/help(_:)-9gxgv","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/hidden(if:)","title":"func hidden(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/hidekeyboard()","title":"func hideKeyboard()","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/keyboardshortcut(_:)-3nyob","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/keyboardshortcut(_:)-l7ai","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/linelimit(_:)","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/listitemtint(_:)-4lqsa","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/listitemtint(_:)-sblp","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listpicker\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listpicker\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listpicker\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listpicker\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listpicker\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listpicker\/navigationbartitle(_:)-1tvsh","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listpicker\/navigationbartitle(_:)-3mcpe","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listpicker\/navigationbartitle(_:)-565i0","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listpicker\/navigationbartitle(_:displaymode:)-4abs7","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listpicker\/navigationbartitle(_:displaymode:)-4rdsv","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listpicker\/navigationbartitle(_:displaymode:)-dn2s","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/navigationdocument(_:)-1s252","title":"func navigationDocument<D>(D) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/navigationdocument(_:)-4h6r4","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/navigationdocument(_:preview:)-2k70c","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/navigationdocument(_:preview:)-4gmqt","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/navigationdocument(_:preview:)-7y9hj","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/navigationdocument(_:preview:)-e6e3","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/navigationtitle(_:)-20vzj","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/navigationtitle(_:)-3fqto","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/navigationtitle(_:)-6nlwh","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/navigationtitle(_:)-8bb8w","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/navigationtitle(_:)-yta1","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listpicker\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/ondrop(of:delegate:)-4ul2r","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listpicker\/ondrop(of:delegate:)-6eq91","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/ondrop(of:istargeted:perform:)-1wc29","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listpicker\/ondrop(of:istargeted:perform:)-2nsb5","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listpicker\/ondrop(of:istargeted:perform:)-36pil","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/ondrop(of:istargeted:perform:)-63vo2","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listpicker\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listpicker\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/onswipegesture(maximumtime:minimumdistance:maximumdistance:gesturetimer:up:left:right:down:)","title":"func onSwipeGesture(maximumTime: TimeInterval, minimumDistance: CGFloat, maximumDistance: CGFloat, gestureTimer: GestureTimer, up: () -> Void, left: () -> Void, right: () -> Void, down: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listpicker\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/padding(_:)-5s29g","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/padding(_:)-6ox44","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/preferspersistentsystemoverlayshidden()","title":"func prefersPersistentSystemOverlaysHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/presentationdetents(undimmed:largestundimmed:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/presentationdetents(undimmed:largestundimmed:selection:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/renameaction(_:)-7kcjn","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/renameaction(_:)-91d36","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/safeareainset(edge:alignment:spacing:content:)-3iek3","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/safeareainset(edge:alignment:spacing:content:)-7blal","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/scaleeffect(_:anchor:)-47ht8","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/scaleeffect(_:anchor:)-8adij","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/searchcompletion(_:)-43pri","title":"func searchCompletion<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/searchcompletion(_:)-7ytli","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/searchable(if:text:placement:prompt:)","title":"func searchable(if: Bool, text: Binding<String>, placement: SearchFieldPlacement, prompt: String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/searchable(text:placement:prompt:)-68c5h","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/searchable(text:placement:prompt:)-70tyh","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/searchable(text:placement:prompt:)-8ijn3","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listpicker\/searchable(text:placement:prompt:suggestions:)-6y2pa","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listpicker\/searchable(text:placement:prompt:suggestions:)-7fvjo","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listpicker\/searchable(text:placement:prompt:suggestions:)-9otqk","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/searchable(text:tokens:placement:prompt:token:)-3txn8","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/searchable(text:tokens:placement:prompt:token:)-4dg18","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/searchable(text:tokens:placement:prompt:token:)-8s6kk","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-3jnf9","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-72zen","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-r2m8","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/shadow(_:)","title":"func shadow(ViewShadowStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/sheet(_:)","title":"func sheet(SheetContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listpicker\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/tint(_:)-1sj87","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/tint(_:)-1uzes","title":"func tint<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/toolbar(content:)-6zppj","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/toolbar(content:)-8omic","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/toolbarbackground(_:for:)-5ej9g","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/toolbarbackground(_:for:)-6z6t2","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/visible(if:)","title":"func visible(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/width(_:)","title":"func width(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listpicker\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/swiftuikit\/listpicker\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/swiftuikit\/listpicker","title":"ListPicker","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/init(items:selection:listitem:)","title":"init(items: [Item], selection: Binding<[Item]>, listItem: ItemViewBuilder)","type":"init"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/init(sections:selection:listitem:)","title":"init(sections: [ListPickerSection<Item>], selection: Binding<[Item]>, listItem: ItemViewBuilder)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/body","title":"var body: some View","type":"property"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/presentationmode","title":"var presentationMode: Binding<PresentationMode>","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/itemviewbuilder","title":"ListMultiPicker.ItemViewBuilder","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/dismiss()","title":"func dismiss()","type":"method"}],"path":"\/documentation\/swiftuikit\/listmultipicker\/dismissableview-implementations","title":"DismissableView Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listmultipicker\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibility(activationpoint:)-8ihzw","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibility(activationpoint:)-94mu0","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibilityaction(named:_:)","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibilityactivationpoint(_:)-2dcv2","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibilityactivationpoint(_:)-6k8cp","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibilitycustomcontent(_:_:importance:)-1ke8t","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibilitycustomcontent(_:_:importance:)-1prke","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibilitycustomcontent(_:_:importance:)-3by18","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibilitycustomcontent(_:_:importance:)-6h8d4","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibilitycustomcontent(_:_:importance:)-6uc12","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibilitycustomcontent(_:_:importance:)-7dnsn","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibilitycustomcontent(_:_:importance:)-7u6r8","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibilitycustomcontent(_:_:importance:)-8jq1m","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibilityhint(_:)-2284f","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibilityhint(_:)-6ds6d","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibilityhint(_:)-8jg1i","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibilityinputlabels(_:)-1xmmu","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibilityinputlabels(_:)-8jfm6","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibilityinputlabels(_:)-90cfn","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibilitylabel(_:)-44m8a","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibilitylabel(_:)-64usq","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibilitylabel(_:)-9ijk8","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibilityrotor(_:entries:)-510w4","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibilityrotor(_:entries:)-9dscq","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibilityrotor(_:entries:)-9j9fr","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibilityrotor(_:entries:)-ksx6","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibilityrotor(_:entries:entryid:entrylabel:)-29a0b","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibilityrotor(_:entries:entryid:entrylabel:)-30ad2","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibilityrotor(_:entries:entryid:entrylabel:)-4jalz","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibilityrotor(_:entries:entryid:entrylabel:)-5d75r","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibilityrotor(_:entries:entrylabel:)-5cftj","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibilityrotor(_:entries:entrylabel:)-6b6j9","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibilityrotor(_:entries:entrylabel:)-7cp8g","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibilityrotor(_:entries:entrylabel:)-7xzy9","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibilityrotor(_:textranges:)-6xvnj","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibilityrotor(_:textranges:)-7jj20","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibilityrotor(_:textranges:)-89xzf","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibilityrotor(_:textranges:)-9cdkp","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibilityvalue(_:)-5v764","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibilityvalue(_:)-9jj4r","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/accessibilityvalue(_:)-r2xr","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listmultipicker\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listmultipicker\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/alert(_:)","title":"func alert(AlertContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/alert(_:ispresented:actions:)-4i9lz","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/alert(_:ispresented:actions:)-4n73c","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/alert(_:ispresented:actions:)-7rcjb","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/alert(_:ispresented:actions:message:)-4k8aq","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/alert(_:ispresented:actions:message:)-5oz1e","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/alert(_:ispresented:actions:message:)-9futk","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/alert(_:ispresented:presenting:actions:)-5az3b","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/alert(_:ispresented:presenting:actions:)-9v9gl","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/alert(_:ispresented:presenting:actions:)-pns7","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/alert(_:ispresented:presenting:actions:message:)-3xw9f","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/alert(_:ispresented:presenting:actions:message:)-8vb7m","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/alert(_:ispresented:presenting:actions:message:)-dec","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listmultipicker\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listmultipicker\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/alignmentguide(_:computevalue:)-5ozi8","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/alignmentguide(_:computevalue:)-7x4md","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listmultipicker\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/any()","title":"func any() -> AnyView","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/aspectratio(_:contentmode:)-3kg2o","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/aspectratio(_:contentmode:)-9lbi3","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listmultipicker\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/autosave(_:debounceinterval:action:)","title":"func autosave<T>(Published<T>.Publisher, debounceInterval: RunLoop.SchedulerTimeType.Stride, action: () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listmultipicker\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/background(_:in:fillstyle:)-2nlon","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/background(_:in:fillstyle:)-7mv0q","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/background(in:fillstyle:)-aaw8","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/background(in:fillstyle:)-l7jq","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/badge(_:)-12bd9","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/badge(_:)-2c7ub","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/badge(_:)-95ifs","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/badge(_:)-ivu0","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/bindsafeareainsets(to:)","title":"func bindSafeAreaInsets(to: Binding<EdgeInsets>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/bindsize(to:)","title":"func bindSize(to: Binding<CGSize>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/border(_:width:cornerradius:)","title":"func border<Content>(Content, width: CGFloat, cornerRadius: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/buttonstyle(_:)-426jc","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/buttonstyle(_:)-94r3u","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listmultipicker\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/confirmationdialog(_:ispresented:titlevisibility:actions:)-2nj0j","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/confirmationdialog(_:ispresented:titlevisibility:actions:)-4lxts","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/confirmationdialog(_:ispresented:titlevisibility:actions:)-5hxm4","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-5nw2m","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-836qb","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-949ta","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-1sdw2","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-54w8g","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-83b6q","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-19blf","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-1v8ki","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-hkk9","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listmultipicker\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listmultipicker\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/cornerradius(_:)","title":"func cornerRadius(CornerRadiusStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listmultipicker\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/disabledynamictype(sizecategory:)","title":"func disableDynamicType(sizeCategory: ContentSizeCategory) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/dynamictypesize(_:)-12mdt","title":"func dynamicTypeSize<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/dynamictypesize(_:)-6oe6d","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listmultipicker\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/enabled(_:)","title":"func enabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-48ksu","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-4cip3","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/fileexporter(ispresented:documents:contenttype:oncompletion:)-7v3yl","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/fileexporter(ispresented:documents:contenttype:oncompletion:)-y1u6","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/focusedobject(_:)-5dw9c","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/focusedobject(_:)-8b4ex","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/focusedsceneobject(_:)-1qd4n","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/focusedsceneobject(_:)-7j0ga","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/focusedscenevalue(_:_:)-1au85","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/focusedscenevalue(_:_:)-604lz","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/focusedvalue(_:_:)-6sk8e","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/focusedvalue(_:_:)-7vn5t","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/font(_:)-26ynx","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/font(_:)-2ximi","title":"func font(FontStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/font(identifier:style:weight:)","title":"func font(identifier: FontIdentifier, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/font(name:style:weight:)","title":"func font(name: String, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/frame(_:)","title":"func frame(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/frame(square:)","title":"func frame(square: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/fullscreencover(_:)","title":"func fullScreenCover(FullScreenCoverContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/height(_:)","title":"func height(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/help(_:)-1ox5r","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/help(_:)-70ycz","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/help(_:)-89660","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/hidden(if:)","title":"func hidden(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/hidekeyboard()","title":"func hideKeyboard()","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/keyboardshortcut(_:)-2kv3j","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/keyboardshortcut(_:)-60la","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/linelimit(_:)","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/listitemtint(_:)-38x9u","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/listitemtint(_:)-6b8l8","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listmultipicker\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listmultipicker\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listmultipicker\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listmultipicker\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listmultipicker\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listmultipicker\/navigationbartitle(_:)-6492v","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listmultipicker\/navigationbartitle(_:)-8al7a","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listmultipicker\/navigationbartitle(_:)-jlmo","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listmultipicker\/navigationbartitle(_:displaymode:)-1bpnd","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listmultipicker\/navigationbartitle(_:displaymode:)-9j5ge","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listmultipicker\/navigationbartitle(_:displaymode:)-9zjr2","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/navigationdocument(_:)-2dpv1","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/navigationdocument(_:)-7zmr4","title":"func navigationDocument<D>(D) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/navigationdocument(_:preview:)-1kvi5","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/navigationdocument(_:preview:)-4977a","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/navigationdocument(_:preview:)-532sl","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/navigationdocument(_:preview:)-9vkv2","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/navigationtitle(_:)-1fwnc","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/navigationtitle(_:)-2ra34","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/navigationtitle(_:)-4td7g","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/navigationtitle(_:)-9msy8","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/navigationtitle(_:)-9on9b","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listmultipicker\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/ondrop(of:delegate:)-2d5rs","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listmultipicker\/ondrop(of:delegate:)-4ll73","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/ondrop(of:istargeted:perform:)-4r3dp","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/ondrop(of:istargeted:perform:)-5erh5","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listmultipicker\/ondrop(of:istargeted:perform:)-60o7x","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listmultipicker\/ondrop(of:istargeted:perform:)-6bmc0","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listmultipicker\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listmultipicker\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/onswipegesture(maximumtime:minimumdistance:maximumdistance:gesturetimer:up:left:right:down:)","title":"func onSwipeGesture(maximumTime: TimeInterval, minimumDistance: CGFloat, maximumDistance: CGFloat, gestureTimer: GestureTimer, up: () -> Void, left: () -> Void, right: () -> Void, down: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listmultipicker\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/padding(_:)-2vehb","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/padding(_:)-3l1sk","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/preferspersistentsystemoverlayshidden()","title":"func prefersPersistentSystemOverlaysHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/presentationdetents(undimmed:largestundimmed:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/presentationdetents(undimmed:largestundimmed:selection:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/renameaction(_:)-4vfb8","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/renameaction(_:)-6w6r","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/safeareainset(edge:alignment:spacing:content:)-9gfl3","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/safeareainset(edge:alignment:spacing:content:)-a9d0","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/scaleeffect(_:anchor:)-3814v","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/scaleeffect(_:anchor:)-5yzi5","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/searchcompletion(_:)-5vms8","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/searchcompletion(_:)-7pa9e","title":"func searchCompletion<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/searchable(if:text:placement:prompt:)","title":"func searchable(if: Bool, text: Binding<String>, placement: SearchFieldPlacement, prompt: String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/searchable(text:placement:prompt:)-1x91y","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/searchable(text:placement:prompt:)-5bzm8","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/searchable(text:placement:prompt:)-5jweo","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listmultipicker\/searchable(text:placement:prompt:suggestions:)-3j5bl","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listmultipicker\/searchable(text:placement:prompt:suggestions:)-3nxo7","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listmultipicker\/searchable(text:placement:prompt:suggestions:)-zlql","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/searchable(text:tokens:placement:prompt:token:)-9su0v","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/searchable(text:tokens:placement:prompt:token:)-esdh","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/searchable(text:tokens:placement:prompt:token:)-pp38","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-1w8zf","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-379m5","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-4nkrz","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/shadow(_:)","title":"func shadow(ViewShadowStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/sheet(_:)","title":"func sheet(SheetContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listmultipicker\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/tint(_:)-9wl83","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/tint(_:)-9zd11","title":"func tint<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/toolbar(content:)-3a15e","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/toolbar(content:)-4ypi7","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/toolbarbackground(_:for:)-42ork","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/toolbarbackground(_:for:)-8zio6","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/visible(if:)","title":"func visible(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/width(_:)","title":"func width(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listmultipicker\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/swiftuikit\/listmultipicker\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/swiftuikit\/listmultipicker","title":"ListMultiPicker","type":"struct"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/listpickeritem\/item-swift.associatedtype","title":"Item","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/listpickeritem\/checkmark","title":"var checkmark: some View","type":"property"},{"path":"\/documentation\/swiftuikit\/listpickeritem\/isselected","title":"var isSelected: Bool","type":"property"},{"path":"\/documentation\/swiftuikit\/listpickeritem\/item-swift.property","title":"var item: Item","type":"property"}],"path":"\/documentation\/swiftuikit\/listpickeritem","title":"ListPickerItem","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/listpickersection\/init(title:items:)","title":"init(title: String, items: [Item])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/listpickersection\/id-4k3ld","title":"let id: UUID","type":"property"},{"path":"\/documentation\/swiftuikit\/listpickersection\/items","title":"let items: [Item]","type":"property"},{"path":"\/documentation\/swiftuikit\/listpickersection\/title","title":"let title: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/listpickersection\/id-8xhg0","title":"var id: ObjectIdentifier","type":"property"}],"path":"\/documentation\/swiftuikit\/listpickersection\/identifiable-implementations","title":"Identifiable Implementations","type":"symbol"}],"path":"\/documentation\/swiftuikit\/listpickersection","title":"ListPickerSection","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/init(selectedfontname:fonts:itemfontsize:)","title":"init(selectedFontName: Binding<String>, fonts: [SystemFontPickerFont], itemFontSize: CGFloat)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/body","title":"var body: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpicker\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibility(activationpoint:)-4c6un","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibility(activationpoint:)-9s5rn","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibilityaction(named:_:)","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibilityactivationpoint(_:)-2p0fv","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibilityactivationpoint(_:)-825kx","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibilitycustomcontent(_:_:importance:)-4iwx2","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibilitycustomcontent(_:_:importance:)-5dt34","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibilitycustomcontent(_:_:importance:)-5oofp","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibilitycustomcontent(_:_:importance:)-5rlax","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibilitycustomcontent(_:_:importance:)-6w02q","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibilitycustomcontent(_:_:importance:)-7ble2","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibilitycustomcontent(_:_:importance:)-91upz","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibilitycustomcontent(_:_:importance:)-97t6m","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibilityhint(_:)-8ap1t","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibilityhint(_:)-8etjs","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibilityhint(_:)-9ounk","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibilityinputlabels(_:)-19gb4","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibilityinputlabels(_:)-5uyw8","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibilityinputlabels(_:)-70vfs","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibilitylabel(_:)-44e3i","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibilitylabel(_:)-63n7a","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibilitylabel(_:)-6p3ct","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibilityrotor(_:entries:)-2n3lb","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibilityrotor(_:entries:)-6dgxr","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibilityrotor(_:entries:)-7ro9h","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibilityrotor(_:entries:)-7z90o","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibilityrotor(_:entries:entryid:entrylabel:)-655nf","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibilityrotor(_:entries:entryid:entrylabel:)-6mm84","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibilityrotor(_:entries:entryid:entrylabel:)-7ybm4","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibilityrotor(_:entries:entryid:entrylabel:)-fhpe","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibilityrotor(_:entries:entrylabel:)-1r6w1","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibilityrotor(_:entries:entrylabel:)-2n6yg","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibilityrotor(_:entries:entrylabel:)-31ark","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibilityrotor(_:entries:entrylabel:)-9ibni","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibilityrotor(_:textranges:)-1yps5","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibilityrotor(_:textranges:)-68wtk","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibilityrotor(_:textranges:)-76dw8","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibilityrotor(_:textranges:)-pf5k","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibilityvalue(_:)-5ccdo","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibilityvalue(_:)-6jq1e","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/accessibilityvalue(_:)-8g3k2","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpicker\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpicker\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/alert(_:)","title":"func alert(AlertContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/alert(_:ispresented:actions:)-2u493","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/alert(_:ispresented:actions:)-2zvwx","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/alert(_:ispresented:actions:)-5ww8v","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/alert(_:ispresented:actions:message:)-7ctsz","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/alert(_:ispresented:actions:message:)-7yu5","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/alert(_:ispresented:actions:message:)-fyys","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/alert(_:ispresented:presenting:actions:)-7cz4e","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/alert(_:ispresented:presenting:actions:)-7g7sd","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/alert(_:ispresented:presenting:actions:)-8t8ww","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/alert(_:ispresented:presenting:actions:message:)-7abp5","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/alert(_:ispresented:presenting:actions:message:)-9415l","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/alert(_:ispresented:presenting:actions:message:)-9ubiq","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpicker\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpicker\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/alignmentguide(_:computevalue:)-27oo2","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/alignmentguide(_:computevalue:)-3nkug","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpicker\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/any()","title":"func any() -> AnyView","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/aspectratio(_:contentmode:)-1onn0","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/aspectratio(_:contentmode:)-8vsf8","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpicker\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/autosave(_:debounceinterval:action:)","title":"func autosave<T>(Published<T>.Publisher, debounceInterval: RunLoop.SchedulerTimeType.Stride, action: () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpicker\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/background(_:in:fillstyle:)-4f759","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/background(_:in:fillstyle:)-7n8jl","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/background(in:fillstyle:)-1yo2l","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/background(in:fillstyle:)-5mbvf","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/badge(_:)-5b4s2","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/badge(_:)-6msc3","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/badge(_:)-8mgll","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/badge(_:)-90uvq","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/bindsafeareainsets(to:)","title":"func bindSafeAreaInsets(to: Binding<EdgeInsets>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/bindsize(to:)","title":"func bindSize(to: Binding<CGSize>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/border(_:width:cornerradius:)","title":"func border<Content>(Content, width: CGFloat, cornerRadius: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/buttonstyle(_:)-86bzo","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/buttonstyle(_:)-9ode0","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpicker\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/confirmationdialog(_:ispresented:titlevisibility:actions:)-1gh9d","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/confirmationdialog(_:ispresented:titlevisibility:actions:)-319cs","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/confirmationdialog(_:ispresented:titlevisibility:actions:)-7hahl","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-2hm1r","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-46y9","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-78j7q","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-7yuaz","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-yt09","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-zj6a","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-1da4x","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-1z7wy","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-4dsf1","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpicker\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpicker\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/cornerradius(_:)","title":"func cornerRadius(CornerRadiusStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpicker\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/disabledynamictype(sizecategory:)","title":"func disableDynamicType(sizeCategory: ContentSizeCategory) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/dynamictypesize(_:)-4mrq5","title":"func dynamicTypeSize<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/dynamictypesize(_:)-8wcss","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpicker\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/enabled(_:)","title":"func enabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-2ioyl","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-8lhvd","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/fileexporter(ispresented:documents:contenttype:oncompletion:)-62sba","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/fileexporter(ispresented:documents:contenttype:oncompletion:)-714d","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/focusedobject(_:)-4fyr0","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/focusedobject(_:)-m1c9","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/focusedsceneobject(_:)-4auvs","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/focusedsceneobject(_:)-87k9e","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/focusedscenevalue(_:_:)-1bu53","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/focusedscenevalue(_:_:)-54s2j","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/focusedvalue(_:_:)-2ytmk","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/focusedvalue(_:_:)-5mxzo","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/font(_:)-337by","title":"func font(FontStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/font(_:)-38yuo","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/font(identifier:style:weight:)","title":"func font(identifier: FontIdentifier, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/font(name:style:weight:)","title":"func font(name: String, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/frame(_:)","title":"func frame(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/frame(square:)","title":"func frame(square: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/fullscreencover(_:)","title":"func fullScreenCover(FullScreenCoverContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/height(_:)","title":"func height(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/help(_:)-29xbz","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/help(_:)-6759d","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/help(_:)-90eod","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/hidden(if:)","title":"func hidden(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/hidekeyboard()","title":"func hideKeyboard()","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/keyboardshortcut(_:)-5247c","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/keyboardshortcut(_:)-93gyh","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/linelimit(_:)","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/listitemtint(_:)-6b29r","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/listitemtint(_:)-6zcp5","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpicker\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpicker\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpicker\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpicker\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpicker\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpicker\/navigationbartitle(_:)-2z59g","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpicker\/navigationbartitle(_:)-4hxfv","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpicker\/navigationbartitle(_:)-5kt6d","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpicker\/navigationbartitle(_:displaymode:)-3vhcq","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpicker\/navigationbartitle(_:displaymode:)-9v4xq","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpicker\/navigationbartitle(_:displaymode:)-hd6x","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/navigationdocument(_:)-4anja","title":"func navigationDocument<D>(D) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/navigationdocument(_:)-916db","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/navigationdocument(_:preview:)-3bjdm","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/navigationdocument(_:preview:)-5jx4a","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/navigationdocument(_:preview:)-69vxl","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/navigationdocument(_:preview:)-6istc","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/navigationtitle(_:)-37fs7","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/navigationtitle(_:)-67swc","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/navigationtitle(_:)-9an9s","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/navigationtitle(_:)-9orp4","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/navigationtitle(_:)-9qhyz","title":"func navigationTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpicker\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpicker\/ondrop(of:delegate:)-3yzej","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/ondrop(of:delegate:)-5gnza","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/ondrop(of:istargeted:perform:)-2c2iy","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpicker\/ondrop(of:istargeted:perform:)-4njzo","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpicker\/ondrop(of:istargeted:perform:)-852y9","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/ondrop(of:istargeted:perform:)-9jqjb","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpicker\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpicker\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/onswipegesture(maximumtime:minimumdistance:maximumdistance:gesturetimer:up:left:right:down:)","title":"func onSwipeGesture(maximumTime: TimeInterval, minimumDistance: CGFloat, maximumDistance: CGFloat, gestureTimer: GestureTimer, up: () -> Void, left: () -> Void, right: () -> Void, down: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpicker\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/padding(_:)-4w05t","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/padding(_:)-6htfc","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/preferspersistentsystemoverlayshidden()","title":"func prefersPersistentSystemOverlaysHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/presentationdetents(undimmed:largestundimmed:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/presentationdetents(undimmed:largestundimmed:selection:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/renameaction(_:)-4e2pr","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/renameaction(_:)-4f3dy","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/safeareainset(edge:alignment:spacing:content:)-6gkyc","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/safeareainset(edge:alignment:spacing:content:)-6jvr8","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/scaleeffect(_:anchor:)-76t75","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/scaleeffect(_:anchor:)-9ktjj","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/searchcompletion(_:)-3nkdi","title":"func searchCompletion<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/searchcompletion(_:)-yskn","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/searchable(if:text:placement:prompt:)","title":"func searchable(if: Bool, text: Binding<String>, placement: SearchFieldPlacement, prompt: String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/searchable(text:placement:prompt:)-553z5","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/searchable(text:placement:prompt:)-6o0hp","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/searchable(text:placement:prompt:)-7w8la","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpicker\/searchable(text:placement:prompt:suggestions:)-3swr8","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpicker\/searchable(text:placement:prompt:suggestions:)-57fqg","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpicker\/searchable(text:placement:prompt:suggestions:)-5d7n6","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/searchable(text:tokens:placement:prompt:token:)-4jwcq","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/searchable(text:tokens:placement:prompt:token:)-8096m","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/searchable(text:tokens:placement:prompt:token:)-9w4j7","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-3ci75","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-6svrl","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-7ckjh","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/shadow(_:)","title":"func shadow(ViewShadowStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/sheet(_:)","title":"func sheet(SheetContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpicker\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/tint(_:)-5i7a9","title":"func tint<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/tint(_:)-94ach","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/toolbar(content:)-2en9q","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/toolbar(content:)-3jsrd","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/toolbarbackground(_:for:)-4v43w","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/toolbarbackground(_:for:)-5gan7","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/visible(if:)","title":"func visible(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/width(_:)","title":"func width(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpicker\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/swiftuikit\/systemfontpicker\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/swiftuikit\/systemfontpicker","title":"SystemFontPicker","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/init(selectedfontname:fonts:itemfontsize:dismissafterpick:)","title":"init(selectedFontName: Binding<String>, fonts: [SystemFontPickerFont], itemFontSize: CGFloat, dismissAfterPick: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/body","title":"var body: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibility(activationpoint:)-9al1v","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibility(activationpoint:)-hjeg","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibilityaction(named:_:)","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibilityactivationpoint(_:)-564oy","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibilityactivationpoint(_:)-p456","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibilitycustomcontent(_:_:importance:)-27j1a","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibilitycustomcontent(_:_:importance:)-3dzx8","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibilitycustomcontent(_:_:importance:)-3z9d9","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibilitycustomcontent(_:_:importance:)-6pg18","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibilitycustomcontent(_:_:importance:)-7iv2v","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibilitycustomcontent(_:_:importance:)-88vvm","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibilitycustomcontent(_:_:importance:)-9vnb0","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibilitycustomcontent(_:_:importance:)-9wylp","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibilityhint(_:)-1qnx0","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibilityhint(_:)-9674t","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibilityhint(_:)-ok9g","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibilityinputlabels(_:)-1k17t","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibilityinputlabels(_:)-5myn0","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibilityinputlabels(_:)-8s6ob","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibilitylabel(_:)-15atn","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibilitylabel(_:)-4g0d3","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibilitylabel(_:)-80x8a","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibilityrotor(_:entries:)-2qtd9","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibilityrotor(_:entries:)-3hppn","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibilityrotor(_:entries:)-59z6t","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibilityrotor(_:entries:)-5ran7","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibilityrotor(_:entries:entryid:entrylabel:)-22d6l","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibilityrotor(_:entries:entryid:entrylabel:)-22h9h","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibilityrotor(_:entries:entryid:entrylabel:)-3u9j8","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibilityrotor(_:entries:entryid:entrylabel:)-8wfac","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibilityrotor(_:entries:entrylabel:)-1vbl0","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibilityrotor(_:entries:entrylabel:)-9apwu","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibilityrotor(_:entries:entrylabel:)-9hkum","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibilityrotor(_:entries:entrylabel:)-gu8k","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibilityrotor(_:textranges:)-4drj1","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibilityrotor(_:textranges:)-54fau","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibilityrotor(_:textranges:)-8evcq","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibilityrotor(_:textranges:)-9l6qb","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibilityvalue(_:)-4cdzf","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibilityvalue(_:)-6vhr9","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/accessibilityvalue(_:)-twl8","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/alert(_:)","title":"func alert(AlertContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/alert(_:ispresented:actions:)-2mrag","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/alert(_:ispresented:actions:)-46782","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/alert(_:ispresented:actions:)-5yrrj","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/alert(_:ispresented:actions:message:)-2b6d1","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/alert(_:ispresented:actions:message:)-629fy","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/alert(_:ispresented:actions:message:)-9ydyb","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/alert(_:ispresented:presenting:actions:)-1ic2m","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/alert(_:ispresented:presenting:actions:)-6ny1i","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/alert(_:ispresented:presenting:actions:)-9wukc","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/alert(_:ispresented:presenting:actions:message:)-1hfpb","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/alert(_:ispresented:presenting:actions:message:)-5364g","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/alert(_:ispresented:presenting:actions:message:)-78bqv","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/alignmentguide(_:computevalue:)-69hxw","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/alignmentguide(_:computevalue:)-6j4k9","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/any()","title":"func any() -> AnyView","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/aspectratio(_:contentmode:)-1twex","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/aspectratio(_:contentmode:)-90zyi","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/autosave(_:debounceinterval:action:)","title":"func autosave<T>(Published<T>.Publisher, debounceInterval: RunLoop.SchedulerTimeType.Stride, action: () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/background(_:in:fillstyle:)-1kp5a","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/background(_:in:fillstyle:)-61c4o","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/background(in:fillstyle:)-5uzl2","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/background(in:fillstyle:)-6g0sj","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/badge(_:)-31bdp","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/badge(_:)-434i0","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/badge(_:)-7pbby","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/badge(_:)-nu1q","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/bindsafeareainsets(to:)","title":"func bindSafeAreaInsets(to: Binding<EdgeInsets>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/bindsize(to:)","title":"func bindSize(to: Binding<CGSize>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/border(_:width:cornerradius:)","title":"func border<Content>(Content, width: CGFloat, cornerRadius: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/buttonstyle(_:)-1rhn0","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/buttonstyle(_:)-9htid","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/confirmationdialog(_:ispresented:titlevisibility:actions:)-3a2j8","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/confirmationdialog(_:ispresented:titlevisibility:actions:)-3mtov","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/confirmationdialog(_:ispresented:titlevisibility:actions:)-51k31","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-3bbff","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-5mlj4","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-80kk7","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-56pqw","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-5qcyl","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-8k3zw","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-21rh7","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-4hpm2","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-x7gj","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/cornerradius(_:)","title":"func cornerRadius(CornerRadiusStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/disabledynamictype(sizecategory:)","title":"func disableDynamicType(sizeCategory: ContentSizeCategory) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/dynamictypesize(_:)-4pkib","title":"func dynamicTypeSize<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/dynamictypesize(_:)-5wm3l","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/enabled(_:)","title":"func enabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-7p0ds","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-l6so","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/fileexporter(ispresented:documents:contenttype:oncompletion:)-1k0tx","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/fileexporter(ispresented:documents:contenttype:oncompletion:)-6y7da","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/focusedobject(_:)-49bzn","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/focusedobject(_:)-4bfk3","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/focusedsceneobject(_:)-3llu7","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/focusedsceneobject(_:)-67igh","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/focusedscenevalue(_:_:)-781od","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/focusedscenevalue(_:_:)-7yqmm","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/focusedvalue(_:_:)-30tu","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/focusedvalue(_:_:)-9dtzz","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/font(_:)-2oxsj","title":"func font(FontStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/font(_:)-3ibnk","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/font(identifier:style:weight:)","title":"func font(identifier: FontIdentifier, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/font(name:style:weight:)","title":"func font(name: String, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/frame(_:)","title":"func frame(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/frame(square:)","title":"func frame(square: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/fullscreencover(_:)","title":"func fullScreenCover(FullScreenCoverContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/height(_:)","title":"func height(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/help(_:)-1t3x5","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/help(_:)-2124b","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/help(_:)-2fvtd","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/hidden(if:)","title":"func hidden(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/hidekeyboard()","title":"func hideKeyboard()","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/keyboardshortcut(_:)-2hohp","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/keyboardshortcut(_:)-6mzzq","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/linelimit(_:)","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/listitemtint(_:)-58i15","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/listitemtint(_:)-871hr","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/navigationbartitle(_:)-2fk7g","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/navigationbartitle(_:)-4q1qp","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/navigationbartitle(_:)-9mo6c","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/navigationbartitle(_:displaymode:)-1swbq","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/navigationbartitle(_:displaymode:)-8yvpd","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/navigationbartitle(_:displaymode:)-9rksk","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/navigationdocument(_:)-78l5v","title":"func navigationDocument<D>(D) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/navigationdocument(_:)-8fuge","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/navigationdocument(_:preview:)-52dj8","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/navigationdocument(_:preview:)-5mcy0","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/navigationdocument(_:preview:)-723zp","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/navigationdocument(_:preview:)-td3a","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/navigationtitle(_:)-3gp0y","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/navigationtitle(_:)-3x5pq","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/navigationtitle(_:)-4xk4k","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/navigationtitle(_:)-66ld","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/navigationtitle(_:)-7yuow","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/ondrop(of:delegate:)-1y98i","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/ondrop(of:delegate:)-39aiw","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/ondrop(of:istargeted:perform:)-2xog0","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/ondrop(of:istargeted:perform:)-3cvdu","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/ondrop(of:istargeted:perform:)-3h8gp","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/ondrop(of:istargeted:perform:)-742so","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/onswipegesture(maximumtime:minimumdistance:maximumdistance:gesturetimer:up:left:right:down:)","title":"func onSwipeGesture(maximumTime: TimeInterval, minimumDistance: CGFloat, maximumDistance: CGFloat, gestureTimer: GestureTimer, up: () -> Void, left: () -> Void, right: () -> Void, down: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/padding(_:)-7ae92","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/padding(_:)-9mmir","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/preferspersistentsystemoverlayshidden()","title":"func prefersPersistentSystemOverlaysHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/presentationdetents(undimmed:largestundimmed:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/presentationdetents(undimmed:largestundimmed:selection:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/renameaction(_:)-4bddm","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/renameaction(_:)-62x8v","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/safeareainset(edge:alignment:spacing:content:)-7dbs8","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/safeareainset(edge:alignment:spacing:content:)-7rhjk","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/scaleeffect(_:anchor:)-3yj0n","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/scaleeffect(_:anchor:)-72oz6","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/searchcompletion(_:)-1pnif","title":"func searchCompletion<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/searchcompletion(_:)-3ufvl","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/searchable(if:text:placement:prompt:)","title":"func searchable(if: Bool, text: Binding<String>, placement: SearchFieldPlacement, prompt: String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/searchable(text:placement:prompt:)-1z4wn","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/searchable(text:placement:prompt:)-6bycb","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/searchable(text:placement:prompt:)-7afs","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/searchable(text:placement:prompt:suggestions:)-1mah6","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/searchable(text:placement:prompt:suggestions:)-7q7rq","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/searchable(text:placement:prompt:suggestions:)-93n6","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/searchable(text:tokens:placement:prompt:token:)-1bn6s","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/searchable(text:tokens:placement:prompt:token:)-1lddy","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/searchable(text:tokens:placement:prompt:token:)-7g2jr","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-2suo","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-3jyf4","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-64s3c","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/shadow(_:)","title":"func shadow(ViewShadowStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/sheet(_:)","title":"func sheet(SheetContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/tint(_:)-1k4o2","title":"func tint<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/tint(_:)-cmj","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/toolbar(content:)-476ns","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/toolbar(content:)-f9lh","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/toolbarbackground(_:for:)-68v73","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/toolbarbackground(_:for:)-86dzg","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/visible(if:)","title":"func visible(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/width(_:)","title":"func width(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/swiftuikit\/systemfontforeachpicker\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/swiftuikit\/systemfontforeachpicker","title":"SystemFontForEachPicker","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/init(selectedfontname:fonts:itemfontsize:dismissafterpick:)","title":"init(selectedFontName: Binding<String>, fonts: [SystemFontPickerFont]?, itemFontSize: CGFloat, dismissAfterPick: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/body","title":"var body: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibility(activationpoint:)-3nilc","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibility(activationpoint:)-5ttq2","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibilityaction(named:_:)","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibilityactivationpoint(_:)-4cqzy","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibilityactivationpoint(_:)-6pdub","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibilitycustomcontent(_:_:importance:)-224lf","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibilitycustomcontent(_:_:importance:)-2o0we","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibilitycustomcontent(_:_:importance:)-4m61n","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibilitycustomcontent(_:_:importance:)-5yy3r","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibilitycustomcontent(_:_:importance:)-686wm","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibilitycustomcontent(_:_:importance:)-8jbj7","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibilitycustomcontent(_:_:importance:)-9i07h","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibilitycustomcontent(_:_:importance:)-qj67","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibilityhint(_:)-4oee1","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibilityhint(_:)-4qwcc","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibilityhint(_:)-748kl","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibilityinputlabels(_:)-50r5u","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibilityinputlabels(_:)-93ji0","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibilityinputlabels(_:)-p3de","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibilitylabel(_:)-1sdzp","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibilitylabel(_:)-5dsy5","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibilitylabel(_:)-71qku","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibilityrotor(_:entries:)-2n3po","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibilityrotor(_:entries:)-505it","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibilityrotor(_:entries:)-5hhln","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibilityrotor(_:entries:)-9gvht","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibilityrotor(_:entries:entryid:entrylabel:)-1cbl7","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibilityrotor(_:entries:entryid:entrylabel:)-4sw1p","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibilityrotor(_:entries:entryid:entrylabel:)-6qos3","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibilityrotor(_:entries:entryid:entrylabel:)-9h7yh","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibilityrotor(_:entries:entrylabel:)-1ux78","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibilityrotor(_:entries:entrylabel:)-6qo5h","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibilityrotor(_:entries:entrylabel:)-8ag8f","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibilityrotor(_:entries:entrylabel:)-9am2a","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibilityrotor(_:textranges:)-1m6zf","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibilityrotor(_:textranges:)-2kgzp","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibilityrotor(_:textranges:)-5d0yl","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibilityrotor(_:textranges:)-68h61","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibilityvalue(_:)-3w14m","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibilityvalue(_:)-6ax6l","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/accessibilityvalue(_:)-ljpb","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/alert(_:)","title":"func alert(AlertContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/alert(_:ispresented:actions:)-65v7n","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/alert(_:ispresented:actions:)-69a9z","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/alert(_:ispresented:actions:)-6lzt8","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/alert(_:ispresented:actions:message:)-1i5mt","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/alert(_:ispresented:actions:message:)-4ppzg","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/alert(_:ispresented:actions:message:)-xzax","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/alert(_:ispresented:presenting:actions:)-2jcg","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/alert(_:ispresented:presenting:actions:)-8hdsp","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/alert(_:ispresented:presenting:actions:)-rktb","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/alert(_:ispresented:presenting:actions:message:)-2dtmm","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/alert(_:ispresented:presenting:actions:message:)-2qtlc","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/alert(_:ispresented:presenting:actions:message:)-6adn2","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/alignmentguide(_:computevalue:)-3bcql","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/alignmentguide(_:computevalue:)-9bb39","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/any()","title":"func any() -> AnyView","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/aspectratio(_:contentmode:)-48vm5","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/aspectratio(_:contentmode:)-86pgj","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/autosave(_:debounceinterval:action:)","title":"func autosave<T>(Published<T>.Publisher, debounceInterval: RunLoop.SchedulerTimeType.Stride, action: () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/background(_:in:fillstyle:)-3qjn8","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/background(_:in:fillstyle:)-gori","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/background(in:fillstyle:)-3uyfk","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/background(in:fillstyle:)-9urb3","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/badge(_:)-4fvd8","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/badge(_:)-59d4i","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/badge(_:)-5rnsx","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/badge(_:)-9hhvf","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/bindsafeareainsets(to:)","title":"func bindSafeAreaInsets(to: Binding<EdgeInsets>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/bindsize(to:)","title":"func bindSize(to: Binding<CGSize>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/border(_:width:cornerradius:)","title":"func border<Content>(Content, width: CGFloat, cornerRadius: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/buttonstyle(_:)-2ie6s","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/buttonstyle(_:)-5bvsw","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/confirmationdialog(_:ispresented:titlevisibility:actions:)-4sk0c","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/confirmationdialog(_:ispresented:titlevisibility:actions:)-7bbub","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/confirmationdialog(_:ispresented:titlevisibility:actions:)-7jr3o","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-286zx","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-8af2u","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-8h9cl","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-2v5sm","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-6n96w","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-8o7uy","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-31gq6","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-36pmm","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-5vc34","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/cornerradius(_:)","title":"func cornerRadius(CornerRadiusStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/disabledynamictype(sizecategory:)","title":"func disableDynamicType(sizeCategory: ContentSizeCategory) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/dynamictypesize(_:)-50lby","title":"func dynamicTypeSize<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/dynamictypesize(_:)-5ucna","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/enabled(_:)","title":"func enabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-11rm6","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-84rlv","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/fileexporter(ispresented:documents:contenttype:oncompletion:)-5nbhq","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/fileexporter(ispresented:documents:contenttype:oncompletion:)-68n6o","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/focusedobject(_:)-3st1u","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/focusedobject(_:)-826oc","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/focusedsceneobject(_:)-6k00b","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/focusedsceneobject(_:)-7l7w3","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/focusedscenevalue(_:_:)-3fgsf","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/focusedscenevalue(_:_:)-6pq9q","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/focusedvalue(_:_:)-1miwh","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/focusedvalue(_:_:)-8ur73","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/font(_:)-7i39g","title":"func font(FontStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/font(_:)-9fhlv","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/font(identifier:style:weight:)","title":"func font(identifier: FontIdentifier, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/font(name:style:weight:)","title":"func font(name: String, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/frame(_:)","title":"func frame(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/frame(square:)","title":"func frame(square: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/fullscreencover(_:)","title":"func fullScreenCover(FullScreenCoverContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/height(_:)","title":"func height(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/help(_:)-1btza","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/help(_:)-49p70","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/help(_:)-5obkn","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/hidden(if:)","title":"func hidden(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/hidekeyboard()","title":"func hideKeyboard()","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/keyboardshortcut(_:)-63i0i","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/keyboardshortcut(_:)-94cs1","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/linelimit(_:)","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/listitemtint(_:)-7yjox","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/listitemtint(_:)-8uiqp","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/navigationbartitle(_:)-3vxcu","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/navigationbartitle(_:)-80ok3","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/navigationbartitle(_:)-84hb6","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/navigationbartitle(_:displaymode:)-25oe0","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/navigationbartitle(_:displaymode:)-3dy8n","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/navigationbartitle(_:displaymode:)-8d7sc","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/navigationdocument(_:)-7wle3","title":"func navigationDocument<D>(D) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/navigationdocument(_:)-9d4ce","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/navigationdocument(_:preview:)-12bp2","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/navigationdocument(_:preview:)-2pst4","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/navigationdocument(_:preview:)-53cai","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/navigationdocument(_:preview:)-8zet7","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/navigationtitle(_:)-1yrnd","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/navigationtitle(_:)-3td1f","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/navigationtitle(_:)-4x2xk","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/navigationtitle(_:)-95u7g","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/navigationtitle(_:)-t1lh","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/ondrop(of:delegate:)-1k2mc","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/ondrop(of:delegate:)-86otw","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/ondrop(of:istargeted:perform:)-37ovs","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/ondrop(of:istargeted:perform:)-620ak","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/ondrop(of:istargeted:perform:)-6r7oa","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/ondrop(of:istargeted:perform:)-p9us","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/onswipegesture(maximumtime:minimumdistance:maximumdistance:gesturetimer:up:left:right:down:)","title":"func onSwipeGesture(maximumTime: TimeInterval, minimumDistance: CGFloat, maximumDistance: CGFloat, gestureTimer: GestureTimer, up: () -> Void, left: () -> Void, right: () -> Void, down: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/padding(_:)-1nel2","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/padding(_:)-9y7el","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/preferspersistentsystemoverlayshidden()","title":"func prefersPersistentSystemOverlaysHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/presentationdetents(undimmed:largestundimmed:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/presentationdetents(undimmed:largestundimmed:selection:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/renameaction(_:)-2u9wm","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/renameaction(_:)-4fz2f","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/safeareainset(edge:alignment:spacing:content:)-1euv0","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/safeareainset(edge:alignment:spacing:content:)-41v21","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/scaleeffect(_:anchor:)-21trd","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/scaleeffect(_:anchor:)-jm1w","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/searchcompletion(_:)-7lzat","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/searchcompletion(_:)-9k5c9","title":"func searchCompletion<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/searchable(if:text:placement:prompt:)","title":"func searchable(if: Bool, text: Binding<String>, placement: SearchFieldPlacement, prompt: String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/searchable(text:placement:prompt:)-82q9m","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/searchable(text:placement:prompt:)-mo26","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/searchable(text:placement:prompt:)-nrj","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/searchable(text:placement:prompt:suggestions:)-1duxq","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/searchable(text:placement:prompt:suggestions:)-7ebp5","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/searchable(text:placement:prompt:suggestions:)-wrm6","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/searchable(text:tokens:placement:prompt:token:)-35in3","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/searchable(text:tokens:placement:prompt:token:)-5qisr","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/searchable(text:tokens:placement:prompt:token:)-9n239","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-14g0x","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-1m2hq","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-9011h","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/shadow(_:)","title":"func shadow(ViewShadowStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/sheet(_:)","title":"func sheet(SheetContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/tint(_:)-5gipf","title":"func tint<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/tint(_:)-9c306","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/toolbar(content:)-42kdf","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/toolbar(content:)-4m902","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/toolbarbackground(_:for:)-7i1zc","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/toolbarbackground(_:for:)-90m1m","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/visible(if:)","title":"func visible(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/width(_:)","title":"func width(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/swiftuikit\/systemfontlistpicker\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/swiftuikit\/systemfontlistpicker","title":"SystemFontListPicker","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/systemfontpickerfont\/init(fontname:)","title":"init(fontName: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/systemfontpickerfont\/fontdisplayname","title":"let fontDisplayName: String","type":"property"},{"path":"\/documentation\/swiftuikit\/systemfontpickerfont\/fontname","title":"let fontName: String","type":"property"},{"path":"\/documentation\/swiftuikit\/systemfontpickerfont\/id-7q4lg","title":"var id: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/systemfontpickerfont\/systemfontdisplayname","title":"static var systemFontDisplayName: String","type":"property"},{"path":"\/documentation\/swiftuikit\/systemfontpickerfont\/systemfontnameprefix","title":"static var systemFontNamePrefix: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/systemfontpickerfont\/displayname(for:)","title":"static func displayName(for: String) -> String","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickerfont\/issystemfontname(_:)","title":"static func isSystemFontName(String) -> Bool","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/systemfontpickerfont\/id-1tiis","title":"var id: ObjectIdentifier","type":"property"}],"path":"\/documentation\/swiftuikit\/systemfontpickerfont\/identifiable-implementations","title":"Identifiable Implementations","type":"symbol"}],"path":"\/documentation\/swiftuikit\/systemfontpickerfont","title":"SystemFontPickerFont","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/init(font:fontsize:isselected:)","title":"init(font: SystemFontPickerFont, fontSize: CGFloat, isSelected: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/body","title":"var body: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibility(activationpoint:)-5j8cv","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibility(activationpoint:)-6gdyb","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibilityaction(named:_:)","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibilityactivationpoint(_:)-8t10y","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibilityactivationpoint(_:)-93hs9","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibilitycustomcontent(_:_:importance:)-1arys","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibilitycustomcontent(_:_:importance:)-1vvly","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibilitycustomcontent(_:_:importance:)-1wfs3","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibilitycustomcontent(_:_:importance:)-2lfqi","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibilitycustomcontent(_:_:importance:)-3y7mu","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibilitycustomcontent(_:_:importance:)-89mnm","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibilitycustomcontent(_:_:importance:)-9kqr7","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibilitycustomcontent(_:_:importance:)-w4j9","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibilityhint(_:)-1qaxw","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibilityhint(_:)-3m8l0","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibilityhint(_:)-9nwj5","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibilityinputlabels(_:)-6atpz","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibilityinputlabels(_:)-76q9q","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibilityinputlabels(_:)-9fti","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibilitylabel(_:)-2d2u8","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibilitylabel(_:)-82oq8","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibilitylabel(_:)-97pve","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibilityrotor(_:entries:)-48tzw","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibilityrotor(_:entries:)-86mrd","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibilityrotor(_:entries:)-99173","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibilityrotor(_:entries:)-9lez8","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibilityrotor(_:entries:entryid:entrylabel:)-1n2ws","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibilityrotor(_:entries:entryid:entrylabel:)-3vzk3","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibilityrotor(_:entries:entryid:entrylabel:)-4r0nt","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibilityrotor(_:entries:entryid:entrylabel:)-8ck0z","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibilityrotor(_:entries:entrylabel:)-13lx9","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibilityrotor(_:entries:entrylabel:)-1tce1","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibilityrotor(_:entries:entrylabel:)-6be11","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibilityrotor(_:entries:entrylabel:)-9vayz","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibilityrotor(_:textranges:)-1blny","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibilityrotor(_:textranges:)-7j684","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibilityrotor(_:textranges:)-82gaa","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibilityrotor(_:textranges:)-8kzuo","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibilityvalue(_:)-1vpod","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibilityvalue(_:)-357nb","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/accessibilityvalue(_:)-6o3sm","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/alert(_:)","title":"func alert(AlertContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/alert(_:ispresented:actions:)-73wyj","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/alert(_:ispresented:actions:)-7jz8m","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/alert(_:ispresented:actions:)-8isik","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/alert(_:ispresented:actions:message:)-7cq8r","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/alert(_:ispresented:actions:message:)-7odem","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/alert(_:ispresented:actions:message:)-zin3","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/alert(_:ispresented:presenting:actions:)-4a1my","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/alert(_:ispresented:presenting:actions:)-5qxfr","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/alert(_:ispresented:presenting:actions:)-88d1p","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/alert(_:ispresented:presenting:actions:message:)-870y3","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/alert(_:ispresented:presenting:actions:message:)-8z9fz","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/alert(_:ispresented:presenting:actions:message:)-9h7jr","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/alignmentguide(_:computevalue:)-1ptjz","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/alignmentguide(_:computevalue:)-90pr0","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/any()","title":"func any() -> AnyView","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/aspectratio(_:contentmode:)-5bv52","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/aspectratio(_:contentmode:)-994qr","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/autosave(_:debounceinterval:action:)","title":"func autosave<T>(Published<T>.Publisher, debounceInterval: RunLoop.SchedulerTimeType.Stride, action: () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/background(_:in:fillstyle:)-1ueg5","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/background(_:in:fillstyle:)-3fyij","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/background(in:fillstyle:)-4r2r","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/background(in:fillstyle:)-5j6y3","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/badge(_:)-1x9mr","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/badge(_:)-33lgb","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/badge(_:)-44vb0","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/badge(_:)-4f88z","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/bindsafeareainsets(to:)","title":"func bindSafeAreaInsets(to: Binding<EdgeInsets>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/bindsize(to:)","title":"func bindSize(to: Binding<CGSize>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/border(_:width:cornerradius:)","title":"func border<Content>(Content, width: CGFloat, cornerRadius: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/buttonstyle(_:)-2r9m2","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/buttonstyle(_:)-3zg1s","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/confirmationdialog(_:ispresented:titlevisibility:actions:)-8p3bd","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/confirmationdialog(_:ispresented:titlevisibility:actions:)-91tbi","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/confirmationdialog(_:ispresented:titlevisibility:actions:)-ij1","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-4je2z","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-5meyc","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-8e4i4","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-24pdn","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-3b5jl","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-9tkar","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-44rg4","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-5alsq","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-7yso5","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/cornerradius(_:)","title":"func cornerRadius(CornerRadiusStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/disabledynamictype(sizecategory:)","title":"func disableDynamicType(sizeCategory: ContentSizeCategory) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/dynamictypesize(_:)-4pj1d","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/dynamictypesize(_:)-ldmg","title":"func dynamicTypeSize<T>(T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/enabled(_:)","title":"func enabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-6jn7l","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-8q2ww","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/fileexporter(ispresented:documents:contenttype:oncompletion:)-3i5az","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/fileexporter(ispresented:documents:contenttype:oncompletion:)-79sfz","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/focusedobject(_:)-2koi8","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/focusedobject(_:)-9tbxv","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/focusedsceneobject(_:)-20z5j","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/focusedsceneobject(_:)-5sopi","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/focusedscenevalue(_:_:)-2zj2l","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/focusedscenevalue(_:_:)-9o19f","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/focusedvalue(_:_:)-3jbib","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/focusedvalue(_:_:)-8k5wi","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/font(_:)-1ysbf","title":"func font(FontStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/font(_:)-26ayi","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/font(identifier:style:weight:)","title":"func font(identifier: FontIdentifier, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/font(name:style:weight:)","title":"func font(name: String, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/frame(_:)","title":"func frame(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/frame(square:)","title":"func frame(square: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/fullscreencover(_:)","title":"func fullScreenCover(FullScreenCoverContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/height(_:)","title":"func height(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/help(_:)-5l0x6","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/help(_:)-6lfmr","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/help(_:)-lc2n","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/hidden(if:)","title":"func hidden(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/hidekeyboard()","title":"func hideKeyboard()","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/keyboardshortcut(_:)-1v67o","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/keyboardshortcut(_:)-24fcc","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/linelimit(_:)","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/listitemtint(_:)-9pxrj","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/listitemtint(_:)-im62","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/navigationbartitle(_:)-2o6ap","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/navigationbartitle(_:)-372a4","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/navigationbartitle(_:)-59n1h","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/navigationbartitle(_:displaymode:)-4l1j7","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/navigationbartitle(_:displaymode:)-4rwik","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/navigationbartitle(_:displaymode:)-6s8z6","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/navigationdocument(_:)-23xyv","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/navigationdocument(_:)-6mcof","title":"func navigationDocument<D>(D) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/navigationdocument(_:preview:)-1op8b","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/navigationdocument(_:preview:)-4zltp","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/navigationdocument(_:preview:)-9daf4","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/navigationdocument(_:preview:)-nty2","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/navigationtitle(_:)-2wtdp","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/navigationtitle(_:)-3bjsk","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/navigationtitle(_:)-4qbvi","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/navigationtitle(_:)-67kby","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/navigationtitle(_:)-7btou","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/ondrop(of:delegate:)-6m95f","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/ondrop(of:delegate:)-842v3","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/ondrop(of:istargeted:perform:)-2gfve","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/ondrop(of:istargeted:perform:)-7mmre","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/ondrop(of:istargeted:perform:)-8j3rk","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/ondrop(of:istargeted:perform:)-h8bo","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/onswipegesture(maximumtime:minimumdistance:maximumdistance:gesturetimer:up:left:right:down:)","title":"func onSwipeGesture(maximumTime: TimeInterval, minimumDistance: CGFloat, maximumDistance: CGFloat, gestureTimer: GestureTimer, up: () -> Void, left: () -> Void, right: () -> Void, down: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/padding(_:)-28q45","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/padding(_:)-5z4rd","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/preferspersistentsystemoverlayshidden()","title":"func prefersPersistentSystemOverlaysHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/presentationdetents(undimmed:largestundimmed:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/presentationdetents(undimmed:largestundimmed:selection:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/renameaction(_:)-5jp15","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/renameaction(_:)-9xuvc","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/safeareainset(edge:alignment:spacing:content:)-65duf","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/safeareainset(edge:alignment:spacing:content:)-9ngnz","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/scaleeffect(_:anchor:)-6t09y","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/scaleeffect(_:anchor:)-6xt8n","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/searchcompletion(_:)-1ynxs","title":"func searchCompletion<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/searchcompletion(_:)-3uyb0","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/searchable(if:text:placement:prompt:)","title":"func searchable(if: Bool, text: Binding<String>, placement: SearchFieldPlacement, prompt: String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/searchable(text:placement:prompt:)-1f77o","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/searchable(text:placement:prompt:)-272es","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/searchable(text:placement:prompt:)-2pjke","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/searchable(text:placement:prompt:suggestions:)-1a5d6","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/searchable(text:placement:prompt:suggestions:)-1rxg6","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/searchable(text:placement:prompt:suggestions:)-73bmz","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/searchable(text:tokens:placement:prompt:token:)-4e355","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/searchable(text:tokens:placement:prompt:token:)-6yxo1","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/searchable(text:tokens:placement:prompt:token:)-85znw","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-65ynb","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-86zi3","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-8qfns","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/shadow(_:)","title":"func shadow(ViewShadowStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/sheet(_:)","title":"func sheet(SheetContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/tint(_:)-6ov2l","title":"func tint<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/tint(_:)-87f0i","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/toolbar(content:)-3prp4","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/toolbar(content:)-5ho36","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/toolbarbackground(_:for:)-3r14h","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/toolbarbackground(_:for:)-4mmm5","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/visible(if:)","title":"func visible(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/width(_:)","title":"func width(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/swiftuikit\/systemfontpickeritem\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/swiftuikit\/systemfontpickeritem","title":"SystemFontPickerItem","type":"struct"},{"title":"Presentation","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/presentationcontext\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/presentationcontext\/content","title":"var content: (() -> Content)?","type":"property"},{"path":"\/documentation\/swiftuikit\/presentationcontext\/isactive","title":"var isActive: Bool","type":"property"},{"path":"\/documentation\/swiftuikit\/presentationcontext\/isactivebinding","title":"var isActiveBinding: Binding<Bool>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/presentationcontext\/dismiss()","title":"func dismiss()","type":"method"},{"path":"\/documentation\/swiftuikit\/presentationcontext\/presentcontent(_:)","title":"func presentContent(() -> Content)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/presentationcontext\/objectwillchange","title":"var objectWillChange: ObservableObjectPublisher","type":"property"}],"path":"\/documentation\/swiftuikit\/presentationcontext\/observableobject-implementations","title":"ObservableObject Implementations","type":"symbol"}],"path":"\/documentation\/swiftuikit\/presentationcontext","title":"PresentationContext","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/alertcontext\/present(_:)-7zy46","title":"func present(AlertProvider)","type":"method"},{"path":"\/documentation\/swiftuikit\/alertcontext\/present(_:)-8byh2","title":"func present(() -> Alert)","type":"method"}],"path":"\/documentation\/swiftuikit\/alertcontext","title":"AlertContext","type":"class"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/alertcontextfocusedvaluekey\/value","title":"AlertContextFocusedValueKey.Value","type":"typealias"}],"path":"\/documentation\/swiftuikit\/alertcontextfocusedvaluekey","title":"AlertContextFocusedValueKey","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/alertprovider\/alert","title":"var alert: Alert","type":"property"}],"path":"\/documentation\/swiftuikit\/alertprovider","title":"AlertProvider","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/fullscreencovercontext\/present(_:)-4azb5","title":"func present(FullScreenCoverProvider)","type":"method"},{"path":"\/documentation\/swiftuikit\/fullscreencovercontext\/present(_:)-8uwec","title":"func present<Cover>(() -> Cover)","type":"method"}],"path":"\/documentation\/swiftuikit\/fullscreencovercontext","title":"FullScreenCoverContext","type":"class"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/fullscreencovercontextfocusedvaluekey\/value","title":"FullScreenCoverContextFocusedValueKey.Value","type":"typealias"}],"path":"\/documentation\/swiftuikit\/fullscreencovercontextfocusedvaluekey","title":"FullScreenCoverContextFocusedValueKey","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/fullscreencoverprovider\/cover","title":"var cover: AnyView","type":"property"}],"path":"\/documentation\/swiftuikit\/fullscreencoverprovider","title":"FullScreenCoverProvider","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/sheetcontext\/present(_:)-30mub","title":"func present(SheetProvider)","type":"method"},{"path":"\/documentation\/swiftuikit\/sheetcontext\/present(_:)-6rwaf","title":"func present<Sheet>(() -> Sheet)","type":"method"}],"path":"\/documentation\/swiftuikit\/sheetcontext","title":"SheetContext","type":"class"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/sheetcontextfocusedvaluekey\/value","title":"SheetContextFocusedValueKey.Value","type":"typealias"}],"path":"\/documentation\/swiftuikit\/sheetcontextfocusedvaluekey","title":"SheetContextFocusedValueKey","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/sheetprovider\/sheet","title":"var sheet: AnyView","type":"property"}],"path":"\/documentation\/swiftuikit\/sheetprovider","title":"SheetProvider","type":"protocol"},{"title":"Previews","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/swiftpreviewinspector\/isswiftuipreview","title":"var isSwiftUIPreview: Bool","type":"property"}],"path":"\/documentation\/swiftuikit\/swiftpreviewinspector","title":"SwiftPreviewInspector","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/standardswiftpreviewinspector\/isswiftuipreview","title":"var isSwiftUIPreview: Bool","type":"property"}],"path":"\/documentation\/swiftuikit\/standardswiftpreviewinspector","title":"StandardSwiftPreviewInspector","type":"class"},{"title":"Printing","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/itemprinter\/canprint(_:)","title":"func canPrint(PrintableItem) -> Bool","type":"method"},{"path":"\/documentation\/swiftuikit\/itemprinter\/printitem(_:)","title":"func printItem(PrintableItem)","type":"method"}],"path":"\/documentation\/swiftuikit\/itemprinter","title":"ItemPrinter","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/itemprintingview\/printitem(_:with:)","title":"func printItem(PrintableItem, with: ItemPrinter)","type":"method"}],"path":"\/documentation\/swiftuikit\/itemprintingview","title":"ItemPrintingView","type":"protocol"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/printableitem\/pdf(url:)","title":"case pdf(url: URL)","type":"case"}],"path":"\/documentation\/swiftuikit\/printableitem","title":"PrintableItem","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/standarditemprinter\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/standarditemprinter\/canprint(_:)","title":"func canPrint(PrintableItem) -> Bool","type":"method"},{"path":"\/documentation\/swiftuikit\/standarditemprinter\/printitem(_:)","title":"func printItem(PrintableItem)","type":"method"}],"path":"\/documentation\/swiftuikit\/standarditemprinter","title":"StandardItemPrinter","type":"class"},{"title":"Sharing","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/sharesheet\/init(activityitems:applicationactivities:excludedactivitytypes:callback:)","title":"init(activityItems: [Any], applicationActivities: [UIActivity]?, excludedActivityTypes: [UIActivity.ActivityType]?, callback: Callback?)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/sharesheet\/makeuiviewcontroller(context:)","title":"func makeUIViewController(context: Context) -> UIActivityViewController","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/updateuiviewcontroller(_:context:)","title":"func updateUIViewController(UIActivityViewController, context: Context)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/sharesheet\/callback","title":"ShareSheet.Callback","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/sharesheet\/body","title":"var body: Never","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/sharesheet\/makecoordinator()","title":"func makeCoordinator() -> Self.Coordinator","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/sizethatfits(_:uiviewcontroller:context:)","title":"func sizeThatFits(ProposedViewSize, uiViewController: Self.UIViewControllerType, context: Self.Context) -> CGSize?","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/sharesheet\/dismantleuiviewcontroller(_:coordinator:)","title":"static func dismantleUIViewController(Self.UIViewControllerType, coordinator: Self.Coordinator)","type":"method"}],"path":"\/documentation\/swiftuikit\/sharesheet\/uiviewcontrollerrepresentable-implementations","title":"UIViewControllerRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/sharesheet\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/sharesheet\/accessibility(activationpoint:)-541y0","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/sharesheet\/accessibility(activationpoint:)-87xfa","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/sharesheet\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/sharesheet\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/sharesheet\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/sharesheet\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/sharesheet\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/sharesheet\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/sharesheet\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/sharesheet\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/sharesheet\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/accessibilityaction(named:_:)","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/accessibilityactivationpoint(_:)-6qkm7","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/accessibilityactivationpoint(_:)-7s2ba","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/accessibilitycustomcontent(_:_:importance:)-3rcg1","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/accessibilitycustomcontent(_:_:importance:)-41buo","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/accessibilitycustomcontent(_:_:importance:)-4eyyn","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/accessibilitycustomcontent(_:_:importance:)-4m0ht","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/accessibilitycustomcontent(_:_:importance:)-6jnzb","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/accessibilitycustomcontent(_:_:importance:)-919a","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/accessibilitycustomcontent(_:_:importance:)-lyw8","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/accessibilitycustomcontent(_:_:importance:)-vpe","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/accessibilityhint(_:)-23pfk","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/accessibilityhint(_:)-63g1y","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/accessibilityhint(_:)-7uo0b","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/accessibilityinputlabels(_:)-6t1iu","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/accessibilityinputlabels(_:)-6y0cw","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/accessibilityinputlabels(_:)-7j8jk","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/accessibilitylabel(_:)-33opw","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/accessibilitylabel(_:)-7ogzi","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/accessibilitylabel(_:)-7zt92","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/accessibilityrotor(_:entries:)-25kpe","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/accessibilityrotor(_:entries:)-5036g","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/accessibilityrotor(_:entries:)-95sg7","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/accessibilityrotor(_:entries:)-9ktmh","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/accessibilityrotor(_:entries:entryid:entrylabel:)-3jjc4","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/accessibilityrotor(_:entries:entryid:entrylabel:)-3owx5","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/accessibilityrotor(_:entries:entryid:entrylabel:)-505c2","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/accessibilityrotor(_:entries:entryid:entrylabel:)-6qtq2","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/accessibilityrotor(_:entries:entrylabel:)-2m7sl","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/accessibilityrotor(_:entries:entrylabel:)-50ulv","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/accessibilityrotor(_:entries:entrylabel:)-7s071","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/accessibilityrotor(_:entries:entrylabel:)-9f73l","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/accessibilityrotor(_:textranges:)-2nv3q","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/accessibilityrotor(_:textranges:)-4j8f0","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/accessibilityrotor(_:textranges:)-6ftt3","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/accessibilityrotor(_:textranges:)-6osmr","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/accessibilityvalue(_:)-173ka","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/accessibilityvalue(_:)-1k9td","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/accessibilityvalue(_:)-9e0rp","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/sharesheet\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/sharesheet\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/alert(_:)","title":"func alert(AlertContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/alert(_:ispresented:actions:)-1f5g2","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/alert(_:ispresented:actions:)-40bu8","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/alert(_:ispresented:actions:)-4ce1z","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/alert(_:ispresented:actions:message:)-4b4r8","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/alert(_:ispresented:actions:message:)-709je","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/alert(_:ispresented:actions:message:)-8f7zo","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/alert(_:ispresented:presenting:actions:)-4o76p","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/alert(_:ispresented:presenting:actions:)-54bf1","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/alert(_:ispresented:presenting:actions:)-syzd","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/alert(_:ispresented:presenting:actions:message:)-2w03p","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/alert(_:ispresented:presenting:actions:message:)-3u6ik","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/alert(_:ispresented:presenting:actions:message:)-6xh2","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/sharesheet\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/sharesheet\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/alignmentguide(_:computevalue:)-5yacg","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/alignmentguide(_:computevalue:)-71h4x","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/sharesheet\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/any()","title":"func any() -> AnyView","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/aspectratio(_:contentmode:)-52eoc","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/aspectratio(_:contentmode:)-v167","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/sharesheet\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/autosave(_:debounceinterval:action:)","title":"func autosave<T>(Published<T>.Publisher, debounceInterval: RunLoop.SchedulerTimeType.Stride, action: () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/sharesheet\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/background(_:in:fillstyle:)-4mbc9","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/background(_:in:fillstyle:)-94i51","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/background(in:fillstyle:)-2lmqr","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/background(in:fillstyle:)-82hde","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/badge(_:)-1ght4","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/badge(_:)-5o42z","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/badge(_:)-5u61b","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/badge(_:)-6kr1k","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/bindsafeareainsets(to:)","title":"func bindSafeAreaInsets(to: Binding<EdgeInsets>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/bindsize(to:)","title":"func bindSize(to: Binding<CGSize>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/border(_:width:cornerradius:)","title":"func border<Content>(Content, width: CGFloat, cornerRadius: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/buttonstyle(_:)-544xl","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/buttonstyle(_:)-5bkxz","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/sharesheet\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/confirmationdialog(_:ispresented:titlevisibility:actions:)-4lz7q","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/confirmationdialog(_:ispresented:titlevisibility:actions:)-7cnu9","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/confirmationdialog(_:ispresented:titlevisibility:actions:)-7eark","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-1v7ch","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-5fujb","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-8anmq","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-6850i","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-6d707","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-70vy7","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-4jvew","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-4p41w","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-5k7pu","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/sharesheet\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/sharesheet\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/cornerradius(_:)","title":"func cornerRadius(CornerRadiusStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/sharesheet\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/disabledynamictype(sizecategory:)","title":"func disableDynamicType(sizeCategory: ContentSizeCategory) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/dynamictypesize(_:)-2eg21","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/dynamictypesize(_:)-95n0v","title":"func dynamicTypeSize<T>(T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/sharesheet\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/enabled(_:)","title":"func enabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-31vmx","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-3rhd5","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/fileexporter(ispresented:documents:contenttype:oncompletion:)-4adj3","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/fileexporter(ispresented:documents:contenttype:oncompletion:)-4zmty","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/focusedobject(_:)-8fqy6","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/focusedobject(_:)-9vk07","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/focusedsceneobject(_:)-305at","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/focusedsceneobject(_:)-725iv","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/focusedscenevalue(_:_:)-53xmw","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/focusedscenevalue(_:_:)-k7","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/focusedvalue(_:_:)-4lwgw","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/focusedvalue(_:_:)-6r393","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/font(_:)-3pn1d","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/font(_:)-5e1yc","title":"func font(FontStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/font(identifier:style:weight:)","title":"func font(identifier: FontIdentifier, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/font(name:style:weight:)","title":"func font(name: String, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/frame(_:)","title":"func frame(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/frame(square:)","title":"func frame(square: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/fullscreencover(_:)","title":"func fullScreenCover(FullScreenCoverContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/height(_:)","title":"func height(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/help(_:)-1sro9","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/help(_:)-6vc0a","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/help(_:)-99pyw","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/hidden(if:)","title":"func hidden(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/hidekeyboard()","title":"func hideKeyboard()","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/keyboardshortcut(_:)-8re5t","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/keyboardshortcut(_:)-8yp3e","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/linelimit(_:)","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/listitemtint(_:)-1atc3","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/listitemtint(_:)-6djx","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/sharesheet\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/sharesheet\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/sharesheet\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/sharesheet\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/sharesheet\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/sharesheet\/navigationbartitle(_:)-6l6x4","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/sharesheet\/navigationbartitle(_:)-7wjju","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/sharesheet\/navigationbartitle(_:)-okmy","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/sharesheet\/navigationbartitle(_:displaymode:)-9sj58","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/sharesheet\/navigationbartitle(_:displaymode:)-hua3","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/sharesheet\/navigationbartitle(_:displaymode:)-yds8","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/navigationdocument(_:)-7bzsw","title":"func navigationDocument<D>(D) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/navigationdocument(_:)-9rx5f","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/navigationdocument(_:preview:)-28k7u","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/navigationdocument(_:preview:)-338c6","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/navigationdocument(_:preview:)-6gqea","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/navigationdocument(_:preview:)-7m116","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/navigationtitle(_:)-4aoyy","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/navigationtitle(_:)-5erb3","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/navigationtitle(_:)-63dg7","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/navigationtitle(_:)-8c9wm","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/navigationtitle(_:)-9xuhq","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/sharesheet\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/sharesheet\/ondrop(of:delegate:)-59f2u","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/ondrop(of:delegate:)-9701w","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/ondrop(of:istargeted:perform:)-1oimd","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/sharesheet\/ondrop(of:istargeted:perform:)-3bzn","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/sharesheet\/ondrop(of:istargeted:perform:)-8ermi","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/ondrop(of:istargeted:perform:)-8n91z","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/sharesheet\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/sharesheet\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/onswipegesture(maximumtime:minimumdistance:maximumdistance:gesturetimer:up:left:right:down:)","title":"func onSwipeGesture(maximumTime: TimeInterval, minimumDistance: CGFloat, maximumDistance: CGFloat, gestureTimer: GestureTimer, up: () -> Void, left: () -> Void, right: () -> Void, down: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/sharesheet\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/padding(_:)-3ynms","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/padding(_:)-83t6f","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/preferspersistentsystemoverlayshidden()","title":"func prefersPersistentSystemOverlaysHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/presentationdetents(undimmed:largestundimmed:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/presentationdetents(undimmed:largestundimmed:selection:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/renameaction(_:)-77zfc","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/renameaction(_:)-7gyfm","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/safeareainset(edge:alignment:spacing:content:)-7ifmx","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/safeareainset(edge:alignment:spacing:content:)-7ingw","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/scaleeffect(_:anchor:)-5dwtt","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/scaleeffect(_:anchor:)-7m4wg","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/searchcompletion(_:)-29x46","title":"func searchCompletion<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/searchcompletion(_:)-4hpvt","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/searchable(if:text:placement:prompt:)","title":"func searchable(if: Bool, text: Binding<String>, placement: SearchFieldPlacement, prompt: String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/searchable(text:placement:prompt:)-1h0d3","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/searchable(text:placement:prompt:)-28bqg","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/searchable(text:placement:prompt:)-90xf2","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/sharesheet\/searchable(text:placement:prompt:suggestions:)-319oq","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/sharesheet\/searchable(text:placement:prompt:suggestions:)-9gyw6","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/sharesheet\/searchable(text:placement:prompt:suggestions:)-9jrxv","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/searchable(text:tokens:placement:prompt:token:)-7ghb9","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/searchable(text:tokens:placement:prompt:token:)-8yqfh","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/searchable(text:tokens:placement:prompt:token:)-zsn","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-8ye2i","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-8zcj3","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-9j0hw","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/shadow(_:)","title":"func shadow(ViewShadowStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/sheet(_:)","title":"func sheet(SheetContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/sharesheet\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/tint(_:)-3xbb0","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/tint(_:)-6aq89","title":"func tint<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/toolbar(content:)-27xgd","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/toolbar(content:)-4999r","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/toolbarbackground(_:for:)-1xfon","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/toolbarbackground(_:for:)-zmar","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/visible(if:)","title":"func visible(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/width(_:)","title":"func width(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/sharesheet\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/swiftuikit\/sharesheet\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/swiftuikit\/sharesheet","title":"ShareSheet","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/urlsharing\/sheet","title":"var sheet: SheetContext","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/urlsharing\/share(_:)","title":"func share(URL)","type":"method"}],"path":"\/documentation\/swiftuikit\/urlsharing","title":"UrlSharing","type":"protocol"},{"title":"Styles","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/cornerradiusstyle\/init(radius:)","title":"init(radius: CGFloat)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/cornerradiusstyle\/radius","title":"let radius: CGFloat","type":"property"}],"path":"\/documentation\/swiftuikit\/cornerradiusstyle","title":"CornerRadiusStyle","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/fontidentifier\/fontname","title":"var fontName: String","type":"property"}],"path":"\/documentation\/swiftuikit\/fontidentifier","title":"FontIdentifier","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/fontstyle\/init(identifier:style:weight:)","title":"init(identifier: FontIdentifier, style: UIFont.TextStyle, weight: Font.Weight)","type":"init"},{"path":"\/documentation\/swiftuikit\/fontstyle\/init(name:style:weight:)","title":"init(name: String, style: UIFont.TextStyle, weight: Font.Weight)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/fontstyle\/font","title":"var font: Font","type":"property"},{"path":"\/documentation\/swiftuikit\/fontstyle\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/swiftuikit\/fontstyle\/size","title":"var size: CGFloat","type":"property"},{"path":"\/documentation\/swiftuikit\/fontstyle\/style","title":"let style: UIFont.TextStyle","type":"property"},{"path":"\/documentation\/swiftuikit\/fontstyle\/weight","title":"let weight: Font.Weight","type":"property"}],"path":"\/documentation\/swiftuikit\/fontstyle","title":"FontStyle","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/viewshadowstyle\/init(color:radius:x:y:)","title":"init(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/viewshadowstyle\/color","title":"let color: Color","type":"property"},{"path":"\/documentation\/swiftuikit\/viewshadowstyle\/radius","title":"let radius: CGFloat","type":"property"},{"path":"\/documentation\/swiftuikit\/viewshadowstyle\/x","title":"let x: CGFloat","type":"property"},{"path":"\/documentation\/swiftuikit\/viewshadowstyle\/y","title":"let y: CGFloat","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/viewshadowstyle\/badge","title":"static var badge: ViewShadowStyle","type":"property"},{"path":"\/documentation\/swiftuikit\/viewshadowstyle\/elevated","title":"static var elevated: ViewShadowStyle","type":"property"},{"path":"\/documentation\/swiftuikit\/viewshadowstyle\/formactionbutton","title":"static var formActionButton: ViewShadowStyle","type":"property"},{"path":"\/documentation\/swiftuikit\/viewshadowstyle\/none","title":"static var none: ViewShadowStyle","type":"property"},{"path":"\/documentation\/swiftuikit\/viewshadowstyle\/progressbar","title":"static let progressBar: ViewShadowStyle","type":"property"}],"path":"\/documentation\/swiftuikit\/viewshadowstyle","title":"ViewShadowStyle","type":"struct"},{"title":"Views","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/init(topleft:topright:bottomleft:bottomright:)","title":"init(topLeft: CGFloat, topRight: CGFloat, bottomLeft: CGFloat, bottomRight: CGFloat)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/path(in:)","title":"func path(in: CGRect) -> Path","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/animatabledata","title":"var animatableData: EmptyAnimatableData","type":"property"}],"path":"\/documentation\/swiftuikit\/customroundedrectangle\/animatable-implementations","title":"Animatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/fill(_:style:)","title":"func fill<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/fill(style:)","title":"func fill(style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/offset(_:)-3axxx","title":"func offset(CGSize) -> OffsetShape<Self>","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/offset(_:)-6myc8","title":"func offset(CGPoint) -> OffsetShape<Self>","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> OffsetShape<Self>","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/rotation(_:anchor:)","title":"func rotation(Angle, anchor: UnitPoint) -> RotatedShape<Self>","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/scale(_:anchor:)","title":"func scale(CGFloat, anchor: UnitPoint) -> ScaledShape<Self>","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/scale(x:y:anchor:)","title":"func scale(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> ScaledShape<Self>","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/size(_:)","title":"func size(CGSize) -> some Shape","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/size(width:height:)","title":"func size(width: CGFloat, height: CGFloat) -> some Shape","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/sizethatfits(_:)","title":"func sizeThatFits(ProposedViewSize) -> CGSize","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/stroke(_:linewidth:)","title":"func stroke<S>(S, lineWidth: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/stroke(_:style:)","title":"func stroke<S>(S, style: StrokeStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/stroke(linewidth:)","title":"func stroke(lineWidth: CGFloat) -> some Shape","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/stroke(style:)","title":"func stroke(style: StrokeStyle) -> some Shape","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/transform(_:)","title":"func transform(CGAffineTransform) -> TransformedShape<Self>","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/trim(from:to:)","title":"func trim(from: CGFloat, to: CGFloat) -> some Shape","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/role","title":"static var role: ShapeRole","type":"property"}],"path":"\/documentation\/swiftuikit\/customroundedrectangle\/shape-implementations","title":"Shape Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/body","title":"var body: _ShapeView<Self, ForegroundStyle>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibility(activationpoint:)-6oh6c","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibility(activationpoint:)-89orm","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibilityaction(named:_:)","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibilityactivationpoint(_:)-5hx5q","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibilityactivationpoint(_:)-7txh","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibilitycustomcontent(_:_:importance:)-1c5q3","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibilitycustomcontent(_:_:importance:)-4yd05","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibilitycustomcontent(_:_:importance:)-5h8uq","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibilitycustomcontent(_:_:importance:)-60zbt","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibilitycustomcontent(_:_:importance:)-76pp0","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibilitycustomcontent(_:_:importance:)-9i4ud","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibilitycustomcontent(_:_:importance:)-9rgeb","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibilitycustomcontent(_:_:importance:)-kywy","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibilityhint(_:)-1psp","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibilityhint(_:)-9ln4v","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibilityhint(_:)-v6c6","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibilityinputlabels(_:)-29oh4","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibilityinputlabels(_:)-7b0k9","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibilityinputlabels(_:)-gs9e","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibilitylabel(_:)-170jl","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibilitylabel(_:)-7xqt","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibilitylabel(_:)-dyih","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibilityrotor(_:entries:)-323xz","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibilityrotor(_:entries:)-4ebwg","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibilityrotor(_:entries:)-59qnb","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibilityrotor(_:entries:)-5nk43","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibilityrotor(_:entries:entryid:entrylabel:)-620jn","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibilityrotor(_:entries:entryid:entrylabel:)-74mj","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibilityrotor(_:entries:entryid:entrylabel:)-7ycel","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibilityrotor(_:entries:entryid:entrylabel:)-8nuz0","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibilityrotor(_:entries:entrylabel:)-1e0i6","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibilityrotor(_:entries:entrylabel:)-1yarl","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibilityrotor(_:entries:entrylabel:)-5zj2s","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibilityrotor(_:entries:entrylabel:)-950e7","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibilityrotor(_:textranges:)-2pn4w","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibilityrotor(_:textranges:)-3ycy6","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibilityrotor(_:textranges:)-5f0kk","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibilityrotor(_:textranges:)-5vfvv","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibilityvalue(_:)-1vgnq","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibilityvalue(_:)-48car","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/accessibilityvalue(_:)-49wsk","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/customroundedrectangle\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/customroundedrectangle\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/alert(_:)","title":"func alert(AlertContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/alert(_:ispresented:actions:)-7zyw5","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/alert(_:ispresented:actions:)-8kvxn","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/alert(_:ispresented:actions:)-8l3qe","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/alert(_:ispresented:actions:message:)-241rd","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/alert(_:ispresented:actions:message:)-8ev5k","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/alert(_:ispresented:actions:message:)-9lkw6","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/alert(_:ispresented:presenting:actions:)-1kx8w","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/alert(_:ispresented:presenting:actions:)-273dx","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/alert(_:ispresented:presenting:actions:)-8sef8","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/alert(_:ispresented:presenting:actions:message:)-679bc","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/alert(_:ispresented:presenting:actions:message:)-6po4h","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/alert(_:ispresented:presenting:actions:message:)-7fm1f","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/customroundedrectangle\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/customroundedrectangle\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/alignmentguide(_:computevalue:)-85nog","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/alignmentguide(_:computevalue:)-8q90l","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/customroundedrectangle\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/any()","title":"func any() -> AnyView","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/aspectratio(_:contentmode:)-3ark0","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/aspectratio(_:contentmode:)-yx08","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/customroundedrectangle\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/autosave(_:debounceinterval:action:)","title":"func autosave<T>(Published<T>.Publisher, debounceInterval: RunLoop.SchedulerTimeType.Stride, action: () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/customroundedrectangle\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/background(_:in:fillstyle:)-2x1z9","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/background(_:in:fillstyle:)-gllb","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/background(in:fillstyle:)-2b1o6","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/background(in:fillstyle:)-4bij","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/badge(_:)-355dy","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/badge(_:)-3zsql","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/badge(_:)-6wxcm","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/badge(_:)-9kkg3","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/bindsafeareainsets(to:)","title":"func bindSafeAreaInsets(to: Binding<EdgeInsets>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/bindsize(to:)","title":"func bindSize(to: Binding<CGSize>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/border(_:width:cornerradius:)","title":"func border<Content>(Content, width: CGFloat, cornerRadius: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/buttonstyle(_:)-2igo7","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/buttonstyle(_:)-858n3","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/customroundedrectangle\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/confirmationdialog(_:ispresented:titlevisibility:actions:)-3fthq","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/confirmationdialog(_:ispresented:titlevisibility:actions:)-4mz7f","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/confirmationdialog(_:ispresented:titlevisibility:actions:)-6c98y","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-3jr1n","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-8giws","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-9wcll","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-3dnlu","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-6fwc6","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-t1nr","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-5gwbf","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-7dyys","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-7svh0","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/customroundedrectangle\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/customroundedrectangle\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/cornerradius(_:)","title":"func cornerRadius(CornerRadiusStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/customroundedrectangle\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/disabledynamictype(sizecategory:)","title":"func disableDynamicType(sizeCategory: ContentSizeCategory) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/dynamictypesize(_:)-5nowe","title":"func dynamicTypeSize<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/dynamictypesize(_:)-990jl","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/customroundedrectangle\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/enabled(_:)","title":"func enabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-3zo43","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-4r7eb","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/fileexporter(ispresented:documents:contenttype:oncompletion:)-4idy3","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/fileexporter(ispresented:documents:contenttype:oncompletion:)-zds6","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/focusedobject(_:)-5bx03","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/focusedobject(_:)-79k4v","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/focusedsceneobject(_:)-7tqf7","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/focusedsceneobject(_:)-96yg7","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/focusedscenevalue(_:_:)-2r1c6","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/focusedscenevalue(_:_:)-73g2o","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/focusedvalue(_:_:)-4bo3t","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/focusedvalue(_:_:)-hsea","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/font(_:)-72rrf","title":"func font(FontStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/font(_:)-90856","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/font(identifier:style:weight:)","title":"func font(identifier: FontIdentifier, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/font(name:style:weight:)","title":"func font(name: String, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/frame(_:)","title":"func frame(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/frame(square:)","title":"func frame(square: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/fullscreencover(_:)","title":"func fullScreenCover(FullScreenCoverContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/height(_:)","title":"func height(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/help(_:)-366bs","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/help(_:)-7r1wc","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/help(_:)-86nz8","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/hidden(if:)","title":"func hidden(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/hidekeyboard()","title":"func hideKeyboard()","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/keyboardshortcut(_:)-92jfu","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/keyboardshortcut(_:)-9foid","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/linelimit(_:)","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/listitemtint(_:)-11bjg","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/listitemtint(_:)-3gptm","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/customroundedrectangle\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/customroundedrectangle\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/customroundedrectangle\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/customroundedrectangle\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/customroundedrectangle\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/customroundedrectangle\/navigationbartitle(_:)-3uo49","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/customroundedrectangle\/navigationbartitle(_:)-4u1g2","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/customroundedrectangle\/navigationbartitle(_:)-hi70","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/customroundedrectangle\/navigationbartitle(_:displaymode:)-2qyq0","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/customroundedrectangle\/navigationbartitle(_:displaymode:)-3yk3e","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/customroundedrectangle\/navigationbartitle(_:displaymode:)-u0zv","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/navigationdocument(_:)-91isx","title":"func navigationDocument<D>(D) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/navigationdocument(_:)-im1x","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/navigationdocument(_:preview:)-2cctd","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/navigationdocument(_:preview:)-84w44","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/navigationdocument(_:preview:)-8gpfr","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/navigationdocument(_:preview:)-cyld","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/navigationtitle(_:)-2rmvh","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/navigationtitle(_:)-3zl9r","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/navigationtitle(_:)-41rim","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/navigationtitle(_:)-4l9jz","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/navigationtitle(_:)-7rh3t","title":"func navigationTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/customroundedrectangle\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/offset(_:)-4axvb","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/customroundedrectangle\/ondrop(of:delegate:)-38f5e","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/ondrop(of:delegate:)-cqkw","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/customroundedrectangle\/ondrop(of:istargeted:perform:)-13vff","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/customroundedrectangle\/ondrop(of:istargeted:perform:)-18qtf","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/ondrop(of:istargeted:perform:)-5czq2","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/ondrop(of:istargeted:perform:)-5y5r3","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/customroundedrectangle\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/customroundedrectangle\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/onswipegesture(maximumtime:minimumdistance:maximumdistance:gesturetimer:up:left:right:down:)","title":"func onSwipeGesture(maximumTime: TimeInterval, minimumDistance: CGFloat, maximumDistance: CGFloat, gestureTimer: GestureTimer, up: () -> Void, left: () -> Void, right: () -> Void, down: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/customroundedrectangle\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/padding(_:)-2y3ox","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/padding(_:)-4bn7d","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/preferspersistentsystemoverlayshidden()","title":"func prefersPersistentSystemOverlaysHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/presentationdetents(undimmed:largestundimmed:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/presentationdetents(undimmed:largestundimmed:selection:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/renameaction(_:)-3zefb","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/renameaction(_:)-6z84i","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/safeareainset(edge:alignment:spacing:content:)-316oz","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/safeareainset(edge:alignment:spacing:content:)-3rmt9","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/scaleeffect(_:anchor:)-50irz","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/scaleeffect(_:anchor:)-6wky5","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/searchcompletion(_:)-2gaff","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/searchcompletion(_:)-yq62","title":"func searchCompletion<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/searchable(if:text:placement:prompt:)","title":"func searchable(if: Bool, text: Binding<String>, placement: SearchFieldPlacement, prompt: String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/searchable(text:placement:prompt:)-26rcf","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/searchable(text:placement:prompt:)-781df","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/searchable(text:placement:prompt:)-842xo","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/customroundedrectangle\/searchable(text:placement:prompt:suggestions:)-2u1zg","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/customroundedrectangle\/searchable(text:placement:prompt:suggestions:)-49e0x","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/customroundedrectangle\/searchable(text:placement:prompt:suggestions:)-6rusv","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/searchable(text:tokens:placement:prompt:token:)-5t29c","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/searchable(text:tokens:placement:prompt:token:)-9xrgb","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/searchable(text:tokens:placement:prompt:token:)-n5zq","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-19cci","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-23l6h","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-4qw4l","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/shadow(_:)","title":"func shadow(ViewShadowStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/sheet(_:)","title":"func sheet(SheetContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/customroundedrectangle\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/tint(_:)-3elu3","title":"func tint<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/tint(_:)-9xtol","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/toolbar(content:)-7zb55","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/toolbar(content:)-uimp","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/toolbarbackground(_:for:)-3knjg","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/toolbarbackground(_:for:)-74hl2","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/visible(if:)","title":"func visible(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/width(_:)","title":"func width(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/customroundedrectangle\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/swiftuikit\/customroundedrectangle\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/swiftuikit\/customroundedrectangle","title":"CustomRoundedRectangle","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/dismissableview\/presentationmode","title":"var presentationMode: Binding<PresentationMode>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/dismissableview\/dismiss()","title":"func dismiss()","type":"method"}],"path":"\/documentation\/swiftuikit\/dismissableview","title":"DismissableView","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/dotanimation\/init(dotcount:interval:)","title":"init(dotCount: Int, interval: Double)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/dotanimation\/body","title":"var body: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimation\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimation\/accessibility(activationpoint:)-5rk21","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimation\/accessibility(activationpoint:)-7rhcp","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimation\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimation\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimation\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimation\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimation\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimation\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimation\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimation\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimation\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/accessibilityaction(named:_:)","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/accessibilityactivationpoint(_:)-45ipl","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/accessibilityactivationpoint(_:)-9rzu7","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/accessibilitycustomcontent(_:_:importance:)-2mt36","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/accessibilitycustomcontent(_:_:importance:)-3inka","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/accessibilitycustomcontent(_:_:importance:)-5jciy","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/accessibilitycustomcontent(_:_:importance:)-5pkyu","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/accessibilitycustomcontent(_:_:importance:)-773vx","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/accessibilitycustomcontent(_:_:importance:)-7hglm","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/accessibilitycustomcontent(_:_:importance:)-9nxm8","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/accessibilitycustomcontent(_:_:importance:)-wir5","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/accessibilityhint(_:)-4e2v0","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/accessibilityhint(_:)-76zzy","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/accessibilityhint(_:)-qqfr","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/accessibilityinputlabels(_:)-2gsu4","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/accessibilityinputlabels(_:)-5653r","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/accessibilityinputlabels(_:)-9ctri","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/accessibilitylabel(_:)-5m9dr","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/accessibilitylabel(_:)-88bln","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/accessibilitylabel(_:)-z50","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/accessibilityrotor(_:entries:)-1kebz","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/accessibilityrotor(_:entries:)-2b8bt","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/accessibilityrotor(_:entries:)-2rmgc","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/accessibilityrotor(_:entries:)-7lm25","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/accessibilityrotor(_:entries:entryid:entrylabel:)-1yx9i","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/accessibilityrotor(_:entries:entryid:entrylabel:)-3q9ox","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/accessibilityrotor(_:entries:entryid:entrylabel:)-5co2u","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/accessibilityrotor(_:entries:entryid:entrylabel:)-8wgqr","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/accessibilityrotor(_:entries:entrylabel:)-2uy1j","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/accessibilityrotor(_:entries:entrylabel:)-8713u","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/accessibilityrotor(_:entries:entrylabel:)-8x321","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/accessibilityrotor(_:entries:entrylabel:)-ajtt","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/accessibilityrotor(_:textranges:)-2rzv5","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/accessibilityrotor(_:textranges:)-3z1xt","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/accessibilityrotor(_:textranges:)-68whe","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/accessibilityrotor(_:textranges:)-916ep","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/accessibilityvalue(_:)-3kki4","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/accessibilityvalue(_:)-3pp8g","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/accessibilityvalue(_:)-8uywy","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimation\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimation\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/alert(_:)","title":"func alert(AlertContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/alert(_:ispresented:actions:)-2982y","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/alert(_:ispresented:actions:)-2k0me","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/alert(_:ispresented:actions:)-7rq02","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/alert(_:ispresented:actions:message:)-1ob65","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/alert(_:ispresented:actions:message:)-7pbkp","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/alert(_:ispresented:actions:message:)-v0a7","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/alert(_:ispresented:presenting:actions:)-1qbqo","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/alert(_:ispresented:presenting:actions:)-5jgl","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/alert(_:ispresented:presenting:actions:)-6tzbi","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/alert(_:ispresented:presenting:actions:message:)-403c7","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/alert(_:ispresented:presenting:actions:message:)-466sc","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/alert(_:ispresented:presenting:actions:message:)-66pna","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimation\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimation\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/alignmentguide(_:computevalue:)-7ass6","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/alignmentguide(_:computevalue:)-7xt1w","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimation\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/any()","title":"func any() -> AnyView","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/aspectratio(_:contentmode:)-1x6d8","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/aspectratio(_:contentmode:)-9yr8o","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimation\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/autosave(_:debounceinterval:action:)","title":"func autosave<T>(Published<T>.Publisher, debounceInterval: RunLoop.SchedulerTimeType.Stride, action: () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimation\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/background(_:in:fillstyle:)-3ejyk","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/background(_:in:fillstyle:)-7cpex","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/background(in:fillstyle:)-2c1we","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/background(in:fillstyle:)-7bhgu","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/badge(_:)-281r7","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/badge(_:)-3dyck","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/badge(_:)-8be5o","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/badge(_:)-8ll2f","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/bindsafeareainsets(to:)","title":"func bindSafeAreaInsets(to: Binding<EdgeInsets>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/bindsize(to:)","title":"func bindSize(to: Binding<CGSize>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/border(_:width:cornerradius:)","title":"func border<Content>(Content, width: CGFloat, cornerRadius: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/buttonstyle(_:)-10u2y","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/buttonstyle(_:)-76fuq","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimation\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/confirmationdialog(_:ispresented:titlevisibility:actions:)-3592","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/confirmationdialog(_:ispresented:titlevisibility:actions:)-9d8q0","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/confirmationdialog(_:ispresented:titlevisibility:actions:)-rm7t","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-4csy1","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-94g4g","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-9fxb9","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-1iuiz","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-213dg","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-2d33k","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-1d1vv","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-1xbi7","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-7awmp","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimation\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimation\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/cornerradius(_:)","title":"func cornerRadius(CornerRadiusStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimation\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/disabledynamictype(sizecategory:)","title":"func disableDynamicType(sizeCategory: ContentSizeCategory) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/dynamictypesize(_:)-241b2","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/dynamictypesize(_:)-4tmm6","title":"func dynamicTypeSize<T>(T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimation\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/enabled(_:)","title":"func enabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-2skgv","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-9n636","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/fileexporter(ispresented:documents:contenttype:oncompletion:)-17m3i","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/fileexporter(ispresented:documents:contenttype:oncompletion:)-7qn27","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/focusedobject(_:)-6rxnf","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/focusedobject(_:)-9eh40","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/focusedsceneobject(_:)-2yv4j","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/focusedsceneobject(_:)-9ky2m","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/focusedscenevalue(_:_:)-3w1wt","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/focusedscenevalue(_:_:)-3wqkt","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/focusedvalue(_:_:)-3otsa","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/focusedvalue(_:_:)-8o6ws","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/font(_:)-4dfds","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/font(_:)-9uted","title":"func font(FontStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/font(identifier:style:weight:)","title":"func font(identifier: FontIdentifier, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/font(name:style:weight:)","title":"func font(name: String, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/frame(_:)","title":"func frame(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/frame(square:)","title":"func frame(square: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/fullscreencover(_:)","title":"func fullScreenCover(FullScreenCoverContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/height(_:)","title":"func height(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/help(_:)-3ysay","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/help(_:)-492ca","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/help(_:)-8dlq9","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/hidden(if:)","title":"func hidden(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/hidekeyboard()","title":"func hideKeyboard()","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/keyboardshortcut(_:)-8eayx","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/keyboardshortcut(_:)-8g53t","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/linelimit(_:)","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/listitemtint(_:)-3rgyp","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/listitemtint(_:)-7oykz","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimation\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimation\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimation\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimation\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimation\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimation\/navigationbartitle(_:)-2qeq0","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimation\/navigationbartitle(_:)-4q54i","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimation\/navigationbartitle(_:)-8cxug","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimation\/navigationbartitle(_:displaymode:)-1l8ik","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimation\/navigationbartitle(_:displaymode:)-1ptjv","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimation\/navigationbartitle(_:displaymode:)-54uv9","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/navigationdocument(_:)-5g8rd","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/navigationdocument(_:)-97h75","title":"func navigationDocument<D>(D) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/navigationdocument(_:preview:)-3mzkp","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/navigationdocument(_:preview:)-3qabc","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/navigationdocument(_:preview:)-7rxar","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/navigationdocument(_:preview:)-9493","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/navigationtitle(_:)-19tzr","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/navigationtitle(_:)-1q61g","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/navigationtitle(_:)-2dqwo","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/navigationtitle(_:)-4wbj0","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/navigationtitle(_:)-6p2q8","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimation\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/ondrop(of:delegate:)-5jzx4","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimation\/ondrop(of:delegate:)-7qnvz","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/ondrop(of:istargeted:perform:)-49qxx","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimation\/ondrop(of:istargeted:perform:)-6c44u","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimation\/ondrop(of:istargeted:perform:)-9qk9w","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/ondrop(of:istargeted:perform:)-9x6h1","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimation\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimation\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/onswipegesture(maximumtime:minimumdistance:maximumdistance:gesturetimer:up:left:right:down:)","title":"func onSwipeGesture(maximumTime: TimeInterval, minimumDistance: CGFloat, maximumDistance: CGFloat, gestureTimer: GestureTimer, up: () -> Void, left: () -> Void, right: () -> Void, down: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimation\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/padding(_:)-4aq1h","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/padding(_:)-7ffqd","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/preferspersistentsystemoverlayshidden()","title":"func prefersPersistentSystemOverlaysHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/presentationdetents(undimmed:largestundimmed:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/presentationdetents(undimmed:largestundimmed:selection:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/renameaction(_:)-8rhdx","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/renameaction(_:)-90hdb","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/safeareainset(edge:alignment:spacing:content:)-39baq","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/safeareainset(edge:alignment:spacing:content:)-9xmkz","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/scaleeffect(_:anchor:)-7abp","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/scaleeffect(_:anchor:)-7b0ty","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/searchcompletion(_:)-2bjm0","title":"func searchCompletion<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/searchcompletion(_:)-304qu","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/searchable(if:text:placement:prompt:)","title":"func searchable(if: Bool, text: Binding<String>, placement: SearchFieldPlacement, prompt: String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/searchable(text:placement:prompt:)-3ckui","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/searchable(text:placement:prompt:)-5ydft","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/searchable(text:placement:prompt:)-9qeh8","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimation\/searchable(text:placement:prompt:suggestions:)-2xgyh","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimation\/searchable(text:placement:prompt:suggestions:)-5zcdy","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimation\/searchable(text:placement:prompt:suggestions:)-84bbs","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/searchable(text:tokens:placement:prompt:token:)-3h6r1","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/searchable(text:tokens:placement:prompt:token:)-4hqss","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/searchable(text:tokens:placement:prompt:token:)-7xv04","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-47vvh","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-7ufnl","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-9kqp2","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/shadow(_:)","title":"func shadow(ViewShadowStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/sheet(_:)","title":"func sheet(SheetContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimation\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/tint(_:)-2hzpx","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/tint(_:)-945sx","title":"func tint<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/toolbar(content:)-3nx31","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/toolbar(content:)-5k3ft","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/toolbarbackground(_:for:)-1rg12","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/toolbarbackground(_:for:)-hncg","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/visible(if:)","title":"func visible(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/width(_:)","title":"func width(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimation\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/swiftuikit\/dotanimation\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/swiftuikit\/dotanimation","title":"DotAnimation","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/init(text:dotcount:interval:)","title":"init(text: String, dotCount: Int, interval: Double)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/body","title":"var body: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimationtext\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibility(activationpoint:)-13k1x","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibility(activationpoint:)-31amh","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibilityaction(named:_:)","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibilityactivationpoint(_:)-5vdr8","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibilityactivationpoint(_:)-7owuf","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibilitycustomcontent(_:_:importance:)-1rldx","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibilitycustomcontent(_:_:importance:)-3d2ia","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibilitycustomcontent(_:_:importance:)-3vk8v","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibilitycustomcontent(_:_:importance:)-6g2xr","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibilitycustomcontent(_:_:importance:)-8jqsb","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibilitycustomcontent(_:_:importance:)-922rr","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibilitycustomcontent(_:_:importance:)-9zgbc","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibilitycustomcontent(_:_:importance:)-fgav","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibilityhint(_:)-8oxue","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibilityhint(_:)-9e1o7","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibilityhint(_:)-9f9na","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibilityinputlabels(_:)-4nzl5","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibilityinputlabels(_:)-4po58","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibilityinputlabels(_:)-9wxsh","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibilitylabel(_:)-1olh1","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibilitylabel(_:)-3afol","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibilitylabel(_:)-4c7fa","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibilityrotor(_:entries:)-33s9r","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibilityrotor(_:entries:)-3labu","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibilityrotor(_:entries:)-42dgf","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibilityrotor(_:entries:)-8djqq","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibilityrotor(_:entries:entryid:entrylabel:)-4nqpc","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibilityrotor(_:entries:entryid:entrylabel:)-5a01d","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibilityrotor(_:entries:entryid:entrylabel:)-6wqi2","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibilityrotor(_:entries:entryid:entrylabel:)-92w8d","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibilityrotor(_:entries:entrylabel:)-3zhjz","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibilityrotor(_:entries:entrylabel:)-8fhta","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibilityrotor(_:entries:entrylabel:)-o8b6","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibilityrotor(_:entries:entrylabel:)-x8b8","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibilityrotor(_:textranges:)-131fp","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibilityrotor(_:textranges:)-7pio8","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibilityrotor(_:textranges:)-9f9et","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibilityrotor(_:textranges:)-fir6","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibilityvalue(_:)-4prq4","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibilityvalue(_:)-67oh6","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/accessibilityvalue(_:)-6tucc","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimationtext\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimationtext\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/alert(_:)","title":"func alert(AlertContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/alert(_:ispresented:actions:)-1yfx7","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/alert(_:ispresented:actions:)-852s4","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/alert(_:ispresented:actions:)-n2dc","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/alert(_:ispresented:actions:message:)-7lwk5","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/alert(_:ispresented:actions:message:)-7y1k4","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/alert(_:ispresented:actions:message:)-jb0s","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/alert(_:ispresented:presenting:actions:)-3php7","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/alert(_:ispresented:presenting:actions:)-9rkbg","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/alert(_:ispresented:presenting:actions:)-z62t","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/alert(_:ispresented:presenting:actions:message:)-4oz1o","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/alert(_:ispresented:presenting:actions:message:)-7ksla","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/alert(_:ispresented:presenting:actions:message:)-9lurx","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimationtext\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimationtext\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/alignmentguide(_:computevalue:)-5gexl","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/alignmentguide(_:computevalue:)-8wtz3","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimationtext\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/any()","title":"func any() -> AnyView","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/aspectratio(_:contentmode:)-3xnyv","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/aspectratio(_:contentmode:)-8gt6a","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimationtext\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/autosave(_:debounceinterval:action:)","title":"func autosave<T>(Published<T>.Publisher, debounceInterval: RunLoop.SchedulerTimeType.Stride, action: () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimationtext\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/background(_:in:fillstyle:)-9kekm","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/background(_:in:fillstyle:)-9wn0w","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/background(in:fillstyle:)-3jlmz","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/background(in:fillstyle:)-5verh","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/badge(_:)-23qq5","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/badge(_:)-3bgup","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/badge(_:)-7eg4g","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/badge(_:)-mq9f","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/bindsafeareainsets(to:)","title":"func bindSafeAreaInsets(to: Binding<EdgeInsets>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/bindsize(to:)","title":"func bindSize(to: Binding<CGSize>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/border(_:width:cornerradius:)","title":"func border<Content>(Content, width: CGFloat, cornerRadius: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/buttonstyle(_:)-2zeid","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/buttonstyle(_:)-8xzw9","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimationtext\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/confirmationdialog(_:ispresented:titlevisibility:actions:)-2dgaj","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/confirmationdialog(_:ispresented:titlevisibility:actions:)-3g6kh","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/confirmationdialog(_:ispresented:titlevisibility:actions:)-9xtwd","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-4139l","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-70rk2","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-72svq","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-49nhm","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-5jnik","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-6gld6","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-2cbot","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-3n065","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-901s3","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimationtext\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimationtext\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/cornerradius(_:)","title":"func cornerRadius(CornerRadiusStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimationtext\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/disabledynamictype(sizecategory:)","title":"func disableDynamicType(sizeCategory: ContentSizeCategory) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/dynamictypesize(_:)-1xj37","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/dynamictypesize(_:)-4070t","title":"func dynamicTypeSize<T>(T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimationtext\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/enabled(_:)","title":"func enabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-6ru8z","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-7wxjw","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/fileexporter(ispresented:documents:contenttype:oncompletion:)-57soq","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/fileexporter(ispresented:documents:contenttype:oncompletion:)-mm0u","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/focusedobject(_:)-4ndtx","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/focusedobject(_:)-7m4qh","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/focusedsceneobject(_:)-3d774","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/focusedsceneobject(_:)-591nb","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/focusedscenevalue(_:_:)-5dv5p","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/focusedscenevalue(_:_:)-5x0zi","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/focusedvalue(_:_:)-5705t","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/focusedvalue(_:_:)-8vo53","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/font(_:)-2pyk8","title":"func font(FontStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/font(_:)-6l6bb","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/font(identifier:style:weight:)","title":"func font(identifier: FontIdentifier, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/font(name:style:weight:)","title":"func font(name: String, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/frame(_:)","title":"func frame(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/frame(square:)","title":"func frame(square: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/fullscreencover(_:)","title":"func fullScreenCover(FullScreenCoverContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/height(_:)","title":"func height(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/help(_:)-355ss","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/help(_:)-3rala","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/help(_:)-614cl","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/hidden(if:)","title":"func hidden(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/hidekeyboard()","title":"func hideKeyboard()","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/keyboardshortcut(_:)-22mex","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/keyboardshortcut(_:)-2g2zx","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/linelimit(_:)","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/listitemtint(_:)-79gyv","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/listitemtint(_:)-9xm1x","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimationtext\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimationtext\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimationtext\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimationtext\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimationtext\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimationtext\/navigationbartitle(_:)-1mg3l","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimationtext\/navigationbartitle(_:)-7hz6a","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimationtext\/navigationbartitle(_:)-8pgno","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimationtext\/navigationbartitle(_:displaymode:)-7l2et","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimationtext\/navigationbartitle(_:displaymode:)-8k2rz","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimationtext\/navigationbartitle(_:displaymode:)-8sufu","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/navigationdocument(_:)-2dsjz","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/navigationdocument(_:)-9mcul","title":"func navigationDocument<D>(D) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/navigationdocument(_:preview:)-14vdl","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/navigationdocument(_:preview:)-3ghse","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/navigationdocument(_:preview:)-61ovz","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/navigationdocument(_:preview:)-uewk","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/navigationtitle(_:)-3ayrv","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/navigationtitle(_:)-3ceaj","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/navigationtitle(_:)-3uzd3","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/navigationtitle(_:)-4kasm","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/navigationtitle(_:)-zoxi","title":"func navigationTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimationtext\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/ondrop(of:delegate:)-33vaw","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimationtext\/ondrop(of:delegate:)-86in8","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimationtext\/ondrop(of:istargeted:perform:)-4ecvr","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/ondrop(of:istargeted:perform:)-4upc2","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/ondrop(of:istargeted:perform:)-5ym34","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimationtext\/ondrop(of:istargeted:perform:)-9yquo","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimationtext\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimationtext\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/onswipegesture(maximumtime:minimumdistance:maximumdistance:gesturetimer:up:left:right:down:)","title":"func onSwipeGesture(maximumTime: TimeInterval, minimumDistance: CGFloat, maximumDistance: CGFloat, gestureTimer: GestureTimer, up: () -> Void, left: () -> Void, right: () -> Void, down: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimationtext\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/padding(_:)-3ibnt","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/padding(_:)-47fn8","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/preferspersistentsystemoverlayshidden()","title":"func prefersPersistentSystemOverlaysHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/presentationdetents(undimmed:largestundimmed:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/presentationdetents(undimmed:largestundimmed:selection:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/renameaction(_:)-7lfs7","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/renameaction(_:)-8n7up","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/safeareainset(edge:alignment:spacing:content:)-2laqb","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/safeareainset(edge:alignment:spacing:content:)-98qn2","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/scaleeffect(_:anchor:)-1fgn6","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/scaleeffect(_:anchor:)-9twfl","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/searchcompletion(_:)-5jzji","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/searchcompletion(_:)-6txnf","title":"func searchCompletion<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/searchable(if:text:placement:prompt:)","title":"func searchable(if: Bool, text: Binding<String>, placement: SearchFieldPlacement, prompt: String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/searchable(text:placement:prompt:)-28yr4","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/searchable(text:placement:prompt:)-4ovr1","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/searchable(text:placement:prompt:)-5jep7","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimationtext\/searchable(text:placement:prompt:suggestions:)-5qykk","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimationtext\/searchable(text:placement:prompt:suggestions:)-6vdzg","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimationtext\/searchable(text:placement:prompt:suggestions:)-85use","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/searchable(text:tokens:placement:prompt:token:)-1e1g9","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/searchable(text:tokens:placement:prompt:token:)-8rwzb","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/searchable(text:tokens:placement:prompt:token:)-fhhm","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-4x0l","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-6g9c0","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-6qfjg","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/shadow(_:)","title":"func shadow(ViewShadowStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/sheet(_:)","title":"func sheet(SheetContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/dotanimationtext\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/tint(_:)-99c1","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/tint(_:)-9jxjl","title":"func tint<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/toolbar(content:)-61710","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/toolbar(content:)-65dsk","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/toolbarbackground(_:for:)-88g01","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/toolbarbackground(_:for:)-9gayj","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/visible(if:)","title":"func visible(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/width(_:)","title":"func width(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/dotanimationtext\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/swiftuikit\/dotanimationtext\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/swiftuikit\/dotanimationtext","title":"DotAnimationText","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/init(data:isloading:loadingview:nodataview:content:)","title":"init(data: Model?, isLoading: Bool, loadingView: LoadingView, noDataView: NoDataView, content: ContentBuilder)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/body","title":"var body: some View","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/contentbuilder","title":"FetchedDataView.ContentBuilder","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/fetcheddataview\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibility(activationpoint:)-fxp6","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibility(activationpoint:)-mvyp","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibilityaction(named:_:)","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibilityactivationpoint(_:)-18exz","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibilityactivationpoint(_:)-4udr7","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibilitycustomcontent(_:_:importance:)-3tqj2","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibilitycustomcontent(_:_:importance:)-47ypk","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibilitycustomcontent(_:_:importance:)-4hk9t","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibilitycustomcontent(_:_:importance:)-6gi0x","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibilitycustomcontent(_:_:importance:)-8js5i","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibilitycustomcontent(_:_:importance:)-8wiq6","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibilitycustomcontent(_:_:importance:)-97ht2","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibilitycustomcontent(_:_:importance:)-rr7r","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibilityhint(_:)-11j5m","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibilityhint(_:)-43n0","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibilityhint(_:)-6z8gd","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibilityinputlabels(_:)-69g2","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibilityinputlabels(_:)-7dfdx","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibilityinputlabels(_:)-87wxa","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibilitylabel(_:)-3whmx","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibilitylabel(_:)-4yukh","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibilitylabel(_:)-6mxh7","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibilityrotor(_:entries:)-4hv6n","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibilityrotor(_:entries:)-6q133","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibilityrotor(_:entries:)-hno6","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibilityrotor(_:entries:)-s5wk","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibilityrotor(_:entries:entryid:entrylabel:)-1z2s5","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibilityrotor(_:entries:entryid:entrylabel:)-7uvsw","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibilityrotor(_:entries:entryid:entrylabel:)-9gaw5","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibilityrotor(_:entries:entryid:entrylabel:)-ex80","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibilityrotor(_:entries:entrylabel:)-1f964","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibilityrotor(_:entries:entrylabel:)-27h0y","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibilityrotor(_:entries:entrylabel:)-3xeo0","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibilityrotor(_:entries:entrylabel:)-4h38z","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibilityrotor(_:textranges:)-5x72q","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibilityrotor(_:textranges:)-5znxh","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibilityrotor(_:textranges:)-8fqb9","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibilityrotor(_:textranges:)-i7x0","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibilityvalue(_:)-4gy5s","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibilityvalue(_:)-54ydb","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/accessibilityvalue(_:)-6w8r1","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/fetcheddataview\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/fetcheddataview\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/alert(_:)","title":"func alert(AlertContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/alert(_:ispresented:actions:)-4c61o","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/alert(_:ispresented:actions:)-86n0j","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/alert(_:ispresented:actions:)-9oypd","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/alert(_:ispresented:actions:message:)-20j4y","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/alert(_:ispresented:actions:message:)-5d76h","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/alert(_:ispresented:actions:message:)-5zuq2","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/alert(_:ispresented:presenting:actions:)-24q00","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/alert(_:ispresented:presenting:actions:)-4xri8","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/alert(_:ispresented:presenting:actions:)-6t27i","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/alert(_:ispresented:presenting:actions:message:)-3tt0","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/alert(_:ispresented:presenting:actions:message:)-4quzs","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/alert(_:ispresented:presenting:actions:message:)-8n6td","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/fetcheddataview\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/fetcheddataview\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/alignmentguide(_:computevalue:)-2b4a0","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/alignmentguide(_:computevalue:)-9ez7j","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/fetcheddataview\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/any()","title":"func any() -> AnyView","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/aspectratio(_:contentmode:)-19klk","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/aspectratio(_:contentmode:)-8b0mb","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/fetcheddataview\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/autosave(_:debounceinterval:action:)","title":"func autosave<T>(Published<T>.Publisher, debounceInterval: RunLoop.SchedulerTimeType.Stride, action: () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/fetcheddataview\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/background(_:in:fillstyle:)-3t8vi","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/background(_:in:fillstyle:)-8szff","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/background(in:fillstyle:)-2z48w","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/background(in:fillstyle:)-6lg7p","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/badge(_:)-1dokg","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/badge(_:)-1grm8","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/badge(_:)-4ygvx","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/badge(_:)-536tk","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/bindsafeareainsets(to:)","title":"func bindSafeAreaInsets(to: Binding<EdgeInsets>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/bindsize(to:)","title":"func bindSize(to: Binding<CGSize>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/border(_:width:cornerradius:)","title":"func border<Content>(Content, width: CGFloat, cornerRadius: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/buttonstyle(_:)-2v8b8","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/buttonstyle(_:)-4xphv","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/fetcheddataview\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-6s1s6","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-7lwls","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-9imss","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-315on","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-82kr6","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-evbg","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-11e37","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-7oyz","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-921kb","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-2v5ch","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-5o9hr","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-6zt5w","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/fetcheddataview\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/fetcheddataview\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/cornerradius(_:)","title":"func cornerRadius(CornerRadiusStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/fetcheddataview\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/disabledynamictype(sizecategory:)","title":"func disableDynamicType(sizeCategory: ContentSizeCategory) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/dynamictypesize(_:)-2yjtl","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/dynamictypesize(_:)-5ghit","title":"func dynamicTypeSize<T>(T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/fetcheddataview\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/enabled(_:)","title":"func enabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-2tj66","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-8t2ww","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-27vjb","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-uqn8","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/focusedobject(_:)-8c6il","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/focusedobject(_:)-9zgc8","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/focusedsceneobject(_:)-2n3dr","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/focusedsceneobject(_:)-orsq","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/focusedscenevalue(_:_:)-7lzi8","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/focusedscenevalue(_:_:)-y3r7","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/focusedvalue(_:_:)-9di3f","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/focusedvalue(_:_:)-cews","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/font(_:)-7lahx","title":"func font(FontStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/font(_:)-9wb8v","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/font(identifier:style:weight:)","title":"func font(identifier: FontIdentifier, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/font(name:style:weight:)","title":"func font(name: String, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/frame(_:)","title":"func frame(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/frame(square:)","title":"func frame(square: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/fullscreencover(_:)","title":"func fullScreenCover(FullScreenCoverContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/height(_:)","title":"func height(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/help(_:)-3s5py","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/help(_:)-6z92o","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/help(_:)-8mnh5","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/hidden(if:)","title":"func hidden(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/hidekeyboard()","title":"func hideKeyboard()","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/keyboardshortcut(_:)-34atz","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/keyboardshortcut(_:)-ambg","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/linelimit(_:)","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/listitemtint(_:)-85xk6","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/listitemtint(_:)-9fxip","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/fetcheddataview\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/fetcheddataview\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/fetcheddataview\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/fetcheddataview\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/fetcheddataview\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/fetcheddataview\/navigationbartitle(_:)-1h52v","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/fetcheddataview\/navigationbartitle(_:)-3k25p","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/fetcheddataview\/navigationbartitle(_:)-7adfq","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/fetcheddataview\/navigationbartitle(_:displaymode:)-3mjt8","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/fetcheddataview\/navigationbartitle(_:displaymode:)-58zcc","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/fetcheddataview\/navigationbartitle(_:displaymode:)-5cl4s","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/navigationdocument(_:)-3h32","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/navigationdocument(_:)-984he","title":"func navigationDocument<D>(D) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/navigationdocument(_:preview:)-1j952","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/navigationdocument(_:preview:)-6f3r","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/navigationdocument(_:preview:)-86lsz","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/navigationdocument(_:preview:)-9ng9p","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/navigationtitle(_:)-1fi38","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/navigationtitle(_:)-1o8kf","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/navigationtitle(_:)-2e2an","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/navigationtitle(_:)-6arz4","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/navigationtitle(_:)-6mlss","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/fetcheddataview\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/ondrop(of:delegate:)-9ipnm","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/fetcheddataview\/ondrop(of:delegate:)-9unjr","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/fetcheddataview\/ondrop(of:istargeted:perform:)-79iag","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/fetcheddataview\/ondrop(of:istargeted:perform:)-7fqey","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/ondrop(of:istargeted:perform:)-8jges","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/ondrop(of:istargeted:perform:)-97z8b","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/fetcheddataview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/fetcheddataview\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/onswipegesture(maximumtime:minimumdistance:maximumdistance:gesturetimer:up:left:right:down:)","title":"func onSwipeGesture(maximumTime: TimeInterval, minimumDistance: CGFloat, maximumDistance: CGFloat, gestureTimer: GestureTimer, up: () -> Void, left: () -> Void, right: () -> Void, down: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/fetcheddataview\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/padding(_:)-2605k","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/padding(_:)-5topy","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/preferspersistentsystemoverlayshidden()","title":"func prefersPersistentSystemOverlaysHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/presentationdetents(undimmed:largestundimmed:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/presentationdetents(undimmed:largestundimmed:selection:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/renameaction(_:)-7w7fi","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/renameaction(_:)-9bzmr","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/safeareainset(edge:alignment:spacing:content:)-169u8","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/safeareainset(edge:alignment:spacing:content:)-3mswc","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/scaleeffect(_:anchor:)-26td8","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/scaleeffect(_:anchor:)-2ajlr","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/searchcompletion(_:)-6pz2","title":"func searchCompletion<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/searchcompletion(_:)-tlxm","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/searchable(if:text:placement:prompt:)","title":"func searchable(if: Bool, text: Binding<String>, placement: SearchFieldPlacement, prompt: String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/searchable(text:placement:prompt:)-16i0y","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/searchable(text:placement:prompt:)-1p4np","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/searchable(text:placement:prompt:)-5gre8","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/fetcheddataview\/searchable(text:placement:prompt:suggestions:)-2czuq","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/fetcheddataview\/searchable(text:placement:prompt:suggestions:)-2pef0","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/fetcheddataview\/searchable(text:placement:prompt:suggestions:)-bd3f","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/searchable(text:tokens:placement:prompt:token:)-5lsbi","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/searchable(text:tokens:placement:prompt:token:)-7ukc7","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/searchable(text:tokens:placement:prompt:token:)-97cuc","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-4mc7m","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-5ttmu","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-70ir5","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/shadow(_:)","title":"func shadow(ViewShadowStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/sheet(_:)","title":"func sheet(SheetContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/fetcheddataview\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/tint(_:)-2eojh","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/tint(_:)-3wu9c","title":"func tint<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/toolbar(content:)-1u0gd","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/toolbar(content:)-83efi","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/toolbarbackground(_:for:)-3xhv0","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/toolbarbackground(_:for:)-4ypgc","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/visible(if:)","title":"func visible(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/width(_:)","title":"func width(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/fetcheddataview\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/swiftuikit\/fetcheddataview\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/swiftuikit\/fetcheddataview","title":"FetchedDataView","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/init(action:content:)","title":"init(action: () -> Void, content: () -> Content)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/body","title":"var body: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationbutton\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibility(activationpoint:)-15k6c","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibility(activationpoint:)-4s710","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibilityaction(named:_:)","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibilityactivationpoint(_:)-40q3p","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibilityactivationpoint(_:)-4bc9y","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibilitycustomcontent(_:_:importance:)-420zx","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibilitycustomcontent(_:_:importance:)-4cx78","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibilitycustomcontent(_:_:importance:)-5boua","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibilitycustomcontent(_:_:importance:)-5mcjg","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibilitycustomcontent(_:_:importance:)-61xwk","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibilitycustomcontent(_:_:importance:)-7sab8","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibilitycustomcontent(_:_:importance:)-846bc","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibilitycustomcontent(_:_:importance:)-8bdd2","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibilityhint(_:)-1wzji","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibilityhint(_:)-7zj1r","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibilityhint(_:)-9mvtn","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibilityinputlabels(_:)-2643x","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibilityinputlabels(_:)-38ou9","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibilityinputlabels(_:)-4sj1a","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibilitylabel(_:)-10lbc","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibilitylabel(_:)-3rwin","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibilitylabel(_:)-4gqw3","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibilityrotor(_:entries:)-1wbya","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibilityrotor(_:entries:)-3lez8","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibilityrotor(_:entries:)-76kp9","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibilityrotor(_:entries:)-76yt1","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibilityrotor(_:entries:entryid:entrylabel:)-2q4uo","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibilityrotor(_:entries:entryid:entrylabel:)-4s5e","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibilityrotor(_:entries:entryid:entrylabel:)-7n5m2","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibilityrotor(_:entries:entryid:entrylabel:)-7xww4","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibilityrotor(_:entries:entrylabel:)-50t0p","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibilityrotor(_:entries:entrylabel:)-7ks4e","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibilityrotor(_:entries:entrylabel:)-8mzko","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibilityrotor(_:entries:entrylabel:)-m5lg","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibilityrotor(_:textranges:)-310za","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibilityrotor(_:textranges:)-5abem","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibilityrotor(_:textranges:)-8jdlm","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibilityrotor(_:textranges:)-jk4b","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibilityvalue(_:)-11vhk","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibilityvalue(_:)-1vu8","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/accessibilityvalue(_:)-7yxh7","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationbutton\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationbutton\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/alert(_:)","title":"func alert(AlertContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/alert(_:ispresented:actions:)-1eka7","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/alert(_:ispresented:actions:)-3wfg0","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/alert(_:ispresented:actions:)-5dbhr","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/alert(_:ispresented:actions:message:)-1hkxf","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/alert(_:ispresented:actions:message:)-8ffvq","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/alert(_:ispresented:actions:message:)-972hf","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/alert(_:ispresented:presenting:actions:)-1zy58","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/alert(_:ispresented:presenting:actions:)-56kv2","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/alert(_:ispresented:presenting:actions:)-5jpjg","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/alert(_:ispresented:presenting:actions:message:)-6saeu","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/alert(_:ispresented:presenting:actions:message:)-8ttp5","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/alert(_:ispresented:presenting:actions:message:)-9beft","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationbutton\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationbutton\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/alignmentguide(_:computevalue:)-3kohg","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/alignmentguide(_:computevalue:)-8zjtu","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationbutton\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/any()","title":"func any() -> AnyView","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/aspectratio(_:contentmode:)-13z6w","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/aspectratio(_:contentmode:)-1885u","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationbutton\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/autosave(_:debounceinterval:action:)","title":"func autosave<T>(Published<T>.Publisher, debounceInterval: RunLoop.SchedulerTimeType.Stride, action: () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationbutton\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/background(_:in:fillstyle:)-11py7","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/background(_:in:fillstyle:)-7h8un","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/background(in:fillstyle:)-3vwl0","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/background(in:fillstyle:)-9qo7u","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/badge(_:)-1w8uu","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/badge(_:)-3nkhu","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/badge(_:)-3qk9w","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/badge(_:)-gq1k","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/bindsafeareainsets(to:)","title":"func bindSafeAreaInsets(to: Binding<EdgeInsets>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/bindsize(to:)","title":"func bindSize(to: Binding<CGSize>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/border(_:width:cornerradius:)","title":"func border<Content>(Content, width: CGFloat, cornerRadius: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/buttonstyle(_:)-5a459","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/buttonstyle(_:)-9tgi6","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationbutton\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/confirmationdialog(_:ispresented:titlevisibility:actions:)-1adgi","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/confirmationdialog(_:ispresented:titlevisibility:actions:)-2ms4d","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/confirmationdialog(_:ispresented:titlevisibility:actions:)-4e1mv","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-6nur6","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-895tx","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-9x6sx","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-334dv","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-4f5h9","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-wsxc","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-3qpm7","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-6wkqm","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-97k31","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationbutton\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationbutton\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/cornerradius(_:)","title":"func cornerRadius(CornerRadiusStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationbutton\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/disabledynamictype(sizecategory:)","title":"func disableDynamicType(sizeCategory: ContentSizeCategory) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/dynamictypesize(_:)-1evk8","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/dynamictypesize(_:)-79cz8","title":"func dynamicTypeSize<T>(T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationbutton\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/enabled(_:)","title":"func enabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-4fiht","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-67n78","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/fileexporter(ispresented:documents:contenttype:oncompletion:)-5ky4r","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/fileexporter(ispresented:documents:contenttype:oncompletion:)-71i7b","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/focusedobject(_:)-1uk5","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/focusedobject(_:)-56xm7","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/focusedsceneobject(_:)-2m7yd","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/focusedsceneobject(_:)-8uc7a","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/focusedscenevalue(_:_:)-8rf0p","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/focusedscenevalue(_:_:)-994t6","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/focusedvalue(_:_:)-6zxs6","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/focusedvalue(_:_:)-8g357","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/font(_:)-5a0gw","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/font(_:)-9bzbw","title":"func font(FontStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/font(identifier:style:weight:)","title":"func font(identifier: FontIdentifier, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/font(name:style:weight:)","title":"func font(name: String, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/frame(_:)","title":"func frame(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/frame(square:)","title":"func frame(square: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/fullscreencover(_:)","title":"func fullScreenCover(FullScreenCoverContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/height(_:)","title":"func height(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/help(_:)-25wx5","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/help(_:)-2urzj","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/help(_:)-4utiw","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/hidden(if:)","title":"func hidden(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/hidekeyboard()","title":"func hideKeyboard()","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/keyboardshortcut(_:)-14x3u","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/keyboardshortcut(_:)-9n0ha","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/linelimit(_:)","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/listitemtint(_:)-hipr","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/listitemtint(_:)-s7e8","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationbutton\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationbutton\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationbutton\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationbutton\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationbutton\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationbutton\/navigationbartitle(_:)-2ssmy","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationbutton\/navigationbartitle(_:)-4a8su","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationbutton\/navigationbartitle(_:)-5etmr","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationbutton\/navigationbartitle(_:displaymode:)-3o16u","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationbutton\/navigationbartitle(_:displaymode:)-5pbyi","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationbutton\/navigationbartitle(_:displaymode:)-jc3r","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/navigationdocument(_:)-12mm0","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/navigationdocument(_:)-3py06","title":"func navigationDocument<D>(D) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/navigationdocument(_:preview:)-386ez","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/navigationdocument(_:preview:)-4jcj8","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/navigationdocument(_:preview:)-5lw0j","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/navigationdocument(_:preview:)-9pick","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/navigationtitle(_:)-4n0vp","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/navigationtitle(_:)-553s8","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/navigationtitle(_:)-5hskk","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/navigationtitle(_:)-7vi86","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/navigationtitle(_:)-8l8sy","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationbutton\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationbutton\/ondrop(of:delegate:)-3rari","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/ondrop(of:delegate:)-4f8rn","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/ondrop(of:istargeted:perform:)-2ecs2","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationbutton\/ondrop(of:istargeted:perform:)-2ote0","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationbutton\/ondrop(of:istargeted:perform:)-2zzp8","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/ondrop(of:istargeted:perform:)-6ssuk","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationbutton\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationbutton\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/onswipegesture(maximumtime:minimumdistance:maximumdistance:gesturetimer:up:left:right:down:)","title":"func onSwipeGesture(maximumTime: TimeInterval, minimumDistance: CGFloat, maximumDistance: CGFloat, gestureTimer: GestureTimer, up: () -> Void, left: () -> Void, right: () -> Void, down: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationbutton\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/padding(_:)-134lb","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/padding(_:)-2i5ek","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/preferspersistentsystemoverlayshidden()","title":"func prefersPersistentSystemOverlaysHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/presentationdetents(undimmed:largestundimmed:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/presentationdetents(undimmed:largestundimmed:selection:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/renameaction(_:)-6aw8z","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/renameaction(_:)-8pbyw","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/safeareainset(edge:alignment:spacing:content:)-2py18","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/safeareainset(edge:alignment:spacing:content:)-8ha5v","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/scaleeffect(_:anchor:)-3pkpj","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/scaleeffect(_:anchor:)-9hgfb","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/searchcompletion(_:)-4za2g","title":"func searchCompletion<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/searchcompletion(_:)-8edh5","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/searchable(if:text:placement:prompt:)","title":"func searchable(if: Bool, text: Binding<String>, placement: SearchFieldPlacement, prompt: String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/searchable(text:placement:prompt:)-2ihnh","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/searchable(text:placement:prompt:)-4c9oy","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/searchable(text:placement:prompt:)-91sb0","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationbutton\/searchable(text:placement:prompt:suggestions:)-6nvx1","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationbutton\/searchable(text:placement:prompt:suggestions:)-6qd3k","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationbutton\/searchable(text:placement:prompt:suggestions:)-6yf52","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/searchable(text:tokens:placement:prompt:token:)-2pzgo","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/searchable(text:tokens:placement:prompt:token:)-31llt","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/searchable(text:tokens:placement:prompt:token:)-541br","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-327rg","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-76p7x","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-8v1w5","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/shadow(_:)","title":"func shadow(ViewShadowStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/sheet(_:)","title":"func sheet(SheetContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationbutton\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/tint(_:)-5q4qd","title":"func tint<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/tint(_:)-8t45b","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/toolbar(content:)-6vds0","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/toolbar(content:)-9oilo","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/toolbarbackground(_:for:)-2b3et","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/toolbarbackground(_:for:)-7gzfy","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/visible(if:)","title":"func visible(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/width(_:)","title":"func width(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationbutton\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/swiftuikit\/navigationbutton\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/swiftuikit\/navigationbutton","title":"NavigationButton","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/body","title":"var body: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibility(activationpoint:)-4yj3","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibility(activationpoint:)-7n9jh","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibilityaction(named:_:)","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibilityactivationpoint(_:)-3z3nk","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibilityactivationpoint(_:)-5rsav","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibilitycustomcontent(_:_:importance:)-1seo","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibilitycustomcontent(_:_:importance:)-1tjrt","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibilitycustomcontent(_:_:importance:)-2i07g","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibilitycustomcontent(_:_:importance:)-3lmk","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibilitycustomcontent(_:_:importance:)-5q093","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibilitycustomcontent(_:_:importance:)-62to0","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibilitycustomcontent(_:_:importance:)-6k89s","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibilitycustomcontent(_:_:importance:)-8zy1n","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibilityhint(_:)-1lrzn","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibilityhint(_:)-1yq56","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibilityhint(_:)-9ipw8","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibilityinputlabels(_:)-6qxfz","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibilityinputlabels(_:)-76y4h","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibilityinputlabels(_:)-9549l","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibilitylabel(_:)-5umlu","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibilitylabel(_:)-8dc7i","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibilitylabel(_:)-8p18n","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibilityrotor(_:entries:)-3xz42","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibilityrotor(_:entries:)-4ps89","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibilityrotor(_:entries:)-74rj2","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibilityrotor(_:entries:)-83vmu","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibilityrotor(_:entries:entryid:entrylabel:)-1cf0","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibilityrotor(_:entries:entryid:entrylabel:)-2osx4","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibilityrotor(_:entries:entryid:entrylabel:)-4p85s","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibilityrotor(_:entries:entryid:entrylabel:)-8rmrt","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibilityrotor(_:entries:entrylabel:)-117bp","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibilityrotor(_:entries:entrylabel:)-2ufj5","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibilityrotor(_:entries:entrylabel:)-4x071","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibilityrotor(_:entries:entrylabel:)-9h9sb","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibilityrotor(_:textranges:)-12hhy","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibilityrotor(_:textranges:)-4toze","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibilityrotor(_:textranges:)-7sco0","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibilityrotor(_:textranges:)-8iyjm","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibilityvalue(_:)-248d0","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibilityvalue(_:)-7jxa3","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/accessibilityvalue(_:)-bcch","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/alert(_:)","title":"func alert(AlertContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/alert(_:ispresented:actions:)-1eswj","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/alert(_:ispresented:actions:)-2reho","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/alert(_:ispresented:actions:)-45ri","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/alert(_:ispresented:actions:message:)-7ii5i","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/alert(_:ispresented:actions:message:)-857uw","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/alert(_:ispresented:actions:message:)-rc03","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/alert(_:ispresented:presenting:actions:)-1iyow","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/alert(_:ispresented:presenting:actions:)-6uo11","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/alert(_:ispresented:presenting:actions:)-9j2al","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/alert(_:ispresented:presenting:actions:message:)-2l9th","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/alert(_:ispresented:presenting:actions:message:)-78uqy","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/alert(_:ispresented:presenting:actions:message:)-7xg8h","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/alignmentguide(_:computevalue:)-6selu","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/alignmentguide(_:computevalue:)-9v3n","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/any()","title":"func any() -> AnyView","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/aspectratio(_:contentmode:)-1ody3","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/aspectratio(_:contentmode:)-650tk","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/autosave(_:debounceinterval:action:)","title":"func autosave<T>(Published<T>.Publisher, debounceInterval: RunLoop.SchedulerTimeType.Stride, action: () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/background(_:in:fillstyle:)-1fvci","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/background(_:in:fillstyle:)-1y0f1","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/background(in:fillstyle:)-3a980","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/background(in:fillstyle:)-8w89y","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/badge(_:)-13flo","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/badge(_:)-50goa","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/badge(_:)-5ee3a","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/badge(_:)-6s2rw","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/bindsafeareainsets(to:)","title":"func bindSafeAreaInsets(to: Binding<EdgeInsets>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/bindsize(to:)","title":"func bindSize(to: Binding<CGSize>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/border(_:width:cornerradius:)","title":"func border<Content>(Content, width: CGFloat, cornerRadius: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/buttonstyle(_:)-2cwaa","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/buttonstyle(_:)-8w9wh","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/confirmationdialog(_:ispresented:titlevisibility:actions:)-166tw","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/confirmationdialog(_:ispresented:titlevisibility:actions:)-40xkg","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/confirmationdialog(_:ispresented:titlevisibility:actions:)-7yje5","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-4bqe4","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-76ed4","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-xnuw","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-48nlj","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-6cny5","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-9molk","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-1u0va","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-1w99z","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-5m800","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/cornerradius(_:)","title":"func cornerRadius(CornerRadiusStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/disabledynamictype(sizecategory:)","title":"func disableDynamicType(sizeCategory: ContentSizeCategory) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/dynamictypesize(_:)-5rgu5","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/dynamictypesize(_:)-74n9d","title":"func dynamicTypeSize<T>(T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/enabled(_:)","title":"func enabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-1f3kc","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-3h9gw","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/fileexporter(ispresented:documents:contenttype:oncompletion:)-3fd76","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/fileexporter(ispresented:documents:contenttype:oncompletion:)-8l0t7","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/focusedobject(_:)-6gmia","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/focusedobject(_:)-soaj","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/focusedsceneobject(_:)-3zwfe","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/focusedsceneobject(_:)-90kgq","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/focusedscenevalue(_:_:)-8j1j6","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/focusedscenevalue(_:_:)-95zcf","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/focusedvalue(_:_:)-2vdm2","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/focusedvalue(_:_:)-8jr5n","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/font(_:)-1ez8g","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/font(_:)-5tuoz","title":"func font(FontStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/font(identifier:style:weight:)","title":"func font(identifier: FontIdentifier, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/font(name:style:weight:)","title":"func font(name: String, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/frame(_:)","title":"func frame(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/frame(square:)","title":"func frame(square: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/fullscreencover(_:)","title":"func fullScreenCover(FullScreenCoverContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/height(_:)","title":"func height(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/help(_:)-1s85w","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/help(_:)-28j64","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/help(_:)-ks2r","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/hidden(if:)","title":"func hidden(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/hidekeyboard()","title":"func hideKeyboard()","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/keyboardshortcut(_:)-58cx0","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/keyboardshortcut(_:)-88kfz","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/linelimit(_:)","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/listitemtint(_:)-1qu3z","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/listitemtint(_:)-1yncj","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/navigationbartitle(_:)-4cfvj","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/navigationbartitle(_:)-9tr2","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/navigationbartitle(_:)-oigp","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/navigationbartitle(_:displaymode:)-1qkmq","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/navigationbartitle(_:displaymode:)-7ybeg","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/navigationbartitle(_:displaymode:)-isgg","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/navigationdocument(_:)-6yugk","title":"func navigationDocument<D>(D) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/navigationdocument(_:)-7pm1p","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/navigationdocument(_:preview:)-1i528","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/navigationdocument(_:preview:)-892uk","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/navigationdocument(_:preview:)-9u4g2","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/navigationdocument(_:preview:)-nd24","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/navigationtitle(_:)-3mqhr","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/navigationtitle(_:)-463lp","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/navigationtitle(_:)-6jhgu","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/navigationtitle(_:)-6wy0a","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/navigationtitle(_:)-8zpiz","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/ondrop(of:delegate:)-mzy4","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/ondrop(of:delegate:)-t5e7","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/ondrop(of:istargeted:perform:)-3dwrd","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/ondrop(of:istargeted:perform:)-3r4y","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/ondrop(of:istargeted:perform:)-3wsoo","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/ondrop(of:istargeted:perform:)-7b5gj","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/onswipegesture(maximumtime:minimumdistance:maximumdistance:gesturetimer:up:left:right:down:)","title":"func onSwipeGesture(maximumTime: TimeInterval, minimumDistance: CGFloat, maximumDistance: CGFloat, gestureTimer: GestureTimer, up: () -> Void, left: () -> Void, right: () -> Void, down: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/padding(_:)-3gp7t","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/padding(_:)-6k4bn","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/preferspersistentsystemoverlayshidden()","title":"func prefersPersistentSystemOverlaysHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/presentationdetents(undimmed:largestundimmed:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/presentationdetents(undimmed:largestundimmed:selection:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/renameaction(_:)-1kuzm","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/renameaction(_:)-2896t","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/safeareainset(edge:alignment:spacing:content:)-41g8l","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/safeareainset(edge:alignment:spacing:content:)-8yyib","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/scaleeffect(_:anchor:)-43elt","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/scaleeffect(_:anchor:)-8q3um","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/searchcompletion(_:)-5ua49","title":"func searchCompletion<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/searchcompletion(_:)-wl94","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/searchable(if:text:placement:prompt:)","title":"func searchable(if: Bool, text: Binding<String>, placement: SearchFieldPlacement, prompt: String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/searchable(text:placement:prompt:)-66flk","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/searchable(text:placement:prompt:)-814gl","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/searchable(text:placement:prompt:)-9mwnu","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/searchable(text:placement:prompt:suggestions:)-1dma1","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/searchable(text:placement:prompt:suggestions:)-8gp6","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/searchable(text:placement:prompt:suggestions:)-vze3","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/searchable(text:tokens:placement:prompt:token:)-2c1kk","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/searchable(text:tokens:placement:prompt:token:)-3mzn8","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/searchable(text:tokens:placement:prompt:token:)-v1ri","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-1dxoj","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-3zt35","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-72h7c","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/shadow(_:)","title":"func shadow(ViewShadowStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/sheet(_:)","title":"func sheet(SheetContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/tint(_:)-8vlan","title":"func tint<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/tint(_:)-91fqv","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/toolbar(content:)-1t4qp","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/toolbar(content:)-2txz1","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/toolbarbackground(_:for:)-4rs17","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/toolbarbackground(_:for:)-8iibe","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/visible(if:)","title":"func visible(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/width(_:)","title":"func width(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/swiftuikit\/navigationlinkarrow\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/swiftuikit\/navigationlinkarrow","title":"NavigationLinkArrow","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/pageindicator\/init(numberofpages:currentpageindex:style:)","title":"init(numberOfPages: Int, currentPageIndex: Binding<Int>, style: PageIndicatorStyle)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/pageindicator\/body","title":"var body: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageindicator\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageindicator\/accessibility(activationpoint:)-2b9ed","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageindicator\/accessibility(activationpoint:)-9vcqw","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageindicator\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageindicator\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageindicator\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageindicator\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageindicator\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageindicator\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageindicator\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageindicator\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageindicator\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/accessibilityaction(named:_:)","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/accessibilityactivationpoint(_:)-67rte","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/accessibilityactivationpoint(_:)-9pqqm","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/accessibilitycustomcontent(_:_:importance:)-1v5e1","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/accessibilitycustomcontent(_:_:importance:)-1veo3","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/accessibilitycustomcontent(_:_:importance:)-1wxmh","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/accessibilitycustomcontent(_:_:importance:)-28pq5","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/accessibilitycustomcontent(_:_:importance:)-61m2i","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/accessibilitycustomcontent(_:_:importance:)-7t478","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/accessibilitycustomcontent(_:_:importance:)-7x952","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/accessibilitycustomcontent(_:_:importance:)-83rpy","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/accessibilityhint(_:)-37paj","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/accessibilityhint(_:)-4hs5u","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/accessibilityhint(_:)-4wdp5","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/accessibilityinputlabels(_:)-4vd04","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/accessibilityinputlabels(_:)-6ckf","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/accessibilityinputlabels(_:)-8uuug","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/accessibilitylabel(_:)-1p0av","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/accessibilitylabel(_:)-2j5ol","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/accessibilitylabel(_:)-3gmqu","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/accessibilityrotor(_:entries:)-2aeb2","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/accessibilityrotor(_:entries:)-4znqi","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/accessibilityrotor(_:entries:)-97e0l","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/accessibilityrotor(_:entries:)-btvl","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/accessibilityrotor(_:entries:entryid:entrylabel:)-2tl0i","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/accessibilityrotor(_:entries:entryid:entrylabel:)-483t8","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/accessibilityrotor(_:entries:entryid:entrylabel:)-4s66c","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/accessibilityrotor(_:entries:entryid:entrylabel:)-p5ia","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/accessibilityrotor(_:entries:entrylabel:)-3fad5","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/accessibilityrotor(_:entries:entrylabel:)-7rxyo","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/accessibilityrotor(_:entries:entrylabel:)-7wozs","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/accessibilityrotor(_:entries:entrylabel:)-9sqmu","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/accessibilityrotor(_:textranges:)-5tbus","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/accessibilityrotor(_:textranges:)-6lzz5","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/accessibilityrotor(_:textranges:)-6v14k","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/accessibilityrotor(_:textranges:)-9p4t2","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/accessibilityvalue(_:)-2njqg","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/accessibilityvalue(_:)-2z0tg","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/accessibilityvalue(_:)-81wh7","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageindicator\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageindicator\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/alert(_:)","title":"func alert(AlertContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/alert(_:ispresented:actions:)-1agp6","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/alert(_:ispresented:actions:)-5gk3h","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/alert(_:ispresented:actions:)-767bl","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/alert(_:ispresented:actions:message:)-4e8vj","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/alert(_:ispresented:actions:message:)-6wx8z","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/alert(_:ispresented:actions:message:)-77sra","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/alert(_:ispresented:presenting:actions:)-61uqp","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/alert(_:ispresented:presenting:actions:)-96e2c","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/alert(_:ispresented:presenting:actions:)-9scvg","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/alert(_:ispresented:presenting:actions:message:)-2t16p","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/alert(_:ispresented:presenting:actions:message:)-3qswx","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/alert(_:ispresented:presenting:actions:message:)-7ffn5","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageindicator\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageindicator\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/alignmentguide(_:computevalue:)-99799","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/alignmentguide(_:computevalue:)-9uzvx","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageindicator\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/any()","title":"func any() -> AnyView","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/aspectratio(_:contentmode:)-1z7a6","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/aspectratio(_:contentmode:)-5hye5","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageindicator\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/autosave(_:debounceinterval:action:)","title":"func autosave<T>(Published<T>.Publisher, debounceInterval: RunLoop.SchedulerTimeType.Stride, action: () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageindicator\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/background(_:in:fillstyle:)-4b8ax","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/background(_:in:fillstyle:)-etva","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/background(in:fillstyle:)-1aeo9","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/background(in:fillstyle:)-8oxmi","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/badge(_:)-123jn","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/badge(_:)-70c2x","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/badge(_:)-79m6k","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/badge(_:)-gxxq","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/bindsafeareainsets(to:)","title":"func bindSafeAreaInsets(to: Binding<EdgeInsets>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/bindsize(to:)","title":"func bindSize(to: Binding<CGSize>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/border(_:width:cornerradius:)","title":"func border<Content>(Content, width: CGFloat, cornerRadius: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/buttonstyle(_:)-6041r","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/buttonstyle(_:)-jxzy","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageindicator\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/confirmationdialog(_:ispresented:titlevisibility:actions:)-1q3f7","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/confirmationdialog(_:ispresented:titlevisibility:actions:)-4byib","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/confirmationdialog(_:ispresented:titlevisibility:actions:)-80rzl","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-14woq","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-4h20p","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-57uqq","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-1ciqn","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-1d1mk","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-5aplj","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-12h1t","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-7gid0","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-8ek4","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageindicator\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageindicator\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/cornerradius(_:)","title":"func cornerRadius(CornerRadiusStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageindicator\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/disabledynamictype(sizecategory:)","title":"func disableDynamicType(sizeCategory: ContentSizeCategory) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/dynamictypesize(_:)-7kx7o","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/dynamictypesize(_:)-7wzns","title":"func dynamicTypeSize<T>(T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageindicator\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/enabled(_:)","title":"func enabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-1uy86","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-5xasl","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/fileexporter(ispresented:documents:contenttype:oncompletion:)-8l174","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/fileexporter(ispresented:documents:contenttype:oncompletion:)-9ad6j","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/focusedobject(_:)-9srro","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/focusedobject(_:)-dh8x","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/focusedsceneobject(_:)-3oqnr","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/focusedsceneobject(_:)-75wdm","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/focusedscenevalue(_:_:)-6jaaz","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/focusedscenevalue(_:_:)-7h76j","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/focusedvalue(_:_:)-4vyiz","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/focusedvalue(_:_:)-9k6wh","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/font(_:)-1au6s","title":"func font(FontStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/font(_:)-68f3h","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/font(identifier:style:weight:)","title":"func font(identifier: FontIdentifier, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/font(name:style:weight:)","title":"func font(name: String, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/frame(_:)","title":"func frame(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/frame(square:)","title":"func frame(square: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/fullscreencover(_:)","title":"func fullScreenCover(FullScreenCoverContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/height(_:)","title":"func height(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/help(_:)-1lj83","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/help(_:)-1nn1k","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/help(_:)-6l3t6","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/hidden(if:)","title":"func hidden(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/hidekeyboard()","title":"func hideKeyboard()","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/keyboardshortcut(_:)-50gat","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/keyboardshortcut(_:)-9uwae","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/linelimit(_:)","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/listitemtint(_:)-6yhnz","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/listitemtint(_:)-7alph","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageindicator\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageindicator\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageindicator\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageindicator\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageindicator\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageindicator\/navigationbartitle(_:)-6yo9i","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageindicator\/navigationbartitle(_:)-87kib","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageindicator\/navigationbartitle(_:)-dusn","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageindicator\/navigationbartitle(_:displaymode:)-7z06g","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageindicator\/navigationbartitle(_:displaymode:)-8ttj8","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageindicator\/navigationbartitle(_:displaymode:)-97t3g","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/navigationdocument(_:)-17jzg","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/navigationdocument(_:)-8pajn","title":"func navigationDocument<D>(D) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/navigationdocument(_:preview:)-1afnw","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/navigationdocument(_:preview:)-29uaw","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/navigationdocument(_:preview:)-3tvjk","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/navigationdocument(_:preview:)-7icyr","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/navigationtitle(_:)-6dtff","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/navigationtitle(_:)-6ucvo","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/navigationtitle(_:)-7d86g","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/navigationtitle(_:)-7u98k","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/navigationtitle(_:)-8y83r","title":"func navigationTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageindicator\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageindicator\/ondrop(of:delegate:)-8bayi","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/ondrop(of:delegate:)-9haye","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/ondrop(of:istargeted:perform:)-1solw","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageindicator\/ondrop(of:istargeted:perform:)-3kz1d","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/ondrop(of:istargeted:perform:)-3msex","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageindicator\/ondrop(of:istargeted:perform:)-90mnd","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageindicator\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageindicator\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/onswipegesture(maximumtime:minimumdistance:maximumdistance:gesturetimer:up:left:right:down:)","title":"func onSwipeGesture(maximumTime: TimeInterval, minimumDistance: CGFloat, maximumDistance: CGFloat, gestureTimer: GestureTimer, up: () -> Void, left: () -> Void, right: () -> Void, down: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageindicator\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/padding(_:)-2w6wu","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/padding(_:)-3orhq","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/preferspersistentsystemoverlayshidden()","title":"func prefersPersistentSystemOverlaysHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/presentationdetents(undimmed:largestundimmed:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/presentationdetents(undimmed:largestundimmed:selection:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/renameaction(_:)-1sjdz","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/renameaction(_:)-6p9lf","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/safeareainset(edge:alignment:spacing:content:)-7oo6e","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/safeareainset(edge:alignment:spacing:content:)-93t2y","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/scaleeffect(_:anchor:)-75ikj","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/scaleeffect(_:anchor:)-z0is","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/searchcompletion(_:)-6vvzd","title":"func searchCompletion<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/searchcompletion(_:)-9rr3y","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/searchable(if:text:placement:prompt:)","title":"func searchable(if: Bool, text: Binding<String>, placement: SearchFieldPlacement, prompt: String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/searchable(text:placement:prompt:)-37cbk","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/searchable(text:placement:prompt:)-4ayqz","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/searchable(text:placement:prompt:)-9j215","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageindicator\/searchable(text:placement:prompt:suggestions:)-47ads","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageindicator\/searchable(text:placement:prompt:suggestions:)-4r47t","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageindicator\/searchable(text:placement:prompt:suggestions:)-5zacp","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/searchable(text:tokens:placement:prompt:token:)-2pwt3","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/searchable(text:tokens:placement:prompt:token:)-89tlp","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/searchable(text:tokens:placement:prompt:token:)-dn58","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-2fl0k","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-66fk5","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-8enhb","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/shadow(_:)","title":"func shadow(ViewShadowStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/sheet(_:)","title":"func sheet(SheetContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageindicator\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/tint(_:)-1bawq","title":"func tint<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/tint(_:)-24wes","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/toolbar(content:)-766qf","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/toolbar(content:)-9tk44","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/toolbarbackground(_:for:)-5p1ln","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/toolbarbackground(_:for:)-s4bq","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/visible(if:)","title":"func visible(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/width(_:)","title":"func width(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageindicator\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/swiftuikit\/pageindicator\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/swiftuikit\/pageindicator","title":"PageIndicator","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/pageindicatordisplaymode\/always","title":"case always","type":"case"},{"path":"\/documentation\/swiftuikit\/pageindicatordisplaymode\/automatic","title":"case automatic","type":"case"},{"path":"\/documentation\/swiftuikit\/pageindicatordisplaymode\/never","title":"case never","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/pageindicatordisplaymode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftuikit\/pageindicatordisplaymode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftuikit\/pageindicatordisplaymode","title":"PageIndicatorDisplayMode","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/pageindicatorstyle\/init(dotcolor:dotsize:dotspacing:currentdotcolor:currentdotsize:isanimated:)","title":"init(dotColor: Color, dotSize: CGFloat, dotSpacing: CGFloat?, currentDotColor: Color, currentDotSize: CGFloat, isAnimated: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/pageindicatorstyle\/currentdotcolor","title":"var currentDotColor: Color","type":"property"},{"path":"\/documentation\/swiftuikit\/pageindicatorstyle\/currentdotsize","title":"var currentDotSize: CGFloat","type":"property"},{"path":"\/documentation\/swiftuikit\/pageindicatorstyle\/dotcolor","title":"var dotColor: Color","type":"property"},{"path":"\/documentation\/swiftuikit\/pageindicatorstyle\/dotsize","title":"var dotSize: CGFloat","type":"property"},{"path":"\/documentation\/swiftuikit\/pageindicatorstyle\/dotspacing","title":"var dotSpacing: CGFloat?","type":"property"},{"path":"\/documentation\/swiftuikit\/pageindicatorstyle\/isanimated","title":"var isAnimated: Bool","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/pageindicatorstyle\/standard","title":"static var standard: PageIndicatorStyle","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/pageindicatorstyle\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftuikit\/pageindicatorstyle\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftuikit\/pageindicatorstyle","title":"PageIndicatorStyle","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/pageview\/init(items:currentpageindex:pageindicatordisplaymode:pageindicatorstyle:pagebuilder:)","title":"init<Model>(items: [Model], currentPageIndex: Binding<Int>, pageIndicatorDisplayMode: PageIndicatorDisplayMode, pageIndicatorStyle: PageIndicatorStyle, pageBuilder: (Model) -> PageViewType)","type":"init"},{"path":"\/documentation\/swiftuikit\/pageview\/init(pages:currentpageindex:pageindicatordisplaymode:pageindicatorstyle:)","title":"init(pages: [PageViewType], currentPageIndex: Binding<Int>, pageIndicatorDisplayMode: PageIndicatorDisplayMode, pageIndicatorStyle: PageIndicatorStyle)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/pageview\/body","title":"var body: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageview\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageview\/accessibility(activationpoint:)-5klo5","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageview\/accessibility(activationpoint:)-8whzy","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageview\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageview\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageview\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageview\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageview\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageview\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageview\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageview\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageview\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/accessibilityaction(named:_:)","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/accessibilityactivationpoint(_:)-40720","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/accessibilityactivationpoint(_:)-5pci7","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/accessibilitycustomcontent(_:_:importance:)-4dtb2","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/accessibilitycustomcontent(_:_:importance:)-4jtri","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/accessibilitycustomcontent(_:_:importance:)-4rd0c","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/accessibilitycustomcontent(_:_:importance:)-6i5se","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/accessibilitycustomcontent(_:_:importance:)-6jwrp","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/accessibilitycustomcontent(_:_:importance:)-9c6xx","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/accessibilitycustomcontent(_:_:importance:)-9doau","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/accessibilitycustomcontent(_:_:importance:)-l6iw","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/accessibilityhint(_:)-2meq9","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/accessibilityhint(_:)-6nxs4","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/accessibilityhint(_:)-cq4h","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/accessibilityinputlabels(_:)-4bqts","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/accessibilityinputlabels(_:)-83j12","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/accessibilityinputlabels(_:)-848a2","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/accessibilitylabel(_:)-269yn","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/accessibilitylabel(_:)-6t24","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/accessibilitylabel(_:)-7u79n","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/accessibilityrotor(_:entries:)-1xrj4","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/accessibilityrotor(_:entries:)-4im2","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/accessibilityrotor(_:entries:)-66q5i","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/accessibilityrotor(_:entries:)-9p89r","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/accessibilityrotor(_:entries:entryid:entrylabel:)-2bzai","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/accessibilityrotor(_:entries:entryid:entrylabel:)-3pt9n","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/accessibilityrotor(_:entries:entryid:entrylabel:)-53ayy","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/accessibilityrotor(_:entries:entryid:entrylabel:)-8hb3y","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/accessibilityrotor(_:entries:entrylabel:)-1e9pf","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/accessibilityrotor(_:entries:entrylabel:)-29w5n","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/accessibilityrotor(_:entries:entrylabel:)-78vo2","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/accessibilityrotor(_:entries:entrylabel:)-7k1qu","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/accessibilityrotor(_:textranges:)-3vvvu","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/accessibilityrotor(_:textranges:)-4ivbg","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/accessibilityrotor(_:textranges:)-4qa8d","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/accessibilityrotor(_:textranges:)-7y0jd","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/accessibilityvalue(_:)-2h3t2","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/accessibilityvalue(_:)-5c69y","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/accessibilityvalue(_:)-7pavw","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageview\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageview\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/alert(_:)","title":"func alert(AlertContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/alert(_:ispresented:actions:)-2amg1","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/alert(_:ispresented:actions:)-2dvj8","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/alert(_:ispresented:actions:)-9xqfw","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/alert(_:ispresented:actions:message:)-2an2l","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/alert(_:ispresented:actions:message:)-84so8","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/alert(_:ispresented:actions:message:)-92v77","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/alert(_:ispresented:presenting:actions:)-50j4c","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/alert(_:ispresented:presenting:actions:)-7pso7","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/alert(_:ispresented:presenting:actions:)-9o66v","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/alert(_:ispresented:presenting:actions:message:)-7857q","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/alert(_:ispresented:presenting:actions:message:)-7i0z5","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/alert(_:ispresented:presenting:actions:message:)-97l5b","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageview\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageview\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/alignmentguide(_:computevalue:)-2csx6","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/alignmentguide(_:computevalue:)-90xk6","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageview\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/any()","title":"func any() -> AnyView","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/aspectratio(_:contentmode:)-2k705","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/aspectratio(_:contentmode:)-9x9yo","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageview\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/autosave(_:debounceinterval:action:)","title":"func autosave<T>(Published<T>.Publisher, debounceInterval: RunLoop.SchedulerTimeType.Stride, action: () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageview\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/background(_:in:fillstyle:)-8422i","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/background(_:in:fillstyle:)-lz6d","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/background(in:fillstyle:)-47061","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/background(in:fillstyle:)-r3nl","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/badge(_:)-3h9am","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/badge(_:)-60z4n","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/badge(_:)-8d6z0","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/badge(_:)-8lyp6","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/bindsafeareainsets(to:)","title":"func bindSafeAreaInsets(to: Binding<EdgeInsets>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/bindsize(to:)","title":"func bindSize(to: Binding<CGSize>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/border(_:width:cornerradius:)","title":"func border<Content>(Content, width: CGFloat, cornerRadius: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/buttonstyle(_:)-45cly","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/buttonstyle(_:)-9dnji","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageview\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-3z0b8","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-4xpny","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-nsp1","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-1g84","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-2l8s3","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-94d4l","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-2yr99","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-6ftdr","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-8oo5","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-13agd","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-8va2h","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-aj7x","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageview\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageview\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/cornerradius(_:)","title":"func cornerRadius(CornerRadiusStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageview\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/disabledynamictype(sizecategory:)","title":"func disableDynamicType(sizeCategory: ContentSizeCategory) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/dynamictypesize(_:)-5a2i7","title":"func dynamicTypeSize<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/dynamictypesize(_:)-gvml","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageview\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/enabled(_:)","title":"func enabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-3cwxe","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-82gb8","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-2fu2w","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-5mi6c","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/focusedobject(_:)-70mxh","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/focusedobject(_:)-9qz7m","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/focusedsceneobject(_:)-7p8l2","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/focusedsceneobject(_:)-9tt9","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/focusedscenevalue(_:_:)-4d2mb","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/focusedscenevalue(_:_:)-k6jn","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/focusedvalue(_:_:)-4i3ix","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/focusedvalue(_:_:)-9jdhq","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/font(_:)-2dz9l","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/font(_:)-81eg0","title":"func font(FontStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/font(identifier:style:weight:)","title":"func font(identifier: FontIdentifier, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/font(name:style:weight:)","title":"func font(name: String, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/frame(_:)","title":"func frame(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/frame(square:)","title":"func frame(square: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/fullscreencover(_:)","title":"func fullScreenCover(FullScreenCoverContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/height(_:)","title":"func height(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/help(_:)-183xl","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/help(_:)-50f8b","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/help(_:)-66sgf","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/hidden(if:)","title":"func hidden(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/hidekeyboard()","title":"func hideKeyboard()","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/keyboardshortcut(_:)-2al4k","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/keyboardshortcut(_:)-9qpqy","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/linelimit(_:)","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/listitemtint(_:)-2pc93","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/listitemtint(_:)-8r50l","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageview\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageview\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageview\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageview\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageview\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageview\/navigationbartitle(_:)-45giq","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageview\/navigationbartitle(_:)-80z8n","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageview\/navigationbartitle(_:)-91lmp","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageview\/navigationbartitle(_:displaymode:)-2pdun","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageview\/navigationbartitle(_:displaymode:)-4103x","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageview\/navigationbartitle(_:displaymode:)-fc1k","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/navigationdocument(_:)-1nn4u","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/navigationdocument(_:)-3desc","title":"func navigationDocument<D>(D) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/navigationdocument(_:preview:)-1zwl6","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/navigationdocument(_:preview:)-405u7","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/navigationdocument(_:preview:)-48id9","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/navigationdocument(_:preview:)-5lxo0","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/navigationtitle(_:)-290f9","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/navigationtitle(_:)-2pls1","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/navigationtitle(_:)-4x6gi","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/navigationtitle(_:)-84z3f","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/navigationtitle(_:)-9gl76","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageview\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/ondrop(of:delegate:)-2r1d0","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageview\/ondrop(of:delegate:)-3dmpc","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/ondrop(of:istargeted:perform:)-1mm4m","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageview\/ondrop(of:istargeted:perform:)-84jae","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageview\/ondrop(of:istargeted:perform:)-97zt9","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/ondrop(of:istargeted:perform:)-9g2um","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageview\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/onswipegesture(maximumtime:minimumdistance:maximumdistance:gesturetimer:up:left:right:down:)","title":"func onSwipeGesture(maximumTime: TimeInterval, minimumDistance: CGFloat, maximumDistance: CGFloat, gestureTimer: GestureTimer, up: () -> Void, left: () -> Void, right: () -> Void, down: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageview\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/padding(_:)-1o8xb","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/padding(_:)-652ma","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/preferspersistentsystemoverlayshidden()","title":"func prefersPersistentSystemOverlaysHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/presentationdetents(undimmed:largestundimmed:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/presentationdetents(undimmed:largestundimmed:selection:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/renameaction(_:)-2um63","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/renameaction(_:)-3pbpl","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/safeareainset(edge:alignment:spacing:content:)-2klfm","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/safeareainset(edge:alignment:spacing:content:)-9ebz4","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/scaleeffect(_:anchor:)-4p6wb","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/scaleeffect(_:anchor:)-7hl4g","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/searchcompletion(_:)-211hk","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/searchcompletion(_:)-8btrk","title":"func searchCompletion<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/searchable(if:text:placement:prompt:)","title":"func searchable(if: Bool, text: Binding<String>, placement: SearchFieldPlacement, prompt: String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/searchable(text:placement:prompt:)-19nkg","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/searchable(text:placement:prompt:)-5l6iv","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/searchable(text:placement:prompt:)-6r5rd","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageview\/searchable(text:placement:prompt:suggestions:)-5dp5","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageview\/searchable(text:placement:prompt:suggestions:)-87auf","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageview\/searchable(text:placement:prompt:suggestions:)-po35","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/searchable(text:tokens:placement:prompt:token:)-1grh1","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/searchable(text:tokens:placement:prompt:token:)-5f79y","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/searchable(text:tokens:placement:prompt:token:)-8xyoj","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-4mhzm","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-63up6","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-86e16","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/shadow(_:)","title":"func shadow(ViewShadowStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/sheet(_:)","title":"func sheet(SheetContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/pageview\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/tint(_:)-5m2t3","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/tint(_:)-6km48","title":"func tint<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/toolbar(content:)-3n88r","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/toolbar(content:)-9awt0","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/toolbarbackground(_:for:)-2ii5o","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/toolbarbackground(_:for:)-9fm5y","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/visible(if:)","title":"func visible(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/width(_:)","title":"func width(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/pageview\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/swiftuikit\/pageview\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/swiftuikit\/pageview","title":"PageView","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/searchbar\/init(title:text:canceltext:searchfieldbackgroundcolor:searchfieldcornerradius:searchfieldpadding:searchfieldmargin:)","title":"init(title: String, text: Binding<String>, cancelText: String, searchFieldBackgroundColor: Color, searchFieldCornerRadius: CGFloat, searchFieldPadding: CGFloat, searchFieldMargin: CGFloat)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/searchbar\/body","title":"var body: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/searchbar\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/searchbar\/accessibility(activationpoint:)-3api4","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/searchbar\/accessibility(activationpoint:)-70kq8","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/searchbar\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/searchbar\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/searchbar\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/searchbar\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/searchbar\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/searchbar\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/searchbar\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/searchbar\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/searchbar\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/accessibilityaction(named:_:)","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/accessibilityactivationpoint(_:)-14fct","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/accessibilityactivationpoint(_:)-2pl4g","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/accessibilitycustomcontent(_:_:importance:)-23it","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/accessibilitycustomcontent(_:_:importance:)-3jso9","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/accessibilitycustomcontent(_:_:importance:)-4uyhh","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/accessibilitycustomcontent(_:_:importance:)-5a4aa","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/accessibilitycustomcontent(_:_:importance:)-5q2ks","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/accessibilitycustomcontent(_:_:importance:)-67luc","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/accessibilitycustomcontent(_:_:importance:)-8g8wz","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/accessibilitycustomcontent(_:_:importance:)-94ii6","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/accessibilityhint(_:)-1vshq","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/accessibilityhint(_:)-2782j","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/accessibilityhint(_:)-54g4x","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/accessibilityinputlabels(_:)-3g1jj","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/accessibilityinputlabels(_:)-7jdg0","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/accessibilityinputlabels(_:)-v144","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/accessibilitylabel(_:)-2hiqm","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/accessibilitylabel(_:)-7j4cm","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/accessibilitylabel(_:)-7lsmf","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/accessibilityrotor(_:entries:)-2t457","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/accessibilityrotor(_:entries:)-2uvwn","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/accessibilityrotor(_:entries:)-89vs6","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/accessibilityrotor(_:entries:)-o9zg","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/accessibilityrotor(_:entries:entryid:entrylabel:)-16sqa","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/accessibilityrotor(_:entries:entryid:entrylabel:)-1dhfo","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/accessibilityrotor(_:entries:entryid:entrylabel:)-50eeq","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/accessibilityrotor(_:entries:entryid:entrylabel:)-6cumu","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/accessibilityrotor(_:entries:entrylabel:)-2pww7","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/accessibilityrotor(_:entries:entrylabel:)-3d9j8","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/accessibilityrotor(_:entries:entrylabel:)-4cv0r","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/accessibilityrotor(_:entries:entrylabel:)-7lmvl","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/accessibilityrotor(_:textranges:)-445c8","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/accessibilityrotor(_:textranges:)-5is0r","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/accessibilityrotor(_:textranges:)-8wiez","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/accessibilityrotor(_:textranges:)-9sqsc","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/accessibilityvalue(_:)-7uiy7","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/accessibilityvalue(_:)-7y22h","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/accessibilityvalue(_:)-qxa2","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/searchbar\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/searchbar\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/alert(_:)","title":"func alert(AlertContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/alert(_:ispresented:actions:)-4nwhf","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/alert(_:ispresented:actions:)-5jb0u","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/alert(_:ispresented:actions:)-9vxqb","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/alert(_:ispresented:actions:message:)-1z30n","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/alert(_:ispresented:actions:message:)-24e0m","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/alert(_:ispresented:actions:message:)-nnly","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/alert(_:ispresented:presenting:actions:)-2i0e4","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/alert(_:ispresented:presenting:actions:)-8hxi6","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/alert(_:ispresented:presenting:actions:)-9b88q","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/alert(_:ispresented:presenting:actions:message:)-1m6fk","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/alert(_:ispresented:presenting:actions:message:)-3m8m8","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/alert(_:ispresented:presenting:actions:message:)-6dtc2","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/searchbar\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/searchbar\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/alignmentguide(_:computevalue:)-2x7tl","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/alignmentguide(_:computevalue:)-9psr4","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/searchbar\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/any()","title":"func any() -> AnyView","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/aspectratio(_:contentmode:)-918ux","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/aspectratio(_:contentmode:)-9hxak","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/searchbar\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/autosave(_:debounceinterval:action:)","title":"func autosave<T>(Published<T>.Publisher, debounceInterval: RunLoop.SchedulerTimeType.Stride, action: () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/searchbar\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/background(_:in:fillstyle:)-11bkw","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/background(_:in:fillstyle:)-1sk5w","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/background(in:fillstyle:)-4f083","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/background(in:fillstyle:)-7l92c","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/badge(_:)-23i36","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/badge(_:)-3zk9z","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/badge(_:)-67yko","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/badge(_:)-jcar","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/bindsafeareainsets(to:)","title":"func bindSafeAreaInsets(to: Binding<EdgeInsets>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/bindsize(to:)","title":"func bindSize(to: Binding<CGSize>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/border(_:width:cornerradius:)","title":"func border<Content>(Content, width: CGFloat, cornerRadius: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/buttonstyle(_:)-210v4","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/buttonstyle(_:)-ismk","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/searchbar\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/confirmationdialog(_:ispresented:titlevisibility:actions:)-2pfdf","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/confirmationdialog(_:ispresented:titlevisibility:actions:)-7jbyq","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/confirmationdialog(_:ispresented:titlevisibility:actions:)-938f7","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-23q1n","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-4ocmy","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-7dkb0","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-7wauy","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-8do3u","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-t2n4","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-4ngdo","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-9slrj","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-b5c2","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/searchbar\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/searchbar\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/cornerradius(_:)","title":"func cornerRadius(CornerRadiusStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/searchbar\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/disabledynamictype(sizecategory:)","title":"func disableDynamicType(sizeCategory: ContentSizeCategory) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/dynamictypesize(_:)-9krg7","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/dynamictypesize(_:)-9tjr","title":"func dynamicTypeSize<T>(T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/searchbar\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/enabled(_:)","title":"func enabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-9zb16","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-smox","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/fileexporter(ispresented:documents:contenttype:oncompletion:)-8jrma","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/fileexporter(ispresented:documents:contenttype:oncompletion:)-9uv8c","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/focusedobject(_:)-20e3i","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/focusedobject(_:)-3nkmy","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/focusedsceneobject(_:)-6yxdq","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/focusedsceneobject(_:)-70oi7","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/focusedscenevalue(_:_:)-116q","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/focusedscenevalue(_:_:)-6wh9t","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/focusedvalue(_:_:)-9onr9","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/focusedvalue(_:_:)-k799","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/font(_:)-6mo8b","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/font(_:)-8hs7b","title":"func font(FontStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/font(identifier:style:weight:)","title":"func font(identifier: FontIdentifier, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/font(name:style:weight:)","title":"func font(name: String, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/frame(_:)","title":"func frame(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/frame(square:)","title":"func frame(square: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/fullscreencover(_:)","title":"func fullScreenCover(FullScreenCoverContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/height(_:)","title":"func height(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/help(_:)-14qwj","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/help(_:)-8judw","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/help(_:)-8uitk","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/hidden(if:)","title":"func hidden(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/hidekeyboard()","title":"func hideKeyboard()","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/keyboardshortcut(_:)-8nlxw","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/keyboardshortcut(_:)-obqa","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/linelimit(_:)","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/listitemtint(_:)-7zksc","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/listitemtint(_:)-94bzk","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/searchbar\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/searchbar\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/searchbar\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/searchbar\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/searchbar\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/searchbar\/navigationbartitle(_:)-79bnb","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/searchbar\/navigationbartitle(_:)-7qvbk","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/searchbar\/navigationbartitle(_:)-89gh0","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/searchbar\/navigationbartitle(_:displaymode:)-49oa0","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/searchbar\/navigationbartitle(_:displaymode:)-4peh4","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/searchbar\/navigationbartitle(_:displaymode:)-762lp","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/navigationdocument(_:)-1i0k3","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/navigationdocument(_:)-1n5bd","title":"func navigationDocument<D>(D) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/navigationdocument(_:preview:)-336os","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/navigationdocument(_:preview:)-650nq","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/navigationdocument(_:preview:)-7dg5l","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/navigationdocument(_:preview:)-91ocd","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/navigationtitle(_:)-4gzmx","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/navigationtitle(_:)-79avl","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/navigationtitle(_:)-7vdxf","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/navigationtitle(_:)-8ejxb","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/navigationtitle(_:)-92ii6","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/searchbar\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/ondrop(of:delegate:)-3o5ow","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/searchbar\/ondrop(of:delegate:)-5x1n3","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/searchbar\/ondrop(of:istargeted:perform:)-17xyk","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/ondrop(of:istargeted:perform:)-29yh8","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/ondrop(of:istargeted:perform:)-8ltmj","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/searchbar\/ondrop(of:istargeted:perform:)-s2rj","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/searchbar\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/searchbar\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/onswipegesture(maximumtime:minimumdistance:maximumdistance:gesturetimer:up:left:right:down:)","title":"func onSwipeGesture(maximumTime: TimeInterval, minimumDistance: CGFloat, maximumDistance: CGFloat, gestureTimer: GestureTimer, up: () -> Void, left: () -> Void, right: () -> Void, down: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/searchbar\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/padding(_:)-3fic","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/padding(_:)-7rvrg","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/preferspersistentsystemoverlayshidden()","title":"func prefersPersistentSystemOverlaysHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/presentationdetents(undimmed:largestundimmed:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/presentationdetents(undimmed:largestundimmed:selection:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/renameaction(_:)-5lz2v","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/renameaction(_:)-7ogpi","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/safeareainset(edge:alignment:spacing:content:)-1kkt7","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/safeareainset(edge:alignment:spacing:content:)-4elq8","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/scaleeffect(_:anchor:)-6h7dw","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/scaleeffect(_:anchor:)-6v5ma","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/searchcompletion(_:)-1k44d","title":"func searchCompletion<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/searchcompletion(_:)-896v6","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/searchable(if:text:placement:prompt:)","title":"func searchable(if: Bool, text: Binding<String>, placement: SearchFieldPlacement, prompt: String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/searchable(text:placement:prompt:)-39luo","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/searchable(text:placement:prompt:)-4z46s","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/searchable(text:placement:prompt:)-8dsfq","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/searchbar\/searchable(text:placement:prompt:suggestions:)-28110","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/searchbar\/searchable(text:placement:prompt:suggestions:)-3zge4","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/searchbar\/searchable(text:placement:prompt:suggestions:)-6wzjd","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/searchable(text:tokens:placement:prompt:token:)-3xdet","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/searchable(text:tokens:placement:prompt:token:)-4cp21","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/searchable(text:tokens:placement:prompt:token:)-9li0y","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-14rhr","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-1oel5","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-90cfv","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/shadow(_:)","title":"func shadow(ViewShadowStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/sheet(_:)","title":"func sheet(SheetContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/searchbar\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/tint(_:)-4adod","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/tint(_:)-6crcm","title":"func tint<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/toolbar(content:)-2xq3m","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/toolbar(content:)-osoc","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/toolbarbackground(_:for:)-5roc7","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/toolbarbackground(_:for:)-6x632","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/visible(if:)","title":"func visible(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/width(_:)","title":"func width(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/searchbar\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/swiftuikit\/searchbar\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/swiftuikit\/searchbar","title":"SearchBar","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/init(parallaxmode:content:)","title":"init(parallaxMode: ParallaxMode, content: () -> Content)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/body","title":"var body: some View","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/parallaxmode\/discrete","title":"case discrete","type":"case"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/parallaxmode\/none","title":"case none","type":"case"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/parallaxmode\/prominent","title":"case prominent","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/parallaxmode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftuikit\/scrollviewheader\/parallaxmode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftuikit\/scrollviewheader\/parallaxmode","title":"ScrollViewHeader.ParallaxMode","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/scrollviewheader\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibility(activationpoint:)-2y37m","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibility(activationpoint:)-9ct98","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibilityaction(named:_:)","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibilityactivationpoint(_:)-4z9tw","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibilityactivationpoint(_:)-74spv","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibilitycustomcontent(_:_:importance:)-16l1v","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibilitycustomcontent(_:_:importance:)-1f8od","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibilitycustomcontent(_:_:importance:)-3jyx6","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibilitycustomcontent(_:_:importance:)-55kz8","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibilitycustomcontent(_:_:importance:)-7vqcb","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibilitycustomcontent(_:_:importance:)-8njpz","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibilitycustomcontent(_:_:importance:)-8vwqt","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibilitycustomcontent(_:_:importance:)-9bi59","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibilityhint(_:)-26i46","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibilityhint(_:)-66neq","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibilityhint(_:)-memw","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibilityinputlabels(_:)-2zcsv","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibilityinputlabels(_:)-359eq","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibilityinputlabels(_:)-6zcs","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibilitylabel(_:)-1yqfx","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibilitylabel(_:)-2thbt","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibilitylabel(_:)-53dtf","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibilityrotor(_:entries:)-1qy5c","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibilityrotor(_:entries:)-2d7bv","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibilityrotor(_:entries:)-3x6ff","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibilityrotor(_:entries:)-79hbt","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibilityrotor(_:entries:entryid:entrylabel:)-26dpx","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibilityrotor(_:entries:entryid:entrylabel:)-73v6","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibilityrotor(_:entries:entryid:entrylabel:)-a15x","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibilityrotor(_:entries:entryid:entrylabel:)-easq","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibilityrotor(_:entries:entrylabel:)-255cf","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibilityrotor(_:entries:entrylabel:)-4v4e4","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibilityrotor(_:entries:entrylabel:)-516t8","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibilityrotor(_:entries:entrylabel:)-9l4q5","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibilityrotor(_:textranges:)-42mid","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibilityrotor(_:textranges:)-7x3rg","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibilityrotor(_:textranges:)-83war","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibilityrotor(_:textranges:)-cb6t","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibilityvalue(_:)-79xtv","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibilityvalue(_:)-83y1u","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/accessibilityvalue(_:)-bem4","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/scrollviewheader\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/scrollviewheader\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/alert(_:)","title":"func alert(AlertContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/alert(_:ispresented:actions:)-1wpfj","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/alert(_:ispresented:actions:)-2pnb0","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/alert(_:ispresented:actions:)-4y0z7","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/alert(_:ispresented:actions:message:)-3owl3","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/alert(_:ispresented:actions:message:)-4ez56","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/alert(_:ispresented:actions:message:)-7327j","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/alert(_:ispresented:presenting:actions:)-1txb0","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/alert(_:ispresented:presenting:actions:)-32iv5","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/alert(_:ispresented:presenting:actions:)-8x6tz","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/alert(_:ispresented:presenting:actions:message:)-41q2c","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/alert(_:ispresented:presenting:actions:message:)-83rgo","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/alert(_:ispresented:presenting:actions:message:)-9uuf7","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/scrollviewheader\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/scrollviewheader\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/alignmentguide(_:computevalue:)-3ki91","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/alignmentguide(_:computevalue:)-5d7bm","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/scrollviewheader\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/any()","title":"func any() -> AnyView","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/aspectratio(_:contentmode:)-5353k","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/aspectratio(_:contentmode:)-h8y1","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/scrollviewheader\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/autosave(_:debounceinterval:action:)","title":"func autosave<T>(Published<T>.Publisher, debounceInterval: RunLoop.SchedulerTimeType.Stride, action: () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/scrollviewheader\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/background(_:in:fillstyle:)-10go1","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/background(_:in:fillstyle:)-wbyj","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/background(in:fillstyle:)-1yecf","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/background(in:fillstyle:)-9xr6m","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/badge(_:)-7kl9a","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/badge(_:)-8jgo5","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/badge(_:)-8rt2w","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/badge(_:)-9r52g","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/bindsafeareainsets(to:)","title":"func bindSafeAreaInsets(to: Binding<EdgeInsets>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/bindsize(to:)","title":"func bindSize(to: Binding<CGSize>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/border(_:width:cornerradius:)","title":"func border<Content>(Content, width: CGFloat, cornerRadius: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/buttonstyle(_:)-31ek6","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/buttonstyle(_:)-br5i","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/scrollviewheader\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/confirmationdialog(_:ispresented:titlevisibility:actions:)-5lzjd","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/confirmationdialog(_:ispresented:titlevisibility:actions:)-7hi6b","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/confirmationdialog(_:ispresented:titlevisibility:actions:)-jb0x","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-3wlge","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-4y52l","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-614j3","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-409ui","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-6732r","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-6zbw2","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-131j0","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-29h75","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-38mcm","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/scrollviewheader\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/scrollviewheader\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/cornerradius(_:)","title":"func cornerRadius(CornerRadiusStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/scrollviewheader\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/disabledynamictype(sizecategory:)","title":"func disableDynamicType(sizeCategory: ContentSizeCategory) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/dynamictypesize(_:)-7ede9","title":"func dynamicTypeSize<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/dynamictypesize(_:)-7v3z","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/scrollviewheader\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/enabled(_:)","title":"func enabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-5crhm","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-9xcq6","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/fileexporter(ispresented:documents:contenttype:oncompletion:)-31qdq","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/fileexporter(ispresented:documents:contenttype:oncompletion:)-9kuh8","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/focusedobject(_:)-80ik2","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/focusedobject(_:)-yxe4","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/focusedsceneobject(_:)-3eph3","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/focusedsceneobject(_:)-7l2xe","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/focusedscenevalue(_:_:)-1guxr","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/focusedscenevalue(_:_:)-2qtjq","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/focusedvalue(_:_:)-8sgo0","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/focusedvalue(_:_:)-8y83f","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/font(_:)-1qc6z","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/font(_:)-bfz","title":"func font(FontStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/font(identifier:style:weight:)","title":"func font(identifier: FontIdentifier, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/font(name:style:weight:)","title":"func font(name: String, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/frame(_:)","title":"func frame(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/frame(square:)","title":"func frame(square: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/fullscreencover(_:)","title":"func fullScreenCover(FullScreenCoverContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/height(_:)","title":"func height(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/help(_:)-1z6c7","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/help(_:)-2hq7m","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/help(_:)-902y3","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/hidden(if:)","title":"func hidden(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/hidekeyboard()","title":"func hideKeyboard()","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/keyboardshortcut(_:)-2h01e","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/keyboardshortcut(_:)-7kuaa","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/linelimit(_:)","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/listitemtint(_:)-8cc5a","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/listitemtint(_:)-r19h","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/scrollviewheader\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/scrollviewheader\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/scrollviewheader\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/scrollviewheader\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/scrollviewheader\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/scrollviewheader\/navigationbartitle(_:)-59lj","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/scrollviewheader\/navigationbartitle(_:)-71mja","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/scrollviewheader\/navigationbartitle(_:)-8xms4","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/scrollviewheader\/navigationbartitle(_:displaymode:)-2tlsd","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/scrollviewheader\/navigationbartitle(_:displaymode:)-4d9vr","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/scrollviewheader\/navigationbartitle(_:displaymode:)-6wgn2","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/navigationdocument(_:)-7ijos","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/navigationdocument(_:)-8vrwp","title":"func navigationDocument<D>(D) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/navigationdocument(_:preview:)-1huhn","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/navigationdocument(_:preview:)-261gj","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/navigationdocument(_:preview:)-4jnof","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/navigationdocument(_:preview:)-558jj","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/navigationtitle(_:)-3u68t","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/navigationtitle(_:)-51502","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/navigationtitle(_:)-5ebkf","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/navigationtitle(_:)-5xke9","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/navigationtitle(_:)-97kot","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/scrollviewheader\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/scrollviewheader\/ondrop(of:delegate:)-6iohy","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/ondrop(of:delegate:)-wxgk","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/ondrop(of:istargeted:perform:)-4dcdn","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/ondrop(of:istargeted:perform:)-65fn8","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/scrollviewheader\/ondrop(of:istargeted:perform:)-93kh2","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/scrollviewheader\/ondrop(of:istargeted:perform:)-9m21v","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/scrollviewheader\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/scrollviewheader\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/onswipegesture(maximumtime:minimumdistance:maximumdistance:gesturetimer:up:left:right:down:)","title":"func onSwipeGesture(maximumTime: TimeInterval, minimumDistance: CGFloat, maximumDistance: CGFloat, gestureTimer: GestureTimer, up: () -> Void, left: () -> Void, right: () -> Void, down: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/scrollviewheader\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/padding(_:)-3wpdu","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/padding(_:)-67uty","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/preferspersistentsystemoverlayshidden()","title":"func prefersPersistentSystemOverlaysHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/presentationdetents(undimmed:largestundimmed:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/presentationdetents(undimmed:largestundimmed:selection:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/renameaction(_:)-63a8e","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/renameaction(_:)-785fs","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/safeareainset(edge:alignment:spacing:content:)-5uktt","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/safeareainset(edge:alignment:spacing:content:)-6m3zq","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/scaleeffect(_:anchor:)-5ww7f","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/scaleeffect(_:anchor:)-6yfbb","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/searchcompletion(_:)-2ds3q","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/searchcompletion(_:)-83cns","title":"func searchCompletion<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/searchable(if:text:placement:prompt:)","title":"func searchable(if: Bool, text: Binding<String>, placement: SearchFieldPlacement, prompt: String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/searchable(text:placement:prompt:)-131f6","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/searchable(text:placement:prompt:)-5nr04","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/searchable(text:placement:prompt:)-76vt6","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/scrollviewheader\/searchable(text:placement:prompt:suggestions:)-3bijr","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/scrollviewheader\/searchable(text:placement:prompt:suggestions:)-85x66","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/scrollviewheader\/searchable(text:placement:prompt:suggestions:)-u3n8","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/searchable(text:tokens:placement:prompt:token:)-33me9","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/searchable(text:tokens:placement:prompt:token:)-4aruk","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/searchable(text:tokens:placement:prompt:token:)-5obw","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-4pgch","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-4w2mv","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-50u0t","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/shadow(_:)","title":"func shadow(ViewShadowStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/sheet(_:)","title":"func sheet(SheetContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/scrollviewheader\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/tint(_:)-1fzwo","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/tint(_:)-86l6b","title":"func tint<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/toolbar(content:)-4fx4f","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/toolbar(content:)-leya","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/toolbarbackground(_:for:)-4ua3m","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/toolbarbackground(_:for:)-6a3m9","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/visible(if:)","title":"func visible(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/width(_:)","title":"func width(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/scrollviewheader\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/swiftuikit\/scrollviewheader\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/swiftuikit\/scrollviewheader","title":"ScrollViewHeader","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/textreplacement\/init(_:replace:with:)","title":"init(String, replace: String, with: (String) -> Text)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/textreplacement\/body","title":"var body: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/textreplacement\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/textreplacement\/accessibility(activationpoint:)-2dcij","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/textreplacement\/accessibility(activationpoint:)-62s4c","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/textreplacement\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/textreplacement\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/textreplacement\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/textreplacement\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/textreplacement\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/textreplacement\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/textreplacement\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/textreplacement\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/textreplacement\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/accessibilityaction(named:_:)","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/accessibilityactivationpoint(_:)-2okbi","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/accessibilityactivationpoint(_:)-8ejqi","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/accessibilitycustomcontent(_:_:importance:)-1kt53","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/accessibilitycustomcontent(_:_:importance:)-1wetp","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/accessibilitycustomcontent(_:_:importance:)-3tm2d","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/accessibilitycustomcontent(_:_:importance:)-3xcou","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/accessibilitycustomcontent(_:_:importance:)-4g6au","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/accessibilitycustomcontent(_:_:importance:)-5ie51","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/accessibilitycustomcontent(_:_:importance:)-68n2v","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/accessibilitycustomcontent(_:_:importance:)-7jez3","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/accessibilityhint(_:)-2jdze","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/accessibilityhint(_:)-707li","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/accessibilityhint(_:)-oanm","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/accessibilityinputlabels(_:)-53vsc","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/accessibilityinputlabels(_:)-93yf5","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/accessibilityinputlabels(_:)-9ajq","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/accessibilitylabel(_:)-242v3","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/accessibilitylabel(_:)-6pdk5","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/accessibilitylabel(_:)-6ue6g","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/accessibilityrotor(_:entries:)-1u7bq","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/accessibilityrotor(_:entries:)-590l","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/accessibilityrotor(_:entries:)-60zqh","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/accessibilityrotor(_:entries:)-66dhx","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/accessibilityrotor(_:entries:entryid:entrylabel:)-799tw","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/accessibilityrotor(_:entries:entryid:entrylabel:)-7hn5k","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/accessibilityrotor(_:entries:entryid:entrylabel:)-9ha6m","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/accessibilityrotor(_:entries:entryid:entrylabel:)-9yhzm","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/accessibilityrotor(_:entries:entrylabel:)-4rogq","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/accessibilityrotor(_:entries:entrylabel:)-6uaqt","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/accessibilityrotor(_:entries:entrylabel:)-8r6o4","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/accessibilityrotor(_:entries:entrylabel:)-9xu2w","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/accessibilityrotor(_:textranges:)-2g7co","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/accessibilityrotor(_:textranges:)-4ltmf","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/accessibilityrotor(_:textranges:)-5oimr","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/accessibilityrotor(_:textranges:)-6leu","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/accessibilityvalue(_:)-1uwbp","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/accessibilityvalue(_:)-3zf7t","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/accessibilityvalue(_:)-4hx8b","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/textreplacement\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/textreplacement\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/alert(_:)","title":"func alert(AlertContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/alert(_:ispresented:actions:)-30ss9","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/alert(_:ispresented:actions:)-3uhuu","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/alert(_:ispresented:actions:)-5zbuq","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/alert(_:ispresented:actions:message:)-3m5bb","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/alert(_:ispresented:actions:message:)-4moag","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/alert(_:ispresented:actions:message:)-884bi","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/alert(_:ispresented:presenting:actions:)-5ph2s","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/alert(_:ispresented:presenting:actions:)-6913p","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/alert(_:ispresented:presenting:actions:)-95vzf","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/alert(_:ispresented:presenting:actions:message:)-1lhs1","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/alert(_:ispresented:presenting:actions:message:)-7ls27","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/alert(_:ispresented:presenting:actions:message:)-9ryrk","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/textreplacement\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/textreplacement\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/alignmentguide(_:computevalue:)-15ub4","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/alignmentguide(_:computevalue:)-v2yp","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/textreplacement\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/any()","title":"func any() -> AnyView","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/aspectratio(_:contentmode:)-2e4ie","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/aspectratio(_:contentmode:)-9vi2t","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/textreplacement\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/autosave(_:debounceinterval:action:)","title":"func autosave<T>(Published<T>.Publisher, debounceInterval: RunLoop.SchedulerTimeType.Stride, action: () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/textreplacement\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/background(_:in:fillstyle:)-111ph","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/background(_:in:fillstyle:)-6hubm","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/background(in:fillstyle:)-97lid","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/background(in:fillstyle:)-x2oa","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/badge(_:)-46rdg","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/badge(_:)-4dsfg","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/badge(_:)-71pwl","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/badge(_:)-7dbv9","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/bindsafeareainsets(to:)","title":"func bindSafeAreaInsets(to: Binding<EdgeInsets>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/bindsize(to:)","title":"func bindSize(to: Binding<CGSize>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/border(_:width:cornerradius:)","title":"func border<Content>(Content, width: CGFloat, cornerRadius: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/buttonstyle(_:)-4606i","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/buttonstyle(_:)-6yw5d","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/textreplacement\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/confirmationdialog(_:ispresented:titlevisibility:actions:)-6whkg","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/confirmationdialog(_:ispresented:titlevisibility:actions:)-88caw","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/confirmationdialog(_:ispresented:titlevisibility:actions:)-vr1p","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-1zcv0","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-6ylrs","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-7o4n8","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-42m67","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-92d9m","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-u4hx","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-1ymqg","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-2grb","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-karp","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/textreplacement\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/textreplacement\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/cornerradius(_:)","title":"func cornerRadius(CornerRadiusStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/textreplacement\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/disabledynamictype(sizecategory:)","title":"func disableDynamicType(sizeCategory: ContentSizeCategory) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/dynamictypesize(_:)-2vudk","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/dynamictypesize(_:)-4aydj","title":"func dynamicTypeSize<T>(T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/textreplacement\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/enabled(_:)","title":"func enabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-363nj","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-gz9j","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/fileexporter(ispresented:documents:contenttype:oncompletion:)-8jtxw","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/fileexporter(ispresented:documents:contenttype:oncompletion:)-9le8p","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/focusedobject(_:)-3ivnv","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/focusedobject(_:)-gwua","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/focusedsceneobject(_:)-85ver","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/focusedsceneobject(_:)-9z0sx","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/focusedscenevalue(_:_:)-4vjn8","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/focusedscenevalue(_:_:)-8jfb","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/focusedvalue(_:_:)-14cus","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/focusedvalue(_:_:)-5zuzk","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/font(_:)-4rtpr","title":"func font(FontStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/font(_:)-7d823","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/font(identifier:style:weight:)","title":"func font(identifier: FontIdentifier, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/font(name:style:weight:)","title":"func font(name: String, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/frame(_:)","title":"func frame(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/frame(square:)","title":"func frame(square: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/fullscreencover(_:)","title":"func fullScreenCover(FullScreenCoverContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/height(_:)","title":"func height(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/help(_:)-5e25w","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/help(_:)-6b6pp","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/help(_:)-6npj9","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/hidden(if:)","title":"func hidden(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/hidekeyboard()","title":"func hideKeyboard()","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/keyboardshortcut(_:)-7r4wp","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/keyboardshortcut(_:)-8algs","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/linelimit(_:)","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/listitemtint(_:)-86x1t","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/listitemtint(_:)-94mvg","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/textreplacement\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/textreplacement\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/textreplacement\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/textreplacement\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/textreplacement\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/textreplacement\/navigationbartitle(_:)-4z89j","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/textreplacement\/navigationbartitle(_:)-8amnu","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/textreplacement\/navigationbartitle(_:)-j9sk","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/textreplacement\/navigationbartitle(_:displaymode:)-2m5zq","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/textreplacement\/navigationbartitle(_:displaymode:)-7mq5l","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/textreplacement\/navigationbartitle(_:displaymode:)-93eua","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/navigationdocument(_:)-4hcu6","title":"func navigationDocument<D>(D) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/navigationdocument(_:)-7jzrv","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/navigationdocument(_:preview:)-2lrf9","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/navigationdocument(_:preview:)-6jfbv","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/navigationdocument(_:preview:)-72rn","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/navigationdocument(_:preview:)-ebmg","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/navigationtitle(_:)-2wyy7","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/navigationtitle(_:)-31xo7","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/navigationtitle(_:)-6m6y8","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/navigationtitle(_:)-8i3c6","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/navigationtitle(_:)-9z1ty","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/textreplacement\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/ondrop(of:delegate:)-5c1ur","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/textreplacement\/ondrop(of:delegate:)-6tva6","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/textreplacement\/ondrop(of:istargeted:perform:)-10w33","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/ondrop(of:istargeted:perform:)-1bt11","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/textreplacement\/ondrop(of:istargeted:perform:)-6xpx","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/ondrop(of:istargeted:perform:)-885m9","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/textreplacement\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/textreplacement\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/onswipegesture(maximumtime:minimumdistance:maximumdistance:gesturetimer:up:left:right:down:)","title":"func onSwipeGesture(maximumTime: TimeInterval, minimumDistance: CGFloat, maximumDistance: CGFloat, gestureTimer: GestureTimer, up: () -> Void, left: () -> Void, right: () -> Void, down: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/textreplacement\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/padding(_:)-10e5e","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/padding(_:)-9t1mw","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/preferspersistentsystemoverlayshidden()","title":"func prefersPersistentSystemOverlaysHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/presentationdetents(undimmed:largestundimmed:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/presentationdetents(undimmed:largestundimmed:selection:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/renameaction(_:)-3p0bc","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/renameaction(_:)-4cqv7","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/safeareainset(edge:alignment:spacing:content:)-8ubee","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/safeareainset(edge:alignment:spacing:content:)-b029","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/scaleeffect(_:anchor:)-4woun","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/scaleeffect(_:anchor:)-7h0m5","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/searchcompletion(_:)-4r1x9","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/searchcompletion(_:)-80hoq","title":"func searchCompletion<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/searchable(if:text:placement:prompt:)","title":"func searchable(if: Bool, text: Binding<String>, placement: SearchFieldPlacement, prompt: String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/searchable(text:placement:prompt:)-29q0v","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/searchable(text:placement:prompt:)-4n164","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/searchable(text:placement:prompt:)-54ci7","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/textreplacement\/searchable(text:placement:prompt:suggestions:)-7x6mu","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/textreplacement\/searchable(text:placement:prompt:suggestions:)-8dfq9","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/textreplacement\/searchable(text:placement:prompt:suggestions:)-fy6q","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/searchable(text:tokens:placement:prompt:token:)-2ez8q","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/searchable(text:tokens:placement:prompt:token:)-4u307","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/searchable(text:tokens:placement:prompt:token:)-9owe4","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-2jplt","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-9n1go","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-9zyq","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/shadow(_:)","title":"func shadow(ViewShadowStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/sheet(_:)","title":"func sheet(SheetContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/textreplacement\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/tint(_:)-21g1j","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/tint(_:)-2reps","title":"func tint<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/toolbar(content:)-6mjd7","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/toolbar(content:)-7s3mz","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/toolbarbackground(_:for:)-2n5m1","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/toolbarbackground(_:for:)-7uxpj","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/visible(if:)","title":"func visible(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/width(_:)","title":"func width(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/textreplacement\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/swiftuikit\/textreplacement\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/swiftuikit\/textreplacement","title":"TextReplacement","type":"struct"},{"title":"Views\/CollectionView","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/collectionview\/init(rows:layout:scrolloffset:cell:supplementaryview:)","title":"init(rows: [CollectionViewRow<Section, Item>], layout: CollectionViewLayout, scrollOffset: Binding<CGPoint>?, cell: (IndexPath, Item) -> Cell, supplementaryView: (IndexPath) -> SupplementaryView)","type":"init"},{"path":"\/documentation\/swiftuikit\/collectionview\/init(rows:sectionlayoutprovider:scrolloffset:cell:supplementaryview:)","title":"init(rows: [CollectionViewRow<Section, Item>], sectionLayoutProvider: (Int, NSCollectionLayoutEnvironment) -> NSCollectionLayoutSection, scrollOffset: Binding<CGPoint>?, cell: (IndexPath, Item) -> Cell, supplementaryView: (IndexPath) -> SupplementaryView)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/collectionview\/rows","title":"let rows: [CollectionViewRow<Section, Item>]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/collectionview\/makecoordinator()","title":"func makeCoordinator() -> Coordinator","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/makeuiview(context:)","title":"func makeUIView(context: Context) -> UICollectionView","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/updateuiview(_:context:)","title":"func updateUIView(UICollectionView, context: Context)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/collectionview\/coordinator\/collectionview(_:canfocusitemat:)","title":"func collectionView(UICollectionView, canFocusItemAt: IndexPath) -> Bool","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/coordinator\/scrollviewdidscroll(_:)","title":"func scrollViewDidScroll(UIScrollView)","type":"method"}],"path":"\/documentation\/swiftuikit\/collectionview\/coordinator","title":"CollectionView.Coordinator","type":"class"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/collectionview\/body","title":"var body: Never","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/collectionview\/sizethatfits(_:uiview:context:)","title":"func sizeThatFits(ProposedViewSize, uiView: Self.UIViewType, context: Self.Context) -> CGSize?","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/collectionview\/dismantleuiview(_:coordinator:)","title":"static func dismantleUIView(Self.UIViewType, coordinator: Self.Coordinator)","type":"method"}],"path":"\/documentation\/swiftuikit\/collectionview\/uiviewrepresentable-implementations","title":"UIViewRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/collectionview\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/collectionview\/accessibility(activationpoint:)-6012p","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/collectionview\/accessibility(activationpoint:)-8sdkr","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/collectionview\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/collectionview\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/collectionview\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/collectionview\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/collectionview\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/collectionview\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/collectionview\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/collectionview\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/collectionview\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/accessibilityaction(named:_:)","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/accessibilityactivationpoint(_:)-4s8b5","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/accessibilityactivationpoint(_:)-5uvpv","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/accessibilitycustomcontent(_:_:importance:)-3h1ul","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/accessibilitycustomcontent(_:_:importance:)-4aifv","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/accessibilitycustomcontent(_:_:importance:)-78125","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/accessibilitycustomcontent(_:_:importance:)-7fh72","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/accessibilitycustomcontent(_:_:importance:)-807o7","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/accessibilitycustomcontent(_:_:importance:)-8m0wt","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/accessibilitycustomcontent(_:_:importance:)-9af4u","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/accessibilitycustomcontent(_:_:importance:)-dn7w","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/accessibilityhint(_:)-2igpl","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/accessibilityhint(_:)-4mmer","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/accessibilityhint(_:)-90ffb","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/accessibilityinputlabels(_:)-2vg7b","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/accessibilityinputlabels(_:)-3ben8","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/accessibilityinputlabels(_:)-44jc2","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/accessibilitylabel(_:)-60gb5","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/accessibilitylabel(_:)-6mfwv","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/accessibilitylabel(_:)-6nn0e","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/accessibilityrotor(_:entries:)-386np","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/accessibilityrotor(_:entries:)-5hcu1","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/accessibilityrotor(_:entries:)-8eetm","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/accessibilityrotor(_:entries:)-j9vu","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/accessibilityrotor(_:entries:entryid:entrylabel:)-1mmc1","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/accessibilityrotor(_:entries:entryid:entrylabel:)-4afcy","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/accessibilityrotor(_:entries:entryid:entrylabel:)-7gk6t","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/accessibilityrotor(_:entries:entryid:entrylabel:)-h24t","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/accessibilityrotor(_:entries:entrylabel:)-2p58o","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/accessibilityrotor(_:entries:entrylabel:)-88k2e","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/accessibilityrotor(_:entries:entrylabel:)-8mj4x","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/accessibilityrotor(_:entries:entrylabel:)-8owrg","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/accessibilityrotor(_:textranges:)-1qr8q","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/accessibilityrotor(_:textranges:)-467mo","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/accessibilityrotor(_:textranges:)-5vhje","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/accessibilityrotor(_:textranges:)-918wi","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/accessibilityvalue(_:)-2av9s","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/accessibilityvalue(_:)-4qlu0","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/accessibilityvalue(_:)-6upai","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/collectionview\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/collectionview\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/alert(_:)","title":"func alert(AlertContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/alert(_:ispresented:actions:)-25sh8","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/alert(_:ispresented:actions:)-5hii1","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/alert(_:ispresented:actions:)-87auu","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/alert(_:ispresented:actions:message:)-1rbz","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/alert(_:ispresented:actions:message:)-5ucu1","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/alert(_:ispresented:actions:message:)-clvb","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/alert(_:ispresented:presenting:actions:)-5wkhy","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/alert(_:ispresented:presenting:actions:)-6kfmw","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/alert(_:ispresented:presenting:actions:)-8m97m","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/alert(_:ispresented:presenting:actions:message:)-55pwf","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/alert(_:ispresented:presenting:actions:message:)-6e9cm","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/alert(_:ispresented:presenting:actions:message:)-94f1e","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/collectionview\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/collectionview\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/alignmentguide(_:computevalue:)-76goa","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/alignmentguide(_:computevalue:)-9umuj","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/collectionview\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/any()","title":"func any() -> AnyView","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/aspectratio(_:contentmode:)-54ngj","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/aspectratio(_:contentmode:)-6qy08","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/collectionview\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/autosave(_:debounceinterval:action:)","title":"func autosave<T>(Published<T>.Publisher, debounceInterval: RunLoop.SchedulerTimeType.Stride, action: () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/collectionview\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/background(_:in:fillstyle:)-27fos","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/background(_:in:fillstyle:)-2ci9t","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/background(in:fillstyle:)-4ajph","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/background(in:fillstyle:)-4fgnq","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/badge(_:)-1hd9g","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/badge(_:)-29jww","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/badge(_:)-743d6","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/badge(_:)-9maag","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/bindsafeareainsets(to:)","title":"func bindSafeAreaInsets(to: Binding<EdgeInsets>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/bindsize(to:)","title":"func bindSize(to: Binding<CGSize>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/border(_:width:cornerradius:)","title":"func border<Content>(Content, width: CGFloat, cornerRadius: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/buttonstyle(_:)-8miq7","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/buttonstyle(_:)-9nzdy","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/collectionview\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-1eg8c","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-1os2v","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-86zuh","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-1vgmk","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-53xuu","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-7jmu5","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-4o3l1","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-6zhx7","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-9afiw","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-2n64f","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-6nf30","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-hnex","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/collectionview\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/collectionview\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/cornerradius(_:)","title":"func cornerRadius(CornerRadiusStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/collectionview\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/disabledynamictype(sizecategory:)","title":"func disableDynamicType(sizeCategory: ContentSizeCategory) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/dynamictypesize(_:)-6sedr","title":"func dynamicTypeSize<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/dynamictypesize(_:)-9mu6y","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/collectionview\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/enabled(_:)","title":"func enabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-4ogtu","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-x0kw","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-98e97","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-ixcg","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/focusedobject(_:)-2hc0c","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/focusedobject(_:)-8q570","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/focusedsceneobject(_:)-2ffts","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/focusedsceneobject(_:)-5on66","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/focusedscenevalue(_:_:)-13jab","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/focusedscenevalue(_:_:)-3i5xy","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/focusedvalue(_:_:)-4t8vd","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/focusedvalue(_:_:)-7mbwd","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/font(_:)-1dxy3","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/font(_:)-5y2o","title":"func font(FontStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/font(identifier:style:weight:)","title":"func font(identifier: FontIdentifier, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/font(name:style:weight:)","title":"func font(name: String, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/frame(_:)","title":"func frame(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/frame(square:)","title":"func frame(square: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/fullscreencover(_:)","title":"func fullScreenCover(FullScreenCoverContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/height(_:)","title":"func height(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/help(_:)-4jqn9","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/help(_:)-4k1co","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/help(_:)-5za3f","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/hidden(if:)","title":"func hidden(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/hidekeyboard()","title":"func hideKeyboard()","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/keyboardshortcut(_:)-1btls","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/keyboardshortcut(_:)-3lecw","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/linelimit(_:)","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/listitemtint(_:)-6qigs","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/listitemtint(_:)-ynty","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/collectionview\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/collectionview\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/collectionview\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/collectionview\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/collectionview\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/collectionview\/navigationbartitle(_:)-1faut","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/collectionview\/navigationbartitle(_:)-7synz","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/collectionview\/navigationbartitle(_:)-i3rr","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/collectionview\/navigationbartitle(_:displaymode:)-69uhl","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/collectionview\/navigationbartitle(_:displaymode:)-7zhb0","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/collectionview\/navigationbartitle(_:displaymode:)-bgxg","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/navigationdocument(_:)-4d1hf","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/navigationdocument(_:)-90ash","title":"func navigationDocument<D>(D) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/navigationdocument(_:preview:)-2j3yj","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/navigationdocument(_:preview:)-58vqg","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/navigationdocument(_:preview:)-6v8g5","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/navigationdocument(_:preview:)-976kd","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/navigationtitle(_:)-2nd01","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/navigationtitle(_:)-4937s","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/navigationtitle(_:)-4ugfc","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/navigationtitle(_:)-9e5hs","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/navigationtitle(_:)-m7l4","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/collectionview\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/collectionview\/ondrop(of:delegate:)-3asa6","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/ondrop(of:delegate:)-bev","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/collectionview\/ondrop(of:istargeted:perform:)-2ejfn","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/ondrop(of:istargeted:perform:)-4ejwz","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/ondrop(of:istargeted:perform:)-7fg4r","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/collectionview\/ondrop(of:istargeted:perform:)-9a67t","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/collectionview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/collectionview\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/onswipegesture(maximumtime:minimumdistance:maximumdistance:gesturetimer:up:left:right:down:)","title":"func onSwipeGesture(maximumTime: TimeInterval, minimumDistance: CGFloat, maximumDistance: CGFloat, gestureTimer: GestureTimer, up: () -> Void, left: () -> Void, right: () -> Void, down: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/collectionview\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/padding(_:)-6vxth","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/padding(_:)-85iay","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/preferspersistentsystemoverlayshidden()","title":"func prefersPersistentSystemOverlaysHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/presentationdetents(undimmed:largestundimmed:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/presentationdetents(undimmed:largestundimmed:selection:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/renameaction(_:)-37ad5","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/renameaction(_:)-89w8k","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/safeareainset(edge:alignment:spacing:content:)-4pnz8","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/safeareainset(edge:alignment:spacing:content:)-6k5u1","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/scaleeffect(_:anchor:)-1t9kw","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/scaleeffect(_:anchor:)-6ntor","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/searchcompletion(_:)-64a2x","title":"func searchCompletion<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/searchcompletion(_:)-8nqyb","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/searchable(if:text:placement:prompt:)","title":"func searchable(if: Bool, text: Binding<String>, placement: SearchFieldPlacement, prompt: String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/searchable(text:placement:prompt:)-1pxki","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/searchable(text:placement:prompt:)-3xayp","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/searchable(text:placement:prompt:)-8gpiq","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/collectionview\/searchable(text:placement:prompt:suggestions:)-4zsgf","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/collectionview\/searchable(text:placement:prompt:suggestions:)-78huw","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/collectionview\/searchable(text:placement:prompt:suggestions:)-grcv","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/searchable(text:tokens:placement:prompt:token:)-1n039","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/searchable(text:tokens:placement:prompt:token:)-49hc5","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/searchable(text:tokens:placement:prompt:token:)-815x8","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-1abjp","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-5sn6w","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-9lrn1","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/shadow(_:)","title":"func shadow(ViewShadowStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/sheet(_:)","title":"func sheet(SheetContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/collectionview\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/tint(_:)-7pyvg","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/tint(_:)-8hj1o","title":"func tint<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/toolbar(content:)-30jkt","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/toolbar(content:)-3p7z6","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/toolbarbackground(_:for:)-4j0gu","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/toolbarbackground(_:for:)-93xsd","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/visible(if:)","title":"func visible(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/width(_:)","title":"func width(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionview\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/swiftuikit\/collectionview\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/swiftuikit\/collectionview","title":"CollectionView","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/collectionviewlayout\/shelves(itemsize:headerheight:sectioninsets:itemspacing:)","title":"static func shelves(itemSize: CGSize, headerHeight: CGFloat, sectionInsets: NSDirectionalEdgeInsets, itemSpacing: CGFloat) -> CollectionViewLayout","type":"method"},{"path":"\/documentation\/swiftuikit\/collectionviewlayout\/verticalgrid(itemsperrow:itemheight:iteminsets:)","title":"static func verticalGrid(itemsPerRow: Int, itemHeight: CGFloat, itemInsets: NSDirectionalEdgeInsets) -> CollectionViewLayout","type":"method"}],"path":"\/documentation\/swiftuikit\/collectionviewlayout","title":"CollectionViewLayout","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/collectionviewrow\/init(section:items:)","title":"init(section: Section, items: [Item])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/collectionviewrow\/items","title":"let items: [Item]","type":"property"},{"path":"\/documentation\/swiftuikit\/collectionviewrow\/section","title":"let section: Section","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/collectionviewrow\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftuikit\/collectionviewrow\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftuikit\/collectionviewrow","title":"CollectionViewRow","type":"struct"},{"title":"Views\/Flip","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/flipview\/init(front:back:isflipped:flipduration:tapdirection:swipedirections:)","title":"init(front: FrontView, back: BackView, isFlipped: Binding<Bool>, flipDuration: Double, tapDirection: FlipDirection, swipeDirections: [FlipDirection])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/flipview\/body","title":"var body: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/flipview\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/flipview\/accessibility(activationpoint:)-35lhm","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/flipview\/accessibility(activationpoint:)-9gg6j","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/flipview\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/flipview\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/flipview\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/flipview\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/flipview\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/flipview\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/flipview\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/flipview\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/flipview\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/accessibilityaction(named:_:)","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/accessibilityactivationpoint(_:)-9gd8y","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/accessibilityactivationpoint(_:)-je5k","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/accessibilitycustomcontent(_:_:importance:)-1wdvk","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/accessibilitycustomcontent(_:_:importance:)-20fww","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/accessibilitycustomcontent(_:_:importance:)-3hn40","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/accessibilitycustomcontent(_:_:importance:)-3mfe0","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/accessibilitycustomcontent(_:_:importance:)-6y0dc","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/accessibilitycustomcontent(_:_:importance:)-6ytk7","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/accessibilitycustomcontent(_:_:importance:)-7ughp","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/accessibilitycustomcontent(_:_:importance:)-zi5c","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/accessibilityhint(_:)-13pks","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/accessibilityhint(_:)-5byds","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/accessibilityhint(_:)-5j7vo","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/accessibilityinputlabels(_:)-4rti9","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/accessibilityinputlabels(_:)-8aefc","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/accessibilityinputlabels(_:)-95yrz","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/accessibilitylabel(_:)-4x0jz","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/accessibilitylabel(_:)-6uopy","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/accessibilitylabel(_:)-7j4pe","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/accessibilityrotor(_:entries:)-1g8fg","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/accessibilityrotor(_:entries:)-1whmr","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/accessibilityrotor(_:entries:)-45kyf","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/accessibilityrotor(_:entries:)-5ytj3","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/accessibilityrotor(_:entries:entryid:entrylabel:)-3klwx","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/accessibilityrotor(_:entries:entryid:entrylabel:)-3o7f6","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/accessibilityrotor(_:entries:entryid:entrylabel:)-3ve2z","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/accessibilityrotor(_:entries:entryid:entrylabel:)-80p18","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/accessibilityrotor(_:entries:entrylabel:)-1e5pl","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/accessibilityrotor(_:entries:entrylabel:)-2pzc5","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/accessibilityrotor(_:entries:entrylabel:)-63sqw","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/accessibilityrotor(_:entries:entrylabel:)-9cb0u","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/accessibilityrotor(_:textranges:)-5a89q","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/accessibilityrotor(_:textranges:)-7kjqs","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/accessibilityrotor(_:textranges:)-809hz","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/accessibilityrotor(_:textranges:)-82994","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/accessibilityvalue(_:)-3th0t","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/accessibilityvalue(_:)-4fzeb","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/accessibilityvalue(_:)-867u1","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/flipview\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/flipview\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/alert(_:)","title":"func alert(AlertContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/alert(_:ispresented:actions:)-1dwgx","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/alert(_:ispresented:actions:)-2ajoq","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/alert(_:ispresented:actions:)-3msx3","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/alert(_:ispresented:actions:message:)-10qv7","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/alert(_:ispresented:actions:message:)-57z7r","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/alert(_:ispresented:actions:message:)-74nyd","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/alert(_:ispresented:presenting:actions:)-25jod","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/alert(_:ispresented:presenting:actions:)-26k03","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/alert(_:ispresented:presenting:actions:)-5wh5z","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/alert(_:ispresented:presenting:actions:message:)-17r6s","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/alert(_:ispresented:presenting:actions:message:)-3n4sl","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/alert(_:ispresented:presenting:actions:message:)-4kuk1","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/flipview\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/flipview\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/alignmentguide(_:computevalue:)-8wf5h","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/alignmentguide(_:computevalue:)-9kvk3","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/flipview\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/any()","title":"func any() -> AnyView","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/aspectratio(_:contentmode:)-420ra","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/aspectratio(_:contentmode:)-5txhh","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/flipview\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/autosave(_:debounceinterval:action:)","title":"func autosave<T>(Published<T>.Publisher, debounceInterval: RunLoop.SchedulerTimeType.Stride, action: () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/flipview\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/background(_:in:fillstyle:)-592zi","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/background(_:in:fillstyle:)-7veuu","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/background(in:fillstyle:)-7q4z1","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/background(in:fillstyle:)-9qk33","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/badge(_:)-3451j","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/badge(_:)-36av0","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/badge(_:)-5dkn6","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/badge(_:)-9xhb","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/bindsafeareainsets(to:)","title":"func bindSafeAreaInsets(to: Binding<EdgeInsets>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/bindsize(to:)","title":"func bindSize(to: Binding<CGSize>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/border(_:width:cornerradius:)","title":"func border<Content>(Content, width: CGFloat, cornerRadius: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/buttonstyle(_:)-3s8dr","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/buttonstyle(_:)-3yfy7","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/flipview\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-5dkao","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-5xyww","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-6x8fm","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-1ja1x","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-4kiy6","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-8fpbf","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-1qzou","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-4tv2a","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-ojgf","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-2oxc4","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-3o93y","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-9a5hj","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/flipview\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/flipview\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/cornerradius(_:)","title":"func cornerRadius(CornerRadiusStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/flipview\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/disabledynamictype(sizecategory:)","title":"func disableDynamicType(sizeCategory: ContentSizeCategory) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/dynamictypesize(_:)-2qwpw","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/dynamictypesize(_:)-5qzks","title":"func dynamicTypeSize<T>(T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/flipview\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/enabled(_:)","title":"func enabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-9sz1g","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-f48d","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-1qrao","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-47t3j","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/focusedobject(_:)-18x1v","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/focusedobject(_:)-3arrx","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/focusedsceneobject(_:)-748xu","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/focusedsceneobject(_:)-90y7c","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/focusedscenevalue(_:_:)-6ccny","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/focusedscenevalue(_:_:)-9jn7t","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/focusedvalue(_:_:)-3qc8","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/focusedvalue(_:_:)-4i0si","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/font(_:)-3hzgr","title":"func font(FontStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/font(_:)-8ngw3","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/font(identifier:style:weight:)","title":"func font(identifier: FontIdentifier, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/font(name:style:weight:)","title":"func font(name: String, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/frame(_:)","title":"func frame(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/frame(square:)","title":"func frame(square: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/fullscreencover(_:)","title":"func fullScreenCover(FullScreenCoverContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/height(_:)","title":"func height(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/help(_:)-2jqca","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/help(_:)-60pim","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/help(_:)-8jqen","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/hidden(if:)","title":"func hidden(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/hidekeyboard()","title":"func hideKeyboard()","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/keyboardshortcut(_:)-3ai3p","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/keyboardshortcut(_:)-8k2vi","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/linelimit(_:)","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/listitemtint(_:)-16nea","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/listitemtint(_:)-el0d","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/flipview\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/flipview\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/flipview\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/flipview\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/flipview\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/flipview\/navigationbartitle(_:)-4z37","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/flipview\/navigationbartitle(_:)-56057","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/flipview\/navigationbartitle(_:)-6yeqq","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/flipview\/navigationbartitle(_:displaymode:)-53fny","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/flipview\/navigationbartitle(_:displaymode:)-5dwm6","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/flipview\/navigationbartitle(_:displaymode:)-76jfz","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/navigationdocument(_:)-5l8er","title":"func navigationDocument<D>(D) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/navigationdocument(_:)-7x4qg","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/navigationdocument(_:preview:)-2mjuo","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/navigationdocument(_:preview:)-4iih9","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/navigationdocument(_:preview:)-7crbh","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/navigationdocument(_:preview:)-9hijd","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/navigationtitle(_:)-3x767","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/navigationtitle(_:)-5fsos","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/navigationtitle(_:)-75yek","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/navigationtitle(_:)-8smv0","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/navigationtitle(_:)-9yy0w","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/flipview\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/ondrop(of:delegate:)-64or4","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/flipview\/ondrop(of:delegate:)-66l74","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/ondrop(of:istargeted:perform:)-13ipy","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/flipview\/ondrop(of:istargeted:perform:)-1pdaj","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/flipview\/ondrop(of:istargeted:perform:)-59v2n","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/ondrop(of:istargeted:perform:)-7y03o","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/flipview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/flipview\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/onswipegesture(maximumtime:minimumdistance:maximumdistance:gesturetimer:up:left:right:down:)","title":"func onSwipeGesture(maximumTime: TimeInterval, minimumDistance: CGFloat, maximumDistance: CGFloat, gestureTimer: GestureTimer, up: () -> Void, left: () -> Void, right: () -> Void, down: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/flipview\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/padding(_:)-84az5","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/padding(_:)-9ogke","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/preferspersistentsystemoverlayshidden()","title":"func prefersPersistentSystemOverlaysHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/presentationdetents(undimmed:largestundimmed:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/presentationdetents(undimmed:largestundimmed:selection:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/renameaction(_:)-3rkp3","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/renameaction(_:)-56v7n","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/safeareainset(edge:alignment:spacing:content:)-2b7ah","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/safeareainset(edge:alignment:spacing:content:)-4az8g","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/scaleeffect(_:anchor:)-3p268","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/scaleeffect(_:anchor:)-9102p","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/searchcompletion(_:)-35vh9","title":"func searchCompletion<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/searchcompletion(_:)-40bib","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/searchable(if:text:placement:prompt:)","title":"func searchable(if: Bool, text: Binding<String>, placement: SearchFieldPlacement, prompt: String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/searchable(text:placement:prompt:)-11qnd","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/searchable(text:placement:prompt:)-4gg65","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/searchable(text:placement:prompt:)-yfy1","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/flipview\/searchable(text:placement:prompt:suggestions:)-21pkb","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/flipview\/searchable(text:placement:prompt:suggestions:)-26ykn","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/flipview\/searchable(text:placement:prompt:suggestions:)-wr2k","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/searchable(text:tokens:placement:prompt:token:)-5231r","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/searchable(text:tokens:placement:prompt:token:)-6nim0","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/searchable(text:tokens:placement:prompt:token:)-8opro","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-5f2b2","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-6x6k8","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-7orzl","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/shadow(_:)","title":"func shadow(ViewShadowStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/sheet(_:)","title":"func sheet(SheetContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/flipview\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/tint(_:)-6xya1","title":"func tint<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/tint(_:)-sz1n","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/toolbar(content:)-4rws9","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/toolbar(content:)-ycjw","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/toolbarbackground(_:for:)-1faqa","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/toolbarbackground(_:for:)-5eyqs","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/visible(if:)","title":"func visible(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/width(_:)","title":"func width(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/flipview\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/swiftuikit\/flipview\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/swiftuikit\/flipview","title":"FlipView","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/flipdirection\/down","title":"case down","type":"case"},{"path":"\/documentation\/swiftuikit\/flipdirection\/left","title":"case left","type":"case"},{"path":"\/documentation\/swiftuikit\/flipdirection\/right","title":"case right","type":"case"},{"path":"\/documentation\/swiftuikit\/flipdirection\/up","title":"case up","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/flipdirection\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftuikit\/flipdirection\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftuikit\/flipdirection","title":"FlipDirection","type":"enum"},{"title":"Views\/Form","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/init(icon:title:style:action:)","title":"init(icon: Image, title: String, style: FormActionButtonStyle, action: () -> Void)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/body","title":"var body: some View","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/dimmed(_:)","title":"func dimmed(Bool) -> some View","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formactionbutton\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibility(activationpoint:)-3676h","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibility(activationpoint:)-7i5k3","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibilityaction(named:_:)","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibilityactivationpoint(_:)-61gvl","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibilityactivationpoint(_:)-9gthh","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibilitycustomcontent(_:_:importance:)-3bqm5","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibilitycustomcontent(_:_:importance:)-5ryrl","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibilitycustomcontent(_:_:importance:)-5vsw7","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibilitycustomcontent(_:_:importance:)-6vc3a","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibilitycustomcontent(_:_:importance:)-6w3vb","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibilitycustomcontent(_:_:importance:)-76ktw","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibilitycustomcontent(_:_:importance:)-7c78","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibilitycustomcontent(_:_:importance:)-9rc7x","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibilityhint(_:)-3qw15","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibilityhint(_:)-6c4qi","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibilityhint(_:)-9qyed","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibilityinputlabels(_:)-75728","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibilityinputlabels(_:)-9cb38","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibilityinputlabels(_:)-9jaaz","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibilitylabel(_:)-3d4a7","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibilitylabel(_:)-3iicy","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibilitylabel(_:)-90j6x","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibilityrotor(_:entries:)-515pz","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibilityrotor(_:entries:)-6xsgz","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibilityrotor(_:entries:)-8xg5u","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibilityrotor(_:entries:)-9xd7r","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibilityrotor(_:entries:entryid:entrylabel:)-24tu5","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibilityrotor(_:entries:entryid:entrylabel:)-3eilg","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibilityrotor(_:entries:entryid:entrylabel:)-4xn6o","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibilityrotor(_:entries:entryid:entrylabel:)-7yr3t","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibilityrotor(_:entries:entrylabel:)-15bcx","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibilityrotor(_:entries:entrylabel:)-2dkt2","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibilityrotor(_:entries:entrylabel:)-7vohz","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibilityrotor(_:entries:entrylabel:)-9bnkf","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibilityrotor(_:textranges:)-1gd11","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibilityrotor(_:textranges:)-4wdl0","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibilityrotor(_:textranges:)-5e8ll","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibilityrotor(_:textranges:)-80noe","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibilityvalue(_:)-12srq","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibilityvalue(_:)-1uiuc","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/accessibilityvalue(_:)-7vup7","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formactionbutton\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formactionbutton\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/alert(_:)","title":"func alert(AlertContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/alert(_:ispresented:actions:)-138xq","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/alert(_:ispresented:actions:)-2brhv","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/alert(_:ispresented:actions:)-8v1tb","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/alert(_:ispresented:actions:message:)-2vt79","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/alert(_:ispresented:actions:message:)-3r9qy","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/alert(_:ispresented:actions:message:)-6va3w","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/alert(_:ispresented:presenting:actions:)-25six","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/alert(_:ispresented:presenting:actions:)-28j3f","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/alert(_:ispresented:presenting:actions:)-67xpe","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/alert(_:ispresented:presenting:actions:message:)-4vdzs","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/alert(_:ispresented:presenting:actions:message:)-6di2e","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/alert(_:ispresented:presenting:actions:message:)-6i17q","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formactionbutton\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formactionbutton\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/alignmentguide(_:computevalue:)-9svlk","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/alignmentguide(_:computevalue:)-9x9n7","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formactionbutton\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/any()","title":"func any() -> AnyView","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/aspectratio(_:contentmode:)-6frbb","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/aspectratio(_:contentmode:)-8y4fz","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formactionbutton\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/autosave(_:debounceinterval:action:)","title":"func autosave<T>(Published<T>.Publisher, debounceInterval: RunLoop.SchedulerTimeType.Stride, action: () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formactionbutton\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/background(_:in:fillstyle:)-3vjsd","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/background(_:in:fillstyle:)-u3x","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/background(in:fillstyle:)-20rqq","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/background(in:fillstyle:)-2l0dj","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/badge(_:)-2s1gv","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/badge(_:)-626jd","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/badge(_:)-8z7t2","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/badge(_:)-99n7d","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/bindsafeareainsets(to:)","title":"func bindSafeAreaInsets(to: Binding<EdgeInsets>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/bindsize(to:)","title":"func bindSize(to: Binding<CGSize>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/border(_:width:cornerradius:)","title":"func border<Content>(Content, width: CGFloat, cornerRadius: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/buttonstyle(_:)-7lqae","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/buttonstyle(_:)-wpem","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formactionbutton\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/confirmationdialog(_:ispresented:titlevisibility:actions:)-2y07r","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/confirmationdialog(_:ispresented:titlevisibility:actions:)-3fm99","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/confirmationdialog(_:ispresented:titlevisibility:actions:)-5c14w","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-4ieja","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-6z4ia","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-qydi","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-5edw6","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-5s9b6","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-9gcv1","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-66yjw","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-6gahe","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-78fxr","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formactionbutton\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formactionbutton\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/cornerradius(_:)","title":"func cornerRadius(CornerRadiusStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formactionbutton\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/disabledynamictype(sizecategory:)","title":"func disableDynamicType(sizeCategory: ContentSizeCategory) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/dynamictypesize(_:)-14y51","title":"func dynamicTypeSize<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/dynamictypesize(_:)-4pczg","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formactionbutton\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/enabled(_:)","title":"func enabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-18cb1","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-ojhw","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/fileexporter(ispresented:documents:contenttype:oncompletion:)-32e57","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/fileexporter(ispresented:documents:contenttype:oncompletion:)-89s95","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/focusedobject(_:)-62xrx","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/focusedobject(_:)-7x9vz","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/focusedsceneobject(_:)-e4cs","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/focusedsceneobject(_:)-lmag","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/focusedscenevalue(_:_:)-1j8c2","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/focusedscenevalue(_:_:)-5tcm2","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/focusedvalue(_:_:)-3cxds","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/focusedvalue(_:_:)-84ri2","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/font(_:)-12ilm","title":"func font(FontStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/font(_:)-5zk7y","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/font(identifier:style:weight:)","title":"func font(identifier: FontIdentifier, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/font(name:style:weight:)","title":"func font(name: String, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/frame(_:)","title":"func frame(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/frame(square:)","title":"func frame(square: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/fullscreencover(_:)","title":"func fullScreenCover(FullScreenCoverContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/height(_:)","title":"func height(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/help(_:)-4bak7","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/help(_:)-4vo6z","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/help(_:)-7fzn7","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/hidden(if:)","title":"func hidden(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/hidekeyboard()","title":"func hideKeyboard()","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/keyboardshortcut(_:)-1ugqc","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/keyboardshortcut(_:)-2drdb","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/linelimit(_:)","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/listitemtint(_:)-6lq6s","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/listitemtint(_:)-8bhki","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formactionbutton\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formactionbutton\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formactionbutton\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formactionbutton\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formactionbutton\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formactionbutton\/navigationbartitle(_:)-5uqnv","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formactionbutton\/navigationbartitle(_:)-6w8es","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formactionbutton\/navigationbartitle(_:)-7y09u","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formactionbutton\/navigationbartitle(_:displaymode:)-488d3","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formactionbutton\/navigationbartitle(_:displaymode:)-6ohr8","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formactionbutton\/navigationbartitle(_:displaymode:)-jsw3","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/navigationdocument(_:)-1k4zo","title":"func navigationDocument<D>(D) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/navigationdocument(_:)-1s652","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/navigationdocument(_:preview:)-1310q","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/navigationdocument(_:preview:)-2tdzf","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/navigationdocument(_:preview:)-91u14","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/navigationdocument(_:preview:)-9wbd2","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/navigationtitle(_:)-23dbn","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/navigationtitle(_:)-5gclr","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/navigationtitle(_:)-6jlin","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/navigationtitle(_:)-8jqe0","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/navigationtitle(_:)-9s7qj","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formactionbutton\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/ondrop(of:delegate:)-2t99s","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formactionbutton\/ondrop(of:delegate:)-5bsmj","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/ondrop(of:istargeted:perform:)-2mq83","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formactionbutton\/ondrop(of:istargeted:perform:)-2unph","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/ondrop(of:istargeted:perform:)-4tdyw","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formactionbutton\/ondrop(of:istargeted:perform:)-8m2lz","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formactionbutton\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formactionbutton\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/onswipegesture(maximumtime:minimumdistance:maximumdistance:gesturetimer:up:left:right:down:)","title":"func onSwipeGesture(maximumTime: TimeInterval, minimumDistance: CGFloat, maximumDistance: CGFloat, gestureTimer: GestureTimer, up: () -> Void, left: () -> Void, right: () -> Void, down: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formactionbutton\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/padding(_:)-3tgnz","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/padding(_:)-6ymwb","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/preferspersistentsystemoverlayshidden()","title":"func prefersPersistentSystemOverlaysHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/presentationdetents(undimmed:largestundimmed:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/presentationdetents(undimmed:largestundimmed:selection:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/renameaction(_:)-33q23","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/renameaction(_:)-3kf63","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/safeareainset(edge:alignment:spacing:content:)-25zeb","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/safeareainset(edge:alignment:spacing:content:)-6ksqq","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/scaleeffect(_:anchor:)-5z9mm","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/scaleeffect(_:anchor:)-8w5hc","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/searchcompletion(_:)-5gb56","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/searchcompletion(_:)-fs2h","title":"func searchCompletion<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/searchable(if:text:placement:prompt:)","title":"func searchable(if: Bool, text: Binding<String>, placement: SearchFieldPlacement, prompt: String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/searchable(text:placement:prompt:)-3xhci","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/searchable(text:placement:prompt:)-43ng8","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/searchable(text:placement:prompt:)-7t73q","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formactionbutton\/searchable(text:placement:prompt:suggestions:)-4zfx7","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formactionbutton\/searchable(text:placement:prompt:suggestions:)-7joq6","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formactionbutton\/searchable(text:placement:prompt:suggestions:)-9vrz6","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/searchable(text:tokens:placement:prompt:token:)-496e0","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/searchable(text:tokens:placement:prompt:token:)-7fnd8","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/searchable(text:tokens:placement:prompt:token:)-8xegw","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-32rv0","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-4nqfe","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-8dxzj","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/shadow(_:)","title":"func shadow(ViewShadowStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/sheet(_:)","title":"func sheet(SheetContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formactionbutton\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/tint(_:)-4kh5l","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/tint(_:)-8rrmb","title":"func tint<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/toolbar(content:)-2pb5z","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/toolbar(content:)-9oi6a","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/toolbarbackground(_:for:)-5ki59","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/toolbarbackground(_:for:)-9cmo7","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/visible(if:)","title":"func visible(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/width(_:)","title":"func width(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formactionbutton\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/swiftuikit\/formactionbutton\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/swiftuikit\/formactionbutton","title":"FormActionButton","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/formactionbuttonstyle\/init(iconheight:horizontalpadding:verticalpadding:verticalspacing:backgroundcolor:foregroundcolor:cornerradius:dimmedopacity:disabledopacity:pressedopacity:shadowstyle:)","title":"init(iconHeight: Double, horizontalPadding: Double, verticalPadding: Double, verticalSpacing: Double, backgroundColor: Color?, foregroundColor: Color, cornerRadius: Double, dimmedOpacity: Double, disabledOpacity: Double, pressedOpacity: Double, shadowStyle: ViewShadowStyle)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/formactionbuttonstyle\/backgroundcolor","title":"var backgroundColor: Color?","type":"property"},{"path":"\/documentation\/swiftuikit\/formactionbuttonstyle\/cornerradius","title":"var cornerRadius: Double","type":"property"},{"path":"\/documentation\/swiftuikit\/formactionbuttonstyle\/dimmedopacity","title":"var dimmedOpacity: Double","type":"property"},{"path":"\/documentation\/swiftuikit\/formactionbuttonstyle\/disabledopacity","title":"var disabledOpacity: Double","type":"property"},{"path":"\/documentation\/swiftuikit\/formactionbuttonstyle\/foregroundcolor","title":"var foregroundColor: Color?","type":"property"},{"path":"\/documentation\/swiftuikit\/formactionbuttonstyle\/horizontalpadding","title":"var horizontalPadding: Double","type":"property"},{"path":"\/documentation\/swiftuikit\/formactionbuttonstyle\/iconheight","title":"var iconHeight: Double","type":"property"},{"path":"\/documentation\/swiftuikit\/formactionbuttonstyle\/pressedopacity","title":"var pressedOpacity: Double","type":"property"},{"path":"\/documentation\/swiftuikit\/formactionbuttonstyle\/shadowstyle","title":"var shadowStyle: ViewShadowStyle","type":"property"},{"path":"\/documentation\/swiftuikit\/formactionbuttonstyle\/verticalpadding","title":"var verticalPadding: Double","type":"property"},{"path":"\/documentation\/swiftuikit\/formactionbuttonstyle\/verticalspacing","title":"var verticalSpacing: Double","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/formactionbuttonstyle\/makebody(configuration:)","title":"func makeBody(configuration: Configuration) -> some View","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/formactionbuttonstyle\/standard","title":"static var standard: FormActionButtonStyle","type":"property"},{"path":"\/documentation\/swiftuikit\/formactionbuttonstyle\/standarddarkcolorschemebackground","title":"static var standardDarkColorSchemeBackground: Color","type":"property"},{"path":"\/documentation\/swiftuikit\/formactionbuttonstyle\/standardlightcolorschemebackground","title":"static var standardLightColorSchemeBackground: Color","type":"property"},{"path":"\/documentation\/swiftuikit\/formactionbuttonstyle\/swedish","title":"static var swedish: FormActionButtonStyle","type":"property"}],"path":"\/documentation\/swiftuikit\/formactionbuttonstyle","title":"FormActionButtonStyle","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/formtext\/init(title:text:hideifempty:)","title":"init(title: String, text: String, hideIfEmpty: Bool)","type":"init"},{"path":"\/documentation\/swiftuikit\/formtext\/init(title:text:hideifempty:trailingview:)","title":"init(title: String, text: String, hideIfEmpty: Bool, trailingView: TrailingViewBuilder)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/formtext\/body","title":"var body: some View","type":"property"},{"path":"\/documentation\/swiftuikit\/formtext\/text","title":"let text: String","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/formtext\/trailingviewbuilder","title":"FormText.TrailingViewBuilder","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtext\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtext\/accessibility(activationpoint:)-4zqg9","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtext\/accessibility(activationpoint:)-v4wa","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtext\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtext\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtext\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtext\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtext\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtext\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtext\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtext\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtext\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/accessibilityaction(named:_:)","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/accessibilityactivationpoint(_:)-6ifsr","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/accessibilityactivationpoint(_:)-82zv1","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/accessibilitycustomcontent(_:_:importance:)-2helr","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/accessibilitycustomcontent(_:_:importance:)-2ra76","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/accessibilitycustomcontent(_:_:importance:)-2w9yo","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/accessibilitycustomcontent(_:_:importance:)-3o1f6","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/accessibilitycustomcontent(_:_:importance:)-5oadw","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/accessibilitycustomcontent(_:_:importance:)-7imcj","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/accessibilitycustomcontent(_:_:importance:)-8009y","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/accessibilitycustomcontent(_:_:importance:)-8y0qk","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/accessibilityhint(_:)-47g33","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/accessibilityhint(_:)-7q9vj","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/accessibilityhint(_:)-997nd","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/accessibilityinputlabels(_:)-54wxu","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/accessibilityinputlabels(_:)-5ye2f","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/accessibilityinputlabels(_:)-642cu","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/accessibilitylabel(_:)-5banf","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/accessibilitylabel(_:)-86xd5","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/accessibilitylabel(_:)-8x47h","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/accessibilityrotor(_:entries:)-14klj","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/accessibilityrotor(_:entries:)-4i6if","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/accessibilityrotor(_:entries:)-77vnp","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/accessibilityrotor(_:entries:)-8gwc9","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/accessibilityrotor(_:entries:entryid:entrylabel:)-4nbx2","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/accessibilityrotor(_:entries:entryid:entrylabel:)-6occa","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/accessibilityrotor(_:entries:entryid:entrylabel:)-7e76b","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/accessibilityrotor(_:entries:entryid:entrylabel:)-8rta9","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/accessibilityrotor(_:entries:entrylabel:)-21i1v","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/accessibilityrotor(_:entries:entrylabel:)-2ebj2","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/accessibilityrotor(_:entries:entrylabel:)-4vg54","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/accessibilityrotor(_:entries:entrylabel:)-9qktk","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/accessibilityrotor(_:textranges:)-29nv1","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/accessibilityrotor(_:textranges:)-2x3co","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/accessibilityrotor(_:textranges:)-6oijo","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/accessibilityrotor(_:textranges:)-9top","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/accessibilityvalue(_:)-1lv8c","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/accessibilityvalue(_:)-3dpj8","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/accessibilityvalue(_:)-6x7ni","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtext\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtext\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/alert(_:)","title":"func alert(AlertContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/alert(_:ispresented:actions:)-1mhpd","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/alert(_:ispresented:actions:)-1zlpk","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/alert(_:ispresented:actions:)-6bo9j","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/alert(_:ispresented:actions:message:)-193mn","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/alert(_:ispresented:actions:message:)-89zn9","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/alert(_:ispresented:actions:message:)-9qxx4","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/alert(_:ispresented:presenting:actions:)-3tw9x","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/alert(_:ispresented:presenting:actions:)-5u7g7","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/alert(_:ispresented:presenting:actions:)-8pu8n","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/alert(_:ispresented:presenting:actions:message:)-5yu26","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/alert(_:ispresented:presenting:actions:message:)-6kgfs","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/alert(_:ispresented:presenting:actions:message:)-6p587","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtext\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtext\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/alignmentguide(_:computevalue:)-3n44z","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/alignmentguide(_:computevalue:)-zkaa","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtext\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/any()","title":"func any() -> AnyView","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/aspectratio(_:contentmode:)-3s07t","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/aspectratio(_:contentmode:)-5w53l","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtext\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/autosave(_:debounceinterval:action:)","title":"func autosave<T>(Published<T>.Publisher, debounceInterval: RunLoop.SchedulerTimeType.Stride, action: () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtext\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/background(_:in:fillstyle:)-1d3wr","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/background(_:in:fillstyle:)-7nuae","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/background(in:fillstyle:)-2d8y7","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/background(in:fillstyle:)-6744w","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/badge(_:)-2y2jf","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/badge(_:)-7mziy","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/badge(_:)-7r13i","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/badge(_:)-9nya2","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/bindsafeareainsets(to:)","title":"func bindSafeAreaInsets(to: Binding<EdgeInsets>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/bindsize(to:)","title":"func bindSize(to: Binding<CGSize>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/border(_:width:cornerradius:)","title":"func border<Content>(Content, width: CGFloat, cornerRadius: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/buttonstyle(_:)-2xeu8","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/buttonstyle(_:)-8b2n6","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtext\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/confirmationdialog(_:ispresented:titlevisibility:actions:)-1ak9u","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/confirmationdialog(_:ispresented:titlevisibility:actions:)-23lhu","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/confirmationdialog(_:ispresented:titlevisibility:actions:)-5mef0","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-3deaq","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-3zk54","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-5lop6","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-4mr4t","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-7e5sc","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-95r4k","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-51vn5","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-66u0c","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-9iqx7","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtext\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtext\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/cornerradius(_:)","title":"func cornerRadius(CornerRadiusStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtext\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/disabledynamictype(sizecategory:)","title":"func disableDynamicType(sizeCategory: ContentSizeCategory) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/dynamictypesize(_:)-3bbvr","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/dynamictypesize(_:)-yhax","title":"func dynamicTypeSize<T>(T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtext\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/enabled(_:)","title":"func enabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-5elgg","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-93me2","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/fileexporter(ispresented:documents:contenttype:oncompletion:)-5blue","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/fileexporter(ispresented:documents:contenttype:oncompletion:)-6nojx","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/focusedobject(_:)-3o5xl","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/focusedobject(_:)-7hruf","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/focusedsceneobject(_:)-7us5y","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/focusedsceneobject(_:)-8padf","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/focusedscenevalue(_:_:)-26bsd","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/focusedscenevalue(_:_:)-7dim2","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/focusedvalue(_:_:)-1i0ey","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/focusedvalue(_:_:)-472rk","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/font(_:)-24m38","title":"func font(FontStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/font(_:)-8m24o","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/font(identifier:style:weight:)","title":"func font(identifier: FontIdentifier, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/font(name:style:weight:)","title":"func font(name: String, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/frame(_:)","title":"func frame(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/frame(square:)","title":"func frame(square: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/fullscreencover(_:)","title":"func fullScreenCover(FullScreenCoverContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/height(_:)","title":"func height(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/help(_:)-6xs9o","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/help(_:)-7f53e","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/help(_:)-fnu1","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/hidden(if:)","title":"func hidden(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/hidekeyboard()","title":"func hideKeyboard()","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/keyboardshortcut(_:)-7hi73","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/keyboardshortcut(_:)-8io59","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/linelimit(_:)","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/listitemtint(_:)-4admh","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/listitemtint(_:)-6iy90","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtext\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtext\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtext\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtext\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtext\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtext\/navigationbartitle(_:)-1a0xa","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtext\/navigationbartitle(_:)-2l357","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtext\/navigationbartitle(_:)-7dmtt","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtext\/navigationbartitle(_:displaymode:)-1hbj8","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtext\/navigationbartitle(_:displaymode:)-882mn","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtext\/navigationbartitle(_:displaymode:)-974xc","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/navigationdocument(_:)-7vpz7","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/navigationdocument(_:)-9wjlp","title":"func navigationDocument<D>(D) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/navigationdocument(_:preview:)-2ffxb","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/navigationdocument(_:preview:)-2rkun","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/navigationdocument(_:preview:)-2tabn","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/navigationdocument(_:preview:)-8qqu2","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/navigationtitle(_:)-3jbt4","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/navigationtitle(_:)-45sfn","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/navigationtitle(_:)-880b8","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/navigationtitle(_:)-8tans","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/navigationtitle(_:)-9oqha","title":"func navigationTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtext\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtext\/ondrop(of:delegate:)-6lt37","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/ondrop(of:delegate:)-9co9e","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtext\/ondrop(of:istargeted:perform:)-51mo8","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/ondrop(of:istargeted:perform:)-77vzf","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtext\/ondrop(of:istargeted:perform:)-89o15","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/ondrop(of:istargeted:perform:)-oae0","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtext\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtext\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/onswipegesture(maximumtime:minimumdistance:maximumdistance:gesturetimer:up:left:right:down:)","title":"func onSwipeGesture(maximumTime: TimeInterval, minimumDistance: CGFloat, maximumDistance: CGFloat, gestureTimer: GestureTimer, up: () -> Void, left: () -> Void, right: () -> Void, down: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtext\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/padding(_:)-3vv5j","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/padding(_:)-7eykl","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/preferspersistentsystemoverlayshidden()","title":"func prefersPersistentSystemOverlaysHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/presentationdetents(undimmed:largestundimmed:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/presentationdetents(undimmed:largestundimmed:selection:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/renameaction(_:)-6r2l","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/renameaction(_:)-8nzxr","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/safeareainset(edge:alignment:spacing:content:)-1pu23","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/safeareainset(edge:alignment:spacing:content:)-3w32w","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/scaleeffect(_:anchor:)-6bc51","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/scaleeffect(_:anchor:)-9sxts","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/searchcompletion(_:)-51hh9","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/searchcompletion(_:)-94x1i","title":"func searchCompletion<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/searchable(if:text:placement:prompt:)","title":"func searchable(if: Bool, text: Binding<String>, placement: SearchFieldPlacement, prompt: String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/searchable(text:placement:prompt:)-2atbn","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/searchable(text:placement:prompt:)-2cffq","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/searchable(text:placement:prompt:)-81ao1","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtext\/searchable(text:placement:prompt:suggestions:)-34r8d","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtext\/searchable(text:placement:prompt:suggestions:)-9grkg","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtext\/searchable(text:placement:prompt:suggestions:)-9itfe","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/searchable(text:tokens:placement:prompt:token:)-1x3v3","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/searchable(text:tokens:placement:prompt:token:)-6zohq","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/searchable(text:tokens:placement:prompt:token:)-9kxb6","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-2l94d","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-6l35j","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-9mrul","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/shadow(_:)","title":"func shadow(ViewShadowStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/sheet(_:)","title":"func sheet(SheetContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtext\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/tint(_:)-4iysq","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/tint(_:)-uvsj","title":"func tint<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/toolbar(content:)-2bs56","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/toolbar(content:)-72psl","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/toolbarbackground(_:for:)-2ggpa","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/toolbarbackground(_:for:)-4tlb0","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/visible(if:)","title":"func visible(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/width(_:)","title":"func width(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtext\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/swiftuikit\/formtext\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/swiftuikit\/formtext","title":"FormText","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/init(title:text:editorheight:)","title":"init(title: String, text: Binding<String>, editorHeight: CGFloat)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/body","title":"var body: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtexteditor\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibility(activationpoint:)-8d50p","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibility(activationpoint:)-8h7ob","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibilityaction(named:_:)","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibilityactivationpoint(_:)-4m0uv","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibilityactivationpoint(_:)-b3c1","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibilitycustomcontent(_:_:importance:)-469u2","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibilitycustomcontent(_:_:importance:)-4qpgp","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibilitycustomcontent(_:_:importance:)-57zwt","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibilitycustomcontent(_:_:importance:)-625yp","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibilitycustomcontent(_:_:importance:)-6cvki","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibilitycustomcontent(_:_:importance:)-6t3jc","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibilitycustomcontent(_:_:importance:)-87cio","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibilitycustomcontent(_:_:importance:)-m189","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibilityhint(_:)-1z9vb","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibilityhint(_:)-487en","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibilityhint(_:)-4sob1","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibilityinputlabels(_:)-17f2q","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibilityinputlabels(_:)-59efn","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibilityinputlabels(_:)-86vwc","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibilitylabel(_:)-2h7mi","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibilitylabel(_:)-7ebj","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibilitylabel(_:)-7rb1y","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibilityrotor(_:entries:)-12692","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibilityrotor(_:entries:)-1yqob","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibilityrotor(_:entries:)-3veku","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibilityrotor(_:entries:)-7igr6","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibilityrotor(_:entries:entryid:entrylabel:)-6bkzg","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibilityrotor(_:entries:entryid:entrylabel:)-6kmzk","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibilityrotor(_:entries:entryid:entrylabel:)-725a1","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibilityrotor(_:entries:entryid:entrylabel:)-95ie0","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibilityrotor(_:entries:entrylabel:)-1sbc7","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibilityrotor(_:entries:entrylabel:)-4q96r","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibilityrotor(_:entries:entrylabel:)-9pzos","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibilityrotor(_:entries:entrylabel:)-p6zc","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibilityrotor(_:textranges:)-25jki","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibilityrotor(_:textranges:)-3qz38","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibilityrotor(_:textranges:)-5ttk9","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibilityrotor(_:textranges:)-vo9p","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibilityvalue(_:)-4ef9x","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibilityvalue(_:)-6gagg","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/accessibilityvalue(_:)-8lit0","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtexteditor\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtexteditor\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/alert(_:)","title":"func alert(AlertContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/alert(_:ispresented:actions:)-2ipr","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/alert(_:ispresented:actions:)-8leiw","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/alert(_:ispresented:actions:)-8m6ew","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/alert(_:ispresented:actions:message:)-14e2c","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/alert(_:ispresented:actions:message:)-4wo80","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/alert(_:ispresented:actions:message:)-l6e","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/alert(_:ispresented:presenting:actions:)-23zks","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/alert(_:ispresented:presenting:actions:)-3habc","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/alert(_:ispresented:presenting:actions:)-6v6uj","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/alert(_:ispresented:presenting:actions:message:)-2v0gp","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/alert(_:ispresented:presenting:actions:message:)-5xgvj","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/alert(_:ispresented:presenting:actions:message:)-9w7mh","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtexteditor\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtexteditor\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/alignmentguide(_:computevalue:)-5d3q7","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/alignmentguide(_:computevalue:)-9feah","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtexteditor\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/any()","title":"func any() -> AnyView","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/aspectratio(_:contentmode:)-5tpdc","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/aspectratio(_:contentmode:)-6aiyz","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtexteditor\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/autosave(_:debounceinterval:action:)","title":"func autosave<T>(Published<T>.Publisher, debounceInterval: RunLoop.SchedulerTimeType.Stride, action: () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtexteditor\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/background(_:in:fillstyle:)-2ekpb","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/background(_:in:fillstyle:)-7i512","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/background(in:fillstyle:)-3cvdw","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/background(in:fillstyle:)-e28f","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/badge(_:)-38k0","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/badge(_:)-4jok5","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/badge(_:)-52mq0","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/badge(_:)-kkno","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/bindsafeareainsets(to:)","title":"func bindSafeAreaInsets(to: Binding<EdgeInsets>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/bindsize(to:)","title":"func bindSize(to: Binding<CGSize>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/border(_:width:cornerradius:)","title":"func border<Content>(Content, width: CGFloat, cornerRadius: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/buttonstyle(_:)-2304f","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/buttonstyle(_:)-6vome","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtexteditor\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/confirmationdialog(_:ispresented:titlevisibility:actions:)-2bxqw","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/confirmationdialog(_:ispresented:titlevisibility:actions:)-5skqg","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/confirmationdialog(_:ispresented:titlevisibility:actions:)-9s5e5","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-3gs8","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-5t02l","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-7d0ki","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-3eiie","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-8blv","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-ywyv","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-5skkd","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-7c9fa","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-8dz0x","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtexteditor\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtexteditor\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/cornerradius(_:)","title":"func cornerRadius(CornerRadiusStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtexteditor\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/disabledynamictype(sizecategory:)","title":"func disableDynamicType(sizeCategory: ContentSizeCategory) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/dynamictypesize(_:)-4fn1o","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/dynamictypesize(_:)-8vylm","title":"func dynamicTypeSize<T>(T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtexteditor\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/enabled(_:)","title":"func enabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-4rbgu","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-6i7t0","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/fileexporter(ispresented:documents:contenttype:oncompletion:)-6c19","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/fileexporter(ispresented:documents:contenttype:oncompletion:)-9wvow","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/focusedobject(_:)-6ke2z","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/focusedobject(_:)-9kl0j","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/focusedsceneobject(_:)-4gjrv","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/focusedsceneobject(_:)-5wu49","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/focusedscenevalue(_:_:)-1q66a","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/focusedscenevalue(_:_:)-5upm","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/focusedvalue(_:_:)-584g1","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/focusedvalue(_:_:)-77357","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/font(_:)-3hoqt","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/font(_:)-9zbtx","title":"func font(FontStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/font(identifier:style:weight:)","title":"func font(identifier: FontIdentifier, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/font(name:style:weight:)","title":"func font(name: String, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/frame(_:)","title":"func frame(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/frame(square:)","title":"func frame(square: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/fullscreencover(_:)","title":"func fullScreenCover(FullScreenCoverContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/height(_:)","title":"func height(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/help(_:)-4pxb2","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/help(_:)-4usfg","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/help(_:)-7q0o2","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/hidden(if:)","title":"func hidden(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/hidekeyboard()","title":"func hideKeyboard()","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/keyboardshortcut(_:)-5evtz","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/keyboardshortcut(_:)-5p4z0","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/linelimit(_:)","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/listitemtint(_:)-5z940","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/listitemtint(_:)-k944","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtexteditor\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtexteditor\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtexteditor\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtexteditor\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtexteditor\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtexteditor\/navigationbartitle(_:)-65n0z","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtexteditor\/navigationbartitle(_:)-803p4","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtexteditor\/navigationbartitle(_:)-97f7b","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtexteditor\/navigationbartitle(_:displaymode:)-3jlks","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtexteditor\/navigationbartitle(_:displaymode:)-4mhcp","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtexteditor\/navigationbartitle(_:displaymode:)-6qe4w","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/navigationdocument(_:)-6gs71","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/navigationdocument(_:)-9j79r","title":"func navigationDocument<D>(D) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/navigationdocument(_:preview:)-29rue","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/navigationdocument(_:preview:)-5nxoe","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/navigationdocument(_:preview:)-6i46u","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/navigationdocument(_:preview:)-8dou0","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/navigationtitle(_:)-1b47t","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/navigationtitle(_:)-2fqm5","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/navigationtitle(_:)-60cb6","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/navigationtitle(_:)-d6nw","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/navigationtitle(_:)-k38q","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtexteditor\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/ondrop(of:delegate:)-36v5m","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtexteditor\/ondrop(of:delegate:)-814h6","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/ondrop(of:istargeted:perform:)-1ybez","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/ondrop(of:istargeted:perform:)-3nakt","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtexteditor\/ondrop(of:istargeted:perform:)-4tpyb","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtexteditor\/ondrop(of:istargeted:perform:)-57m55","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtexteditor\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtexteditor\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/onswipegesture(maximumtime:minimumdistance:maximumdistance:gesturetimer:up:left:right:down:)","title":"func onSwipeGesture(maximumTime: TimeInterval, minimumDistance: CGFloat, maximumDistance: CGFloat, gestureTimer: GestureTimer, up: () -> Void, left: () -> Void, right: () -> Void, down: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtexteditor\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/padding(_:)-3r4db","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/padding(_:)-zekz","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/preferspersistentsystemoverlayshidden()","title":"func prefersPersistentSystemOverlaysHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/presentationdetents(undimmed:largestundimmed:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/presentationdetents(undimmed:largestundimmed:selection:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/renameaction(_:)-872gd","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/renameaction(_:)-8cqvc","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/safeareainset(edge:alignment:spacing:content:)-8o6gj","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/safeareainset(edge:alignment:spacing:content:)-9wub","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/scaleeffect(_:anchor:)-5q576","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/scaleeffect(_:anchor:)-i49g","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/searchcompletion(_:)-6vr6t","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/searchcompletion(_:)-khpb","title":"func searchCompletion<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/searchable(if:text:placement:prompt:)","title":"func searchable(if: Bool, text: Binding<String>, placement: SearchFieldPlacement, prompt: String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/searchable(text:placement:prompt:)-59usc","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/searchable(text:placement:prompt:)-e23u","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/searchable(text:placement:prompt:)-vadv","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtexteditor\/searchable(text:placement:prompt:suggestions:)-1wnjw","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtexteditor\/searchable(text:placement:prompt:suggestions:)-9bjhl","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtexteditor\/searchable(text:placement:prompt:suggestions:)-b7xc","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/searchable(text:tokens:placement:prompt:token:)-1hnda","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/searchable(text:tokens:placement:prompt:token:)-48qjy","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/searchable(text:tokens:placement:prompt:token:)-5jhpe","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-2riif","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-62aiv","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-73spm","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/shadow(_:)","title":"func shadow(ViewShadowStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/sheet(_:)","title":"func sheet(SheetContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtexteditor\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/tint(_:)-55v5a","title":"func tint<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/tint(_:)-l4p","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/toolbar(content:)-29a87","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/toolbar(content:)-7ylx4","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/toolbarbackground(_:for:)-2r0p6","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/toolbarbackground(_:for:)-4o6uy","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/visible(if:)","title":"func visible(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/width(_:)","title":"func width(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtexteditor\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/swiftuikit\/formtexteditor\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/swiftuikit\/formtexteditor","title":"FormTextEditor","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/formtextfield\/init(title:placeholder:text:)","title":"init(title: String, placeholder: String, text: Binding<String>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/formtextfield\/body","title":"var body: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtextfield\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtextfield\/accessibility(activationpoint:)-5fdc6","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtextfield\/accessibility(activationpoint:)-8xryk","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtextfield\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtextfield\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtextfield\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtextfield\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtextfield\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtextfield\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtextfield\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtextfield\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtextfield\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/accessibilityaction(named:_:)","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/accessibilityactivationpoint(_:)-1kqdf","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/accessibilityactivationpoint(_:)-9d9u3","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/accessibilitycustomcontent(_:_:importance:)-1h5vy","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/accessibilitycustomcontent(_:_:importance:)-1jfji","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/accessibilitycustomcontent(_:_:importance:)-240m6","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/accessibilitycustomcontent(_:_:importance:)-2nljl","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/accessibilitycustomcontent(_:_:importance:)-65p73","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/accessibilitycustomcontent(_:_:importance:)-6igb4","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/accessibilitycustomcontent(_:_:importance:)-6r0bh","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/accessibilitycustomcontent(_:_:importance:)-8f14j","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/accessibilityhint(_:)-53wmv","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/accessibilityhint(_:)-5dpim","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/accessibilityhint(_:)-6kh1r","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/accessibilityinputlabels(_:)-447gn","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/accessibilityinputlabels(_:)-4spto","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/accessibilityinputlabels(_:)-8rlat","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/accessibilitylabel(_:)-2ig48","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/accessibilitylabel(_:)-5muyn","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/accessibilitylabel(_:)-8xa0b","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/accessibilityrotor(_:entries:)-1xvsk","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/accessibilityrotor(_:entries:)-513za","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/accessibilityrotor(_:entries:)-5eo5j","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/accessibilityrotor(_:entries:)-9fmyc","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/accessibilityrotor(_:entries:entryid:entrylabel:)-4psd8","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/accessibilityrotor(_:entries:entryid:entrylabel:)-6g9jg","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/accessibilityrotor(_:entries:entryid:entrylabel:)-7neh8","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/accessibilityrotor(_:entries:entryid:entrylabel:)-9ya5p","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/accessibilityrotor(_:entries:entrylabel:)-4j2o8","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/accessibilityrotor(_:entries:entrylabel:)-679dl","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/accessibilityrotor(_:entries:entrylabel:)-7k6ne","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/accessibilityrotor(_:entries:entrylabel:)-7nhjz","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/accessibilityrotor(_:textranges:)-9xouc","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/accessibilityrotor(_:textranges:)-9z52f","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/accessibilityrotor(_:textranges:)-ijfv","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/accessibilityrotor(_:textranges:)-m7cm","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/accessibilityvalue(_:)-541ze","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/accessibilityvalue(_:)-96uqc","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/accessibilityvalue(_:)-9pzst","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtextfield\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtextfield\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/alert(_:)","title":"func alert(AlertContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/alert(_:ispresented:actions:)-16ew6","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/alert(_:ispresented:actions:)-46z4y","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/alert(_:ispresented:actions:)-z9l","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/alert(_:ispresented:actions:message:)-1xljg","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/alert(_:ispresented:actions:message:)-2vtjw","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/alert(_:ispresented:actions:message:)-572cb","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/alert(_:ispresented:presenting:actions:)-3q72m","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/alert(_:ispresented:presenting:actions:)-4x838","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/alert(_:ispresented:presenting:actions:)-7bsk3","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/alert(_:ispresented:presenting:actions:message:)-1alwq","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/alert(_:ispresented:presenting:actions:message:)-30cvv","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/alert(_:ispresented:presenting:actions:message:)-6h8x5","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtextfield\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtextfield\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/alignmentguide(_:computevalue:)-1ku6m","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/alignmentguide(_:computevalue:)-2dpt9","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtextfield\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/any()","title":"func any() -> AnyView","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/aspectratio(_:contentmode:)-6v5ee","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/aspectratio(_:contentmode:)-yo68","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtextfield\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/autosave(_:debounceinterval:action:)","title":"func autosave<T>(Published<T>.Publisher, debounceInterval: RunLoop.SchedulerTimeType.Stride, action: () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtextfield\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/background(_:in:fillstyle:)-1fsk7","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/background(_:in:fillstyle:)-3wzg0","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/background(in:fillstyle:)-7glop","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/background(in:fillstyle:)-999fn","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/badge(_:)-19gkf","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/badge(_:)-2cyzx","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/badge(_:)-4h0q7","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/badge(_:)-75huj","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/bindsafeareainsets(to:)","title":"func bindSafeAreaInsets(to: Binding<EdgeInsets>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/bindsize(to:)","title":"func bindSize(to: Binding<CGSize>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/border(_:width:cornerradius:)","title":"func border<Content>(Content, width: CGFloat, cornerRadius: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/buttonstyle(_:)-6j779","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/buttonstyle(_:)-7qxto","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtextfield\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/confirmationdialog(_:ispresented:titlevisibility:actions:)-4o8q5","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/confirmationdialog(_:ispresented:titlevisibility:actions:)-507q9","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/confirmationdialog(_:ispresented:titlevisibility:actions:)-7s3dy","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-4mdrk","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-69zan","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-6l7sy","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-756cm","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-7eipm","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-8hq1t","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-1rbbb","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-22x6d","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-5mhn8","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtextfield\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtextfield\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/cornerradius(_:)","title":"func cornerRadius(CornerRadiusStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtextfield\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/disabledynamictype(sizecategory:)","title":"func disableDynamicType(sizeCategory: ContentSizeCategory) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/dynamictypesize(_:)-4584z","title":"func dynamicTypeSize<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/dynamictypesize(_:)-dwsb","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtextfield\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/enabled(_:)","title":"func enabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-40nc2","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-9qu6y","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/fileexporter(ispresented:documents:contenttype:oncompletion:)-3q5k7","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/fileexporter(ispresented:documents:contenttype:oncompletion:)-4mel6","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/focusedobject(_:)-1qfb","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/focusedobject(_:)-ir2z","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/focusedsceneobject(_:)-3ynl6","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/focusedsceneobject(_:)-6tdzc","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/focusedscenevalue(_:_:)-4ijom","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/focusedscenevalue(_:_:)-8jbly","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/focusedvalue(_:_:)-2h3vg","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/focusedvalue(_:_:)-8029s","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/font(_:)-14dsm","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/font(_:)-ydp1","title":"func font(FontStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/font(identifier:style:weight:)","title":"func font(identifier: FontIdentifier, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/font(name:style:weight:)","title":"func font(name: String, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/frame(_:)","title":"func frame(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/frame(square:)","title":"func frame(square: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/fullscreencover(_:)","title":"func fullScreenCover(FullScreenCoverContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/height(_:)","title":"func height(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/help(_:)-2fudb","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/help(_:)-5qnvp","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/help(_:)-8kqz3","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/hidden(if:)","title":"func hidden(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/hidekeyboard()","title":"func hideKeyboard()","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/keyboardshortcut(_:)-4qunh","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/keyboardshortcut(_:)-590ft","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/linelimit(_:)","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/listitemtint(_:)-8yp4j","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/listitemtint(_:)-b6pi","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtextfield\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtextfield\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtextfield\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtextfield\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtextfield\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtextfield\/navigationbartitle(_:)-2qhf4","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtextfield\/navigationbartitle(_:)-7lul7","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtextfield\/navigationbartitle(_:)-9z7e3","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtextfield\/navigationbartitle(_:displaymode:)-2n5ps","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtextfield\/navigationbartitle(_:displaymode:)-6sbwa","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtextfield\/navigationbartitle(_:displaymode:)-9v1ar","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/navigationdocument(_:)-633o6","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/navigationdocument(_:)-7thy1","title":"func navigationDocument<D>(D) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/navigationdocument(_:preview:)-3bkkq","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/navigationdocument(_:preview:)-6k6cf","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/navigationdocument(_:preview:)-7f92r","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/navigationdocument(_:preview:)-9m0gy","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/navigationtitle(_:)-1b2eq","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/navigationtitle(_:)-206ac","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/navigationtitle(_:)-2eon6","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/navigationtitle(_:)-7lz0m","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/navigationtitle(_:)-8393l","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtextfield\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtextfield\/ondrop(of:delegate:)-2u7t5","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/ondrop(of:delegate:)-3z567","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtextfield\/ondrop(of:istargeted:perform:)-1qdja","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/ondrop(of:istargeted:perform:)-2y5oo","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtextfield\/ondrop(of:istargeted:perform:)-39qxr","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/ondrop(of:istargeted:perform:)-54z1q","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtextfield\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtextfield\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/onswipegesture(maximumtime:minimumdistance:maximumdistance:gesturetimer:up:left:right:down:)","title":"func onSwipeGesture(maximumTime: TimeInterval, minimumDistance: CGFloat, maximumDistance: CGFloat, gestureTimer: GestureTimer, up: () -> Void, left: () -> Void, right: () -> Void, down: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtextfield\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/padding(_:)-3xbrw","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/padding(_:)-6pqhd","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/preferspersistentsystemoverlayshidden()","title":"func prefersPersistentSystemOverlaysHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/presentationdetents(undimmed:largestundimmed:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/presentationdetents(undimmed:largestundimmed:selection:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/renameaction(_:)-6hc7f","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/renameaction(_:)-8uywl","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/safeareainset(edge:alignment:spacing:content:)-3ve49","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/safeareainset(edge:alignment:spacing:content:)-9o6dz","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/scaleeffect(_:anchor:)-8xvhg","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/scaleeffect(_:anchor:)-l7v8","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/searchcompletion(_:)-28uis","title":"func searchCompletion<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/searchcompletion(_:)-ua1u","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/searchable(if:text:placement:prompt:)","title":"func searchable(if: Bool, text: Binding<String>, placement: SearchFieldPlacement, prompt: String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/searchable(text:placement:prompt:)-4cfdt","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/searchable(text:placement:prompt:)-8kvht","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/searchable(text:placement:prompt:)-j1ct","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtextfield\/searchable(text:placement:prompt:suggestions:)-2333o","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtextfield\/searchable(text:placement:prompt:suggestions:)-5g9a3","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtextfield\/searchable(text:placement:prompt:suggestions:)-r1ch","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/searchable(text:tokens:placement:prompt:token:)-22y25","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/searchable(text:tokens:placement:prompt:token:)-7kn2m","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/searchable(text:tokens:placement:prompt:token:)-80adp","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-2sac5","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-4xdgf","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-7hlon","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/shadow(_:)","title":"func shadow(ViewShadowStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/sheet(_:)","title":"func sheet(SheetContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/formtextfield\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/tint(_:)-413re","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/tint(_:)-6mb5z","title":"func tint<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/toolbar(content:)-1n1g0","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/toolbar(content:)-ivse","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/toolbarbackground(_:for:)-6r64m","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/toolbarbackground(_:for:)-6yfne","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/visible(if:)","title":"func visible(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/width(_:)","title":"func width(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/formtextfield\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/swiftuikit\/formtextfield\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/swiftuikit\/formtextfield","title":"FormTextField","type":"struct"},{"title":"Views\/List","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/listbuttonstyle\/makebody(configuration:)","title":"func makeBody(configuration: Configuration) -> some View","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/listbuttonstyle\/list","title":"static var list: ListButtonStyle","type":"property"}],"path":"\/documentation\/swiftuikit\/listbuttonstyle\/buttonstyle-implementations","title":"ButtonStyle Implementations","type":"symbol"}],"path":"\/documentation\/swiftuikit\/listbuttonstyle","title":"ListButtonStyle","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/listselectitem\/init(isselected:selectindicator:content:)","title":"init(isSelected: Bool, selectIndicator: SelectIndicator, content: () -> Content)","type":"init"},{"path":"\/documentation\/swiftuikit\/listselectitem\/init(isselected:selectedimage:content:)","title":"init(isSelected: Bool, selectedImage: Image, content: () -> Content)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/listselectitem\/body","title":"var body: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listselectitem\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listselectitem\/accessibility(activationpoint:)-64s74","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listselectitem\/accessibility(activationpoint:)-78qpm","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listselectitem\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listselectitem\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listselectitem\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listselectitem\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listselectitem\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listselectitem\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listselectitem\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listselectitem\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listselectitem\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/accessibilityaction(named:_:)","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/accessibilityactivationpoint(_:)-8kxdi","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/accessibilityactivationpoint(_:)-kxh2","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/accessibilitycustomcontent(_:_:importance:)-1m2ky","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/accessibilitycustomcontent(_:_:importance:)-3jiag","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/accessibilitycustomcontent(_:_:importance:)-3qric","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/accessibilitycustomcontent(_:_:importance:)-6kdtx","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/accessibilitycustomcontent(_:_:importance:)-8fuez","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/accessibilitycustomcontent(_:_:importance:)-8uf7z","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/accessibilitycustomcontent(_:_:importance:)-in3t","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/accessibilitycustomcontent(_:_:importance:)-tngf","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/accessibilityhint(_:)-3dqto","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/accessibilityhint(_:)-7zg42","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/accessibilityhint(_:)-9o040","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/accessibilityinputlabels(_:)-3vwzp","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/accessibilityinputlabels(_:)-8jo2h","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/accessibilityinputlabels(_:)-hjen","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/accessibilitylabel(_:)-3sivy","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/accessibilitylabel(_:)-6dtge","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/accessibilitylabel(_:)-6v1fy","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/accessibilityrotor(_:entries:)-23djo","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/accessibilityrotor(_:entries:)-3awis","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/accessibilityrotor(_:entries:)-45wms","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/accessibilityrotor(_:entries:)-84jxb","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/accessibilityrotor(_:entries:entryid:entrylabel:)-1gdfa","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/accessibilityrotor(_:entries:entryid:entrylabel:)-3mdtx","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/accessibilityrotor(_:entries:entryid:entrylabel:)-4hntj","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/accessibilityrotor(_:entries:entryid:entrylabel:)-tsm7","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/accessibilityrotor(_:entries:entrylabel:)-1dp1j","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/accessibilityrotor(_:entries:entrylabel:)-375gn","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/accessibilityrotor(_:entries:entrylabel:)-8fyee","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/accessibilityrotor(_:entries:entrylabel:)-9zcrd","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/accessibilityrotor(_:textranges:)-2mkzj","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/accessibilityrotor(_:textranges:)-3q26c","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/accessibilityrotor(_:textranges:)-6icny","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/accessibilityrotor(_:textranges:)-7lpnw","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/accessibilityvalue(_:)-4yhv3","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/accessibilityvalue(_:)-7xso","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/accessibilityvalue(_:)-9e8pk","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listselectitem\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listselectitem\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/alert(_:)","title":"func alert(AlertContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/alert(_:ispresented:actions:)-243pw","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/alert(_:ispresented:actions:)-2wvoh","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/alert(_:ispresented:actions:)-2ym1l","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/alert(_:ispresented:actions:message:)-4b9yb","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/alert(_:ispresented:actions:message:)-6kex3","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/alert(_:ispresented:actions:message:)-9shk1","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/alert(_:ispresented:presenting:actions:)-52q20","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/alert(_:ispresented:presenting:actions:)-60c8h","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/alert(_:ispresented:presenting:actions:)-88uie","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/alert(_:ispresented:presenting:actions:message:)-33hxl","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/alert(_:ispresented:presenting:actions:message:)-46bxf","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/alert(_:ispresented:presenting:actions:message:)-6d6ar","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listselectitem\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listselectitem\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/alignmentguide(_:computevalue:)-2wft0","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/alignmentguide(_:computevalue:)-8b06i","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listselectitem\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/any()","title":"func any() -> AnyView","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/aspectratio(_:contentmode:)-27fmr","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/aspectratio(_:contentmode:)-31ll8","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listselectitem\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/autosave(_:debounceinterval:action:)","title":"func autosave<T>(Published<T>.Publisher, debounceInterval: RunLoop.SchedulerTimeType.Stride, action: () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listselectitem\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/background(_:in:fillstyle:)-1ynni","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/background(_:in:fillstyle:)-50gur","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/background(in:fillstyle:)-3mju9","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/background(in:fillstyle:)-50m2r","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/badge(_:)-3ucdp","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/badge(_:)-6rd75","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/badge(_:)-9hgvh","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/badge(_:)-9jgq6","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/bindsafeareainsets(to:)","title":"func bindSafeAreaInsets(to: Binding<EdgeInsets>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/bindsize(to:)","title":"func bindSize(to: Binding<CGSize>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/border(_:width:cornerradius:)","title":"func border<Content>(Content, width: CGFloat, cornerRadius: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/buttonstyle(_:)-12asq","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/buttonstyle(_:)-1amqx","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listselectitem\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/confirmationdialog(_:ispresented:titlevisibility:actions:)-3oboy","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/confirmationdialog(_:ispresented:titlevisibility:actions:)-72nkg","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/confirmationdialog(_:ispresented:titlevisibility:actions:)-77do7","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-30w9f","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-7kmgc","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-7zb5n","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-1kptz","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-8sjvb","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-9bg6s","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-18qme","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-91up4","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-9xezc","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listselectitem\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listselectitem\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/cornerradius(_:)","title":"func cornerRadius(CornerRadiusStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listselectitem\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/disabledynamictype(sizecategory:)","title":"func disableDynamicType(sizeCategory: ContentSizeCategory) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/dynamictypesize(_:)-890ah","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/dynamictypesize(_:)-9g0sy","title":"func dynamicTypeSize<T>(T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listselectitem\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/enabled(_:)","title":"func enabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-3mmxq","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-56owr","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/fileexporter(ispresented:documents:contenttype:oncompletion:)-4dw0p","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/fileexporter(ispresented:documents:contenttype:oncompletion:)-5mc9e","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/focusedobject(_:)-2fimj","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/focusedobject(_:)-8cade","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/focusedsceneobject(_:)-13znj","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/focusedsceneobject(_:)-skqp","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/focusedscenevalue(_:_:)-1tlel","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/focusedscenevalue(_:_:)-9m0j5","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/focusedvalue(_:_:)-62ou0","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/focusedvalue(_:_:)-8pn5o","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/font(_:)-3yms9","title":"func font(FontStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/font(_:)-9jrxo","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/font(identifier:style:weight:)","title":"func font(identifier: FontIdentifier, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/font(name:style:weight:)","title":"func font(name: String, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/frame(_:)","title":"func frame(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/frame(square:)","title":"func frame(square: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/fullscreencover(_:)","title":"func fullScreenCover(FullScreenCoverContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/height(_:)","title":"func height(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/help(_:)-5154a","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/help(_:)-82pvu","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/help(_:)-xypj","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/hidden(if:)","title":"func hidden(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/hidekeyboard()","title":"func hideKeyboard()","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/keyboardshortcut(_:)-1rmok","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/keyboardshortcut(_:)-76s4m","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/linelimit(_:)","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/listitemtint(_:)-2msws","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/listitemtint(_:)-4bhnx","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listselectitem\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listselectitem\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listselectitem\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listselectitem\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listselectitem\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listselectitem\/navigationbartitle(_:)-89mnb","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listselectitem\/navigationbartitle(_:)-9xd60","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listselectitem\/navigationbartitle(_:)-me7b","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listselectitem\/navigationbartitle(_:displaymode:)-6512m","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listselectitem\/navigationbartitle(_:displaymode:)-f2ma","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listselectitem\/navigationbartitle(_:displaymode:)-isvr","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/navigationdocument(_:)-2j9wb","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/navigationdocument(_:)-kt64","title":"func navigationDocument<D>(D) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/navigationdocument(_:preview:)-215rd","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/navigationdocument(_:preview:)-4c5vr","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/navigationdocument(_:preview:)-6z94q","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/navigationdocument(_:preview:)-7i68t","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/navigationtitle(_:)-3egf2","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/navigationtitle(_:)-5rq4t","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/navigationtitle(_:)-82cm9","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/navigationtitle(_:)-8kb92","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/navigationtitle(_:)-9yo4p","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listselectitem\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/ondrop(of:delegate:)-29bj7","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listselectitem\/ondrop(of:delegate:)-5ip9","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/ondrop(of:istargeted:perform:)-6d4m1","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listselectitem\/ondrop(of:istargeted:perform:)-6wce8","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listselectitem\/ondrop(of:istargeted:perform:)-8q2ki","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/ondrop(of:istargeted:perform:)-audj","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listselectitem\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listselectitem\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/onswipegesture(maximumtime:minimumdistance:maximumdistance:gesturetimer:up:left:right:down:)","title":"func onSwipeGesture(maximumTime: TimeInterval, minimumDistance: CGFloat, maximumDistance: CGFloat, gestureTimer: GestureTimer, up: () -> Void, left: () -> Void, right: () -> Void, down: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listselectitem\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/padding(_:)-2fl9s","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/padding(_:)-2raui","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/preferspersistentsystemoverlayshidden()","title":"func prefersPersistentSystemOverlaysHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/presentationdetents(undimmed:largestundimmed:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/presentationdetents(undimmed:largestundimmed:selection:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/renameaction(_:)-11v07","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/renameaction(_:)-78278","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/safeareainset(edge:alignment:spacing:content:)-4y252","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/safeareainset(edge:alignment:spacing:content:)-6xinv","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/scaleeffect(_:anchor:)-4yl6w","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/scaleeffect(_:anchor:)-7dvsl","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/searchcompletion(_:)-4s0d3","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/searchcompletion(_:)-ubts","title":"func searchCompletion<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/searchable(if:text:placement:prompt:)","title":"func searchable(if: Bool, text: Binding<String>, placement: SearchFieldPlacement, prompt: String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/searchable(text:placement:prompt:)-1pdke","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/searchable(text:placement:prompt:)-2cmej","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/searchable(text:placement:prompt:)-6m10b","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listselectitem\/searchable(text:placement:prompt:suggestions:)-3ruzo","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listselectitem\/searchable(text:placement:prompt:suggestions:)-8kcpz","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listselectitem\/searchable(text:placement:prompt:suggestions:)-9lgzd","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/searchable(text:tokens:placement:prompt:token:)-68tf8","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/searchable(text:tokens:placement:prompt:token:)-6pml","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/searchable(text:tokens:placement:prompt:token:)-gxzv","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-17lii","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-38fc5","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-414un","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/shadow(_:)","title":"func shadow(ViewShadowStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/sheet(_:)","title":"func sheet(SheetContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listselectitem\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/tint(_:)-4vwq4","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/tint(_:)-5r8zw","title":"func tint<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/toolbar(content:)-6l5wb","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/toolbar(content:)-8wflo","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/toolbarbackground(_:for:)-9cby7","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/toolbarbackground(_:for:)-n9vu","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/visible(if:)","title":"func visible(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/width(_:)","title":"func width(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listselectitem\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/swiftuikit\/listselectitem\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/swiftuikit\/listselectitem","title":"ListSelectItem","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/init(_:)","title":"init(String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/body","title":"var body: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listsubtitle\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibility(activationpoint:)-23fpp","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibility(activationpoint:)-3m2rq","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibilityaction(named:_:)","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibilityactivationpoint(_:)-3o9xc","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibilityactivationpoint(_:)-4d4mv","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibilitycustomcontent(_:_:importance:)-1nsxz","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibilitycustomcontent(_:_:importance:)-224ic","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibilitycustomcontent(_:_:importance:)-5r74e","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibilitycustomcontent(_:_:importance:)-6opnf","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibilitycustomcontent(_:_:importance:)-8vh4g","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibilitycustomcontent(_:_:importance:)-9viqc","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibilitycustomcontent(_:_:importance:)-9yqa3","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibilitycustomcontent(_:_:importance:)-rf1m","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibilityhint(_:)-3at7s","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibilityhint(_:)-5ud1w","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibilityhint(_:)-9wqq2","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibilityinputlabels(_:)-32j6z","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibilityinputlabels(_:)-4z09p","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibilityinputlabels(_:)-8d27y","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibilitylabel(_:)-2ye45","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibilitylabel(_:)-84gt6","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibilitylabel(_:)-8t1kj","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibilityrotor(_:entries:)-3ym1l","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibilityrotor(_:entries:)-4aghy","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibilityrotor(_:entries:)-4hw7b","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibilityrotor(_:entries:)-9iecs","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibilityrotor(_:entries:entryid:entrylabel:)-4fj9o","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibilityrotor(_:entries:entryid:entrylabel:)-5c8rh","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibilityrotor(_:entries:entryid:entrylabel:)-7moy2","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibilityrotor(_:entries:entryid:entrylabel:)-gp50","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibilityrotor(_:entries:entrylabel:)-2rplu","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibilityrotor(_:entries:entrylabel:)-37ysw","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibilityrotor(_:entries:entrylabel:)-5efw3","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibilityrotor(_:entries:entrylabel:)-wpqv","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibilityrotor(_:textranges:)-2u28f","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibilityrotor(_:textranges:)-3a0z1","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibilityrotor(_:textranges:)-434j1","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibilityrotor(_:textranges:)-93gza","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibilityvalue(_:)-21fjs","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibilityvalue(_:)-2zcjt","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/accessibilityvalue(_:)-4e1n1","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listsubtitle\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listsubtitle\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/alert(_:)","title":"func alert(AlertContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/alert(_:ispresented:actions:)-2to64","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/alert(_:ispresented:actions:)-70tto","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/alert(_:ispresented:actions:)-9q6dt","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/alert(_:ispresented:actions:message:)-2t9mz","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/alert(_:ispresented:actions:message:)-61g1v","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/alert(_:ispresented:actions:message:)-gd9u","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/alert(_:ispresented:presenting:actions:)-3j1ix","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/alert(_:ispresented:presenting:actions:)-5e7m3","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/alert(_:ispresented:presenting:actions:)-6virs","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/alert(_:ispresented:presenting:actions:message:)-1djyl","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/alert(_:ispresented:presenting:actions:message:)-4ktin","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/alert(_:ispresented:presenting:actions:message:)-6rhxq","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listsubtitle\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listsubtitle\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/alignmentguide(_:computevalue:)-49osa","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/alignmentguide(_:computevalue:)-5nqdp","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listsubtitle\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/any()","title":"func any() -> AnyView","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/aspectratio(_:contentmode:)-4flk2","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/aspectratio(_:contentmode:)-9fyzm","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listsubtitle\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/autosave(_:debounceinterval:action:)","title":"func autosave<T>(Published<T>.Publisher, debounceInterval: RunLoop.SchedulerTimeType.Stride, action: () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listsubtitle\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/background(_:in:fillstyle:)-1zu1","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/background(_:in:fillstyle:)-2krqj","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/background(in:fillstyle:)-4nbom","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/background(in:fillstyle:)-7fln1","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/badge(_:)-1nko0","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/badge(_:)-368jx","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/badge(_:)-3gin1","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/badge(_:)-676pw","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/bindsafeareainsets(to:)","title":"func bindSafeAreaInsets(to: Binding<EdgeInsets>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/bindsize(to:)","title":"func bindSize(to: Binding<CGSize>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/border(_:width:cornerradius:)","title":"func border<Content>(Content, width: CGFloat, cornerRadius: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/buttonstyle(_:)-38xft","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/buttonstyle(_:)-42f7o","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listsubtitle\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/confirmationdialog(_:ispresented:titlevisibility:actions:)-8gln8","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/confirmationdialog(_:ispresented:titlevisibility:actions:)-8kr94","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/confirmationdialog(_:ispresented:titlevisibility:actions:)-97yf","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-6nn87","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-77khe","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-7cxvy","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-1ioww","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-494b","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-8kb0e","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-7gcda","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-7gzzf","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-93h2g","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listsubtitle\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listsubtitle\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/cornerradius(_:)","title":"func cornerRadius(CornerRadiusStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listsubtitle\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/disabledynamictype(sizecategory:)","title":"func disableDynamicType(sizeCategory: ContentSizeCategory) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/dynamictypesize(_:)-1d9rd","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/dynamictypesize(_:)-48ehz","title":"func dynamicTypeSize<T>(T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listsubtitle\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/enabled(_:)","title":"func enabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-7diy3","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-pl4u","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/fileexporter(ispresented:documents:contenttype:oncompletion:)-4tusw","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/fileexporter(ispresented:documents:contenttype:oncompletion:)-7fra9","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/focusedobject(_:)-89h8g","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/focusedobject(_:)-99gz3","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/focusedsceneobject(_:)-4y3fw","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/focusedsceneobject(_:)-91efd","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/focusedscenevalue(_:_:)-6w6wi","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/focusedscenevalue(_:_:)-90a66","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/focusedvalue(_:_:)-502de","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/focusedvalue(_:_:)-8gf8c","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/font(_:)-3r396","title":"func font(FontStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/font(_:)-7xgfo","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/font(identifier:style:weight:)","title":"func font(identifier: FontIdentifier, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/font(name:style:weight:)","title":"func font(name: String, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/frame(_:)","title":"func frame(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/frame(square:)","title":"func frame(square: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/fullscreencover(_:)","title":"func fullScreenCover(FullScreenCoverContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/height(_:)","title":"func height(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/help(_:)-42o3h","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/help(_:)-68du4","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/help(_:)-6x75h","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/hidden(if:)","title":"func hidden(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/hidekeyboard()","title":"func hideKeyboard()","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/keyboardshortcut(_:)-1yqe4","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/keyboardshortcut(_:)-7b57b","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/linelimit(_:)","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/listitemtint(_:)-3817g","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/listitemtint(_:)-4soxy","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listsubtitle\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listsubtitle\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listsubtitle\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listsubtitle\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listsubtitle\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listsubtitle\/navigationbartitle(_:)-3l090","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listsubtitle\/navigationbartitle(_:)-6q5c4","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listsubtitle\/navigationbartitle(_:)-8unhd","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listsubtitle\/navigationbartitle(_:displaymode:)-5s2i2","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listsubtitle\/navigationbartitle(_:displaymode:)-61emv","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listsubtitle\/navigationbartitle(_:displaymode:)-9l7am","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/navigationdocument(_:)-909kf","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/navigationdocument(_:)-evdv","title":"func navigationDocument<D>(D) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/navigationdocument(_:preview:)-1ehxb","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/navigationdocument(_:preview:)-4b0am","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/navigationdocument(_:preview:)-4kfuy","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/navigationdocument(_:preview:)-4tsbb","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/navigationtitle(_:)-1x7f","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/navigationtitle(_:)-2vjuy","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/navigationtitle(_:)-520dn","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/navigationtitle(_:)-8fzeo","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/navigationtitle(_:)-8smap","title":"func navigationTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listsubtitle\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listsubtitle\/ondrop(of:delegate:)-3vb7l","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/ondrop(of:delegate:)-ac12","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/ondrop(of:istargeted:perform:)-4b4p2","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/ondrop(of:istargeted:perform:)-5ayx6","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listsubtitle\/ondrop(of:istargeted:perform:)-9pm4s","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listsubtitle\/ondrop(of:istargeted:perform:)-9t4d9","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listsubtitle\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listsubtitle\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/onswipegesture(maximumtime:minimumdistance:maximumdistance:gesturetimer:up:left:right:down:)","title":"func onSwipeGesture(maximumTime: TimeInterval, minimumDistance: CGFloat, maximumDistance: CGFloat, gestureTimer: GestureTimer, up: () -> Void, left: () -> Void, right: () -> Void, down: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listsubtitle\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/padding(_:)-27qwo","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/padding(_:)-6ag1v","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/preferspersistentsystemoverlayshidden()","title":"func prefersPersistentSystemOverlaysHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/presentationdetents(undimmed:largestundimmed:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/presentationdetents(undimmed:largestundimmed:selection:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/renameaction(_:)-61lug","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/renameaction(_:)-6hu4w","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/safeareainset(edge:alignment:spacing:content:)-66p7q","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/safeareainset(edge:alignment:spacing:content:)-9rlxe","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/scaleeffect(_:anchor:)-5au2u","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/scaleeffect(_:anchor:)-8wzuo","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/searchcompletion(_:)-2j5l0","title":"func searchCompletion<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/searchcompletion(_:)-609p5","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/searchable(if:text:placement:prompt:)","title":"func searchable(if: Bool, text: Binding<String>, placement: SearchFieldPlacement, prompt: String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/searchable(text:placement:prompt:)-4i43c","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/searchable(text:placement:prompt:)-6a2ww","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/searchable(text:placement:prompt:)-bj0j","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listsubtitle\/searchable(text:placement:prompt:suggestions:)-26xu0","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listsubtitle\/searchable(text:placement:prompt:suggestions:)-3vnpz","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listsubtitle\/searchable(text:placement:prompt:suggestions:)-64x1","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/searchable(text:tokens:placement:prompt:token:)-3a8yu","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/searchable(text:tokens:placement:prompt:token:)-56i5q","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/searchable(text:tokens:placement:prompt:token:)-7jbsa","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-1ac87","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-2x0x7","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-c8iz","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/shadow(_:)","title":"func shadow(ViewShadowStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/sheet(_:)","title":"func sheet(SheetContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/listsubtitle\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/tint(_:)-2xx4y","title":"func tint<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/tint(_:)-7lmc6","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/toolbar(content:)-4p58i","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/toolbar(content:)-9jy37","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/toolbarbackground(_:for:)-3hs87","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/toolbarbackground(_:for:)-803ys","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/visible(if:)","title":"func visible(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/width(_:)","title":"func width(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/listsubtitle\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/swiftuikit\/listsubtitle\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/swiftuikit\/listsubtitle","title":"ListSubtitle","type":"struct"},{"title":"Views\/Progress","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/style-swift.struct\/init(backgroundcolor:strokecolor:strokewidth:progresscolor:progresswidth:progressmodifier:showtitle:titlecolor:titlefont:titlemodifier:)","title":"init(backgroundColor: Color, strokeColor: Color, strokeWidth: CGFloat, progressColor: Color, progressWidth: CGFloat, progressModifier: ViewModifier, showTitle: Bool, titleColor: Color, titleFont: Font, titleModifier: ViewModifier)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/style-swift.struct\/backgroundcolor","title":"var backgroundColor: Color","type":"property"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/style-swift.struct\/progresscolor","title":"var progressColor: Color","type":"property"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/style-swift.struct\/progressmodifier","title":"var progressModifier: ViewModifier","type":"property"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/style-swift.struct\/progresswidth","title":"var progressWidth: CGFloat","type":"property"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/style-swift.struct\/showtitle","title":"var showTitle: Bool","type":"property"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/style-swift.struct\/strokecolor","title":"var strokeColor: Color","type":"property"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/style-swift.struct\/strokewidth","title":"var strokeWidth: CGFloat","type":"property"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/style-swift.struct\/titlecolor","title":"var titleColor: Color","type":"property"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/style-swift.struct\/titlefont","title":"var titleFont: Font","type":"property"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/style-swift.struct\/titlemodifier","title":"var titleModifier: ViewModifier","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/style-swift.struct\/viewmodifier","title":"CircularProgressBar.Style.ViewModifier","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/style-swift.struct\/standard","title":"static var standard: CircularProgressBar.Style","type":"property"}],"path":"\/documentation\/swiftuikit\/circularprogressbar\/style-swift.struct","title":"CircularProgressBar.Style","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/init(progress:decimals:startangle:style:)","title":"init(progress: Double, decimals: Int, startAngle: Double, style: Style)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/body","title":"var body: some View","type":"property"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/decimals","title":"let decimals: Int","type":"property"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/progress","title":"let progress: Double","type":"property"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/startangle","title":"let startAngle: Double","type":"property"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/style-swift.property","title":"let style: CircularProgressBar.Style","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/circularprogressbar\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibility(activationpoint:)-7e2yg","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibility(activationpoint:)-8v7j6","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibilityaction(named:_:)","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibilityactivationpoint(_:)-4a18c","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibilityactivationpoint(_:)-54hcb","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibilitycustomcontent(_:_:importance:)-42vya","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibilitycustomcontent(_:_:importance:)-4q9rz","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibilitycustomcontent(_:_:importance:)-6klga","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibilitycustomcontent(_:_:importance:)-6otve","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibilitycustomcontent(_:_:importance:)-7lqyy","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibilitycustomcontent(_:_:importance:)-9epu9","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibilitycustomcontent(_:_:importance:)-9r3mh","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibilitycustomcontent(_:_:importance:)-9vduq","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibilityhint(_:)-16em1","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibilityhint(_:)-5vqx1","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibilityhint(_:)-9q6kf","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibilityinputlabels(_:)-1wbxl","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibilityinputlabels(_:)-77l2v","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibilityinputlabels(_:)-t3sp","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibilitylabel(_:)-48xks","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibilitylabel(_:)-8lfhv","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibilitylabel(_:)-8u63q","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibilityrotor(_:entries:)-18ixd","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibilityrotor(_:entries:)-1q2b4","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibilityrotor(_:entries:)-3tosi","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibilityrotor(_:entries:)-5f5jg","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibilityrotor(_:entries:entryid:entrylabel:)-1de29","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibilityrotor(_:entries:entryid:entrylabel:)-1ompo","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibilityrotor(_:entries:entryid:entrylabel:)-2p2e3","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibilityrotor(_:entries:entryid:entrylabel:)-7pu7v","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibilityrotor(_:entries:entrylabel:)-2sijo","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibilityrotor(_:entries:entrylabel:)-4zcg","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibilityrotor(_:entries:entrylabel:)-5cv21","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibilityrotor(_:entries:entrylabel:)-j9v1","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibilityrotor(_:textranges:)-2oprz","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibilityrotor(_:textranges:)-3268q","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibilityrotor(_:textranges:)-5cdxn","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibilityrotor(_:textranges:)-8bm3n","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibilityvalue(_:)-1ydaz","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibilityvalue(_:)-3rig4","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/accessibilityvalue(_:)-4nm8c","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/circularprogressbar\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/circularprogressbar\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/alert(_:)","title":"func alert(AlertContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/alert(_:ispresented:actions:)-9oaah","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/alert(_:ispresented:actions:)-9wq2w","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/alert(_:ispresented:actions:)-mujj","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/alert(_:ispresented:actions:message:)-2rc3j","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/alert(_:ispresented:actions:message:)-4daq1","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/alert(_:ispresented:actions:message:)-8eszi","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/alert(_:ispresented:presenting:actions:)-1i33k","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/alert(_:ispresented:presenting:actions:)-53ren","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/alert(_:ispresented:presenting:actions:)-7blr2","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/alert(_:ispresented:presenting:actions:message:)-82l6w","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/alert(_:ispresented:presenting:actions:message:)-855ai","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/alert(_:ispresented:presenting:actions:message:)-9ifi6","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/circularprogressbar\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/circularprogressbar\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/alignmentguide(_:computevalue:)-41xlq","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/alignmentguide(_:computevalue:)-5w5tr","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/circularprogressbar\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/any()","title":"func any() -> AnyView","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/aspectratio(_:contentmode:)-1mamh","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/aspectratio(_:contentmode:)-7g0jd","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/circularprogressbar\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/autosave(_:debounceinterval:action:)","title":"func autosave<T>(Published<T>.Publisher, debounceInterval: RunLoop.SchedulerTimeType.Stride, action: () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/circularprogressbar\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/background(_:in:fillstyle:)-1823n","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/background(_:in:fillstyle:)-6nz7p","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/background(in:fillstyle:)-1ihkt","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/background(in:fillstyle:)-7vysm","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/badge(_:)-1uklz","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/badge(_:)-8o1dz","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/badge(_:)-8oq50","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/badge(_:)-98tvm","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/bindsafeareainsets(to:)","title":"func bindSafeAreaInsets(to: Binding<EdgeInsets>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/bindsize(to:)","title":"func bindSize(to: Binding<CGSize>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/border(_:width:cornerradius:)","title":"func border<Content>(Content, width: CGFloat, cornerRadius: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/buttonstyle(_:)-20vr5","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/buttonstyle(_:)-ipix","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/circularprogressbar\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/confirmationdialog(_:ispresented:titlevisibility:actions:)-41aq2","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/confirmationdialog(_:ispresented:titlevisibility:actions:)-6z6jm","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/confirmationdialog(_:ispresented:titlevisibility:actions:)-7nz1r","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-28nkp","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-2gg77","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-46nic","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-4ugxd","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-5zltf","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-9n25u","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-3w4c7","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-9xami","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-abes","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/circularprogressbar\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/circularprogressbar\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/cornerradius(_:)","title":"func cornerRadius(CornerRadiusStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/circularprogressbar\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/disabledynamictype(sizecategory:)","title":"func disableDynamicType(sizeCategory: ContentSizeCategory) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/dynamictypesize(_:)-21ijk","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/dynamictypesize(_:)-48c76","title":"func dynamicTypeSize<T>(T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/circularprogressbar\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/enabled(_:)","title":"func enabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-77je5","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-7khyf","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/fileexporter(ispresented:documents:contenttype:oncompletion:)-23tb3","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/fileexporter(ispresented:documents:contenttype:oncompletion:)-639j7","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/focusedobject(_:)-4y0vr","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/focusedobject(_:)-mphd","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/focusedsceneobject(_:)-1ag1l","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/focusedsceneobject(_:)-o5lf","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/focusedscenevalue(_:_:)-3s3ja","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/focusedscenevalue(_:_:)-3t3gd","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/focusedvalue(_:_:)-4wt2","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/focusedvalue(_:_:)-5phes","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/font(_:)-4c3fc","title":"func font(FontStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/font(_:)-4hxbm","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/font(identifier:style:weight:)","title":"func font(identifier: FontIdentifier, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/font(name:style:weight:)","title":"func font(name: String, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/frame(_:)","title":"func frame(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/frame(square:)","title":"func frame(square: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/fullscreencover(_:)","title":"func fullScreenCover(FullScreenCoverContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/height(_:)","title":"func height(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/help(_:)-8v37c","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/help(_:)-a2jv","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/help(_:)-uah6","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/hidden(if:)","title":"func hidden(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/hidekeyboard()","title":"func hideKeyboard()","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/keyboardshortcut(_:)-2ebn8","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/keyboardshortcut(_:)-8bb06","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/linelimit(_:)","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/listitemtint(_:)-2mbb0","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/listitemtint(_:)-3lx6r","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/circularprogressbar\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/circularprogressbar\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/circularprogressbar\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/circularprogressbar\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/circularprogressbar\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/circularprogressbar\/navigationbartitle(_:)-4sjt4","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/circularprogressbar\/navigationbartitle(_:)-909h1","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/circularprogressbar\/navigationbartitle(_:)-gp7y","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/circularprogressbar\/navigationbartitle(_:displaymode:)-507qj","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/circularprogressbar\/navigationbartitle(_:displaymode:)-5x65m","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/circularprogressbar\/navigationbartitle(_:displaymode:)-9dv7l","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/navigationdocument(_:)-7o7jv","title":"func navigationDocument<D>(D) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/navigationdocument(_:)-syq4","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/navigationdocument(_:preview:)-16kqg","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/navigationdocument(_:preview:)-2u8ww","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/navigationdocument(_:preview:)-8bxhi","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/navigationdocument(_:preview:)-shtf","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/navigationtitle(_:)-14nj6","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/navigationtitle(_:)-1wmea","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/navigationtitle(_:)-3iv6f","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/navigationtitle(_:)-9seax","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/navigationtitle(_:)-yq9a","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/circularprogressbar\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/ondrop(of:delegate:)-3xtzx","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/circularprogressbar\/ondrop(of:delegate:)-5gyrp","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/ondrop(of:istargeted:perform:)-2l95o","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/circularprogressbar\/ondrop(of:istargeted:perform:)-7l1yi","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/circularprogressbar\/ondrop(of:istargeted:perform:)-7s32c","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/ondrop(of:istargeted:perform:)-z8gf","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/circularprogressbar\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/circularprogressbar\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/onswipegesture(maximumtime:minimumdistance:maximumdistance:gesturetimer:up:left:right:down:)","title":"func onSwipeGesture(maximumTime: TimeInterval, minimumDistance: CGFloat, maximumDistance: CGFloat, gestureTimer: GestureTimer, up: () -> Void, left: () -> Void, right: () -> Void, down: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/circularprogressbar\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/padding(_:)-2cym5","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/padding(_:)-7m1t1","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/preferspersistentsystemoverlayshidden()","title":"func prefersPersistentSystemOverlaysHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/presentationdetents(undimmed:largestundimmed:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/presentationdetents(undimmed:largestundimmed:selection:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/renameaction(_:)-5o37t","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/renameaction(_:)-7ho6u","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/safeareainset(edge:alignment:spacing:content:)-1hfwg","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/safeareainset(edge:alignment:spacing:content:)-69pok","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/scaleeffect(_:anchor:)-7eoyv","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/scaleeffect(_:anchor:)-8p3zb","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/searchcompletion(_:)-668is","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/searchcompletion(_:)-6znow","title":"func searchCompletion<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/searchable(if:text:placement:prompt:)","title":"func searchable(if: Bool, text: Binding<String>, placement: SearchFieldPlacement, prompt: String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/searchable(text:placement:prompt:)-1coqu","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/searchable(text:placement:prompt:)-2mf9b","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/searchable(text:placement:prompt:)-6bkk7","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/circularprogressbar\/searchable(text:placement:prompt:suggestions:)-5y29r","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/circularprogressbar\/searchable(text:placement:prompt:suggestions:)-9juan","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/circularprogressbar\/searchable(text:placement:prompt:suggestions:)-d1s2","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/searchable(text:tokens:placement:prompt:token:)-8u6xt","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/searchable(text:tokens:placement:prompt:token:)-hum3","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/searchable(text:tokens:placement:prompt:token:)-szkf","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-26bc6","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-333t4","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-3ss5g","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/shadow(_:)","title":"func shadow(ViewShadowStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/sheet(_:)","title":"func sheet(SheetContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/circularprogressbar\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/tint(_:)-2yvhl","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/tint(_:)-5aqex","title":"func tint<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/toolbar(content:)-1czjb","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/toolbar(content:)-2om3y","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/toolbarbackground(_:for:)-1tw6","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/toolbarbackground(_:for:)-r66c","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/visible(if:)","title":"func visible(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/width(_:)","title":"func width(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/circularprogressbar\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/swiftuikit\/circularprogressbar\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/swiftuikit\/circularprogressbar","title":"CircularProgressBar","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/style-swift.struct\/init(height:backgroundmaterial:backgroundmaterialopacity:backgroundcolor:barcolor:barpadding:barshadow:)","title":"init(height: Double, backgroundMaterial: Material, backgroundMaterialOpacity: Double, backgroundColor: Color, barColor: Color, barPadding: Double, barShadow: ViewShadowStyle)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/style-swift.struct\/backgroundcolor","title":"var backgroundColor: Color","type":"property"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/style-swift.struct\/backgroundmaterial","title":"var backgroundMaterial: Material","type":"property"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/style-swift.struct\/backgroundmaterialopacity","title":"var backgroundMaterialOpacity: Double","type":"property"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/style-swift.struct\/barcolor","title":"var barColor: Color","type":"property"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/style-swift.struct\/barpadding","title":"var barPadding: Double","type":"property"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/style-swift.struct\/barshadow","title":"var barShadow: ViewShadowStyle","type":"property"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/style-swift.struct\/height","title":"var height: Double","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/style-swift.struct\/viewmodifier","title":"LinearProgressBar.Style.ViewModifier","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/style-swift.struct\/padding","title":"static var padding: LinearProgressBar.Style","type":"property"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/style-swift.struct\/standard","title":"static var standard: LinearProgressBar.Style","type":"property"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/style-swift.struct\/tallpadding","title":"static var tallPadding: LinearProgressBar.Style","type":"property"}],"path":"\/documentation\/swiftuikit\/linearprogressbar\/style-swift.struct","title":"LinearProgressBar.Style","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/init(progress:style:animation:)","title":"init(progress: Double, style: Style, animation: Animation)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/animation","title":"let animation: Animation","type":"property"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/body","title":"var body: some View","type":"property"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/progress","title":"var progress: Double","type":"property"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/style-swift.property","title":"let style: LinearProgressBar.Style","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/linearprogressbar\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibility(activationpoint:)-1kjkd","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibility(activationpoint:)-2iagc","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibilityaction(named:_:)","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibilityactivationpoint(_:)-1vbwm","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibilityactivationpoint(_:)-6i47l","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibilitycustomcontent(_:_:importance:)-19ri9","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibilitycustomcontent(_:_:importance:)-29ds0","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibilitycustomcontent(_:_:importance:)-4nxj3","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibilitycustomcontent(_:_:importance:)-5gqtn","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibilitycustomcontent(_:_:importance:)-5l4nl","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibilitycustomcontent(_:_:importance:)-7hph6","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibilitycustomcontent(_:_:importance:)-7xxex","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibilitycustomcontent(_:_:importance:)-96lf2","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibilityhint(_:)-1s0yy","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibilityhint(_:)-335ap","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibilityhint(_:)-3xeqj","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibilityinputlabels(_:)-37qmc","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibilityinputlabels(_:)-5283i","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibilityinputlabels(_:)-9mf09","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibilitylabel(_:)-32i0q","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibilitylabel(_:)-3tcdq","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibilitylabel(_:)-95ol7","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibilityrotor(_:entries:)-1f405","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibilityrotor(_:entries:)-2qo2z","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibilityrotor(_:entries:)-7zegy","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibilityrotor(_:entries:)-96ga9","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibilityrotor(_:entries:entryid:entrylabel:)-4ecvb","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibilityrotor(_:entries:entryid:entrylabel:)-4f3hc","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibilityrotor(_:entries:entryid:entrylabel:)-8t7cr","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibilityrotor(_:entries:entryid:entrylabel:)-9fwvd","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibilityrotor(_:entries:entrylabel:)-26oma","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibilityrotor(_:entries:entrylabel:)-4by8v","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibilityrotor(_:entries:entrylabel:)-7370v","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibilityrotor(_:entries:entrylabel:)-lfho","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibilityrotor(_:textranges:)-4ouul","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibilityrotor(_:textranges:)-5nxb","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibilityrotor(_:textranges:)-9wi0i","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibilityrotor(_:textranges:)-lgw9","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibilityvalue(_:)-1ainr","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibilityvalue(_:)-1oaj8","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/accessibilityvalue(_:)-1xli6","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/linearprogressbar\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/linearprogressbar\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/alert(_:)","title":"func alert(AlertContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/alert(_:ispresented:actions:)-1ej7o","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/alert(_:ispresented:actions:)-1v7c8","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/alert(_:ispresented:actions:)-8jgvh","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/alert(_:ispresented:actions:message:)-51sn5","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/alert(_:ispresented:actions:message:)-6wpdf","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/alert(_:ispresented:actions:message:)-pwd1","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/alert(_:ispresented:presenting:actions:)-6uqls","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/alert(_:ispresented:presenting:actions:)-81f79","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/alert(_:ispresented:presenting:actions:)-9pfuw","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/alert(_:ispresented:presenting:actions:message:)-8fjvm","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/alert(_:ispresented:presenting:actions:message:)-8g5e8","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/alert(_:ispresented:presenting:actions:message:)-8xf2b","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/linearprogressbar\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/linearprogressbar\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/alignmentguide(_:computevalue:)-5mzfj","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/alignmentguide(_:computevalue:)-7vx24","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/linearprogressbar\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/any()","title":"func any() -> AnyView","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/aspectratio(_:contentmode:)-6cs47","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/aspectratio(_:contentmode:)-8jhdn","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/linearprogressbar\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/autosave(_:debounceinterval:action:)","title":"func autosave<T>(Published<T>.Publisher, debounceInterval: RunLoop.SchedulerTimeType.Stride, action: () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/linearprogressbar\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/background(_:in:fillstyle:)-3e8bv","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/background(_:in:fillstyle:)-3hjyu","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/background(in:fillstyle:)-9efz6","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/background(in:fillstyle:)-a94z","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/badge(_:)-1qqmd","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/badge(_:)-4yngl","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/badge(_:)-5kdt","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/badge(_:)-7gkix","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/bindsafeareainsets(to:)","title":"func bindSafeAreaInsets(to: Binding<EdgeInsets>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/bindsize(to:)","title":"func bindSize(to: Binding<CGSize>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/border(_:width:cornerradius:)","title":"func border<Content>(Content, width: CGFloat, cornerRadius: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/buttonstyle(_:)-2obga","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/buttonstyle(_:)-9kh2l","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/linearprogressbar\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/confirmationdialog(_:ispresented:titlevisibility:actions:)-1g7l3","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/confirmationdialog(_:ispresented:titlevisibility:actions:)-1lguw","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/confirmationdialog(_:ispresented:titlevisibility:actions:)-6yjle","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-1l67m","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-44lf3","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-6dz6t","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-32e65","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-6acts","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-81l1c","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-1fzb1","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-4le4q","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-7x0dz","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/linearprogressbar\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/linearprogressbar\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/cornerradius(_:)","title":"func cornerRadius(CornerRadiusStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/linearprogressbar\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/disabledynamictype(sizecategory:)","title":"func disableDynamicType(sizeCategory: ContentSizeCategory) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/dynamictypesize(_:)-15po4","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/dynamictypesize(_:)-52zpw","title":"func dynamicTypeSize<T>(T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/linearprogressbar\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/enabled(_:)","title":"func enabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-4mje9","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-7jfwd","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/fileexporter(ispresented:documents:contenttype:oncompletion:)-1a7p0","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/fileexporter(ispresented:documents:contenttype:oncompletion:)-fx38","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/focusedobject(_:)-4ag5f","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/focusedobject(_:)-6rzws","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/focusedsceneobject(_:)-164rf","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/focusedsceneobject(_:)-7fepr","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/focusedscenevalue(_:_:)-3fuod","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/focusedscenevalue(_:_:)-3no53","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/focusedvalue(_:_:)-98br0","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/focusedvalue(_:_:)-9raql","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/font(_:)-33z3g","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/font(_:)-6ayui","title":"func font(FontStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/font(identifier:style:weight:)","title":"func font(identifier: FontIdentifier, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/font(name:style:weight:)","title":"func font(name: String, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/frame(_:)","title":"func frame(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/frame(square:)","title":"func frame(square: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/fullscreencover(_:)","title":"func fullScreenCover(FullScreenCoverContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/height(_:)","title":"func height(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/help(_:)-3rkvg","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/help(_:)-4alnu","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/help(_:)-5kr9y","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/hidden(if:)","title":"func hidden(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/hidekeyboard()","title":"func hideKeyboard()","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/keyboardshortcut(_:)-270yz","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/keyboardshortcut(_:)-t5f1","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/linelimit(_:)","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/listitemtint(_:)-6665b","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/listitemtint(_:)-738s4","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/linearprogressbar\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/linearprogressbar\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/linearprogressbar\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/linearprogressbar\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/linearprogressbar\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/linearprogressbar\/navigationbartitle(_:)-2m2pw","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/linearprogressbar\/navigationbartitle(_:)-6l7a5","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/linearprogressbar\/navigationbartitle(_:)-9cz32","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/linearprogressbar\/navigationbartitle(_:displaymode:)-197fr","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/linearprogressbar\/navigationbartitle(_:displaymode:)-1y6ne","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/linearprogressbar\/navigationbartitle(_:displaymode:)-92e2a","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/navigationdocument(_:)-1mj2u","title":"func navigationDocument<D>(D) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/navigationdocument(_:)-6hi5u","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/navigationdocument(_:preview:)-2qyyg","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/navigationdocument(_:preview:)-6eluf","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/navigationdocument(_:preview:)-890sf","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/navigationdocument(_:preview:)-8ihrd","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/navigationtitle(_:)-1ejhv","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/navigationtitle(_:)-2blka","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/navigationtitle(_:)-5phym","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/navigationtitle(_:)-75ryp","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/navigationtitle(_:)-j973","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/linearprogressbar\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/ondrop(of:delegate:)-57b3o","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/linearprogressbar\/ondrop(of:delegate:)-a40p","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/ondrop(of:istargeted:perform:)-3luzw","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/ondrop(of:istargeted:perform:)-3uji2","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/linearprogressbar\/ondrop(of:istargeted:perform:)-8e6qo","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/linearprogressbar\/ondrop(of:istargeted:perform:)-rgvl","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/linearprogressbar\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/linearprogressbar\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/onswipegesture(maximumtime:minimumdistance:maximumdistance:gesturetimer:up:left:right:down:)","title":"func onSwipeGesture(maximumTime: TimeInterval, minimumDistance: CGFloat, maximumDistance: CGFloat, gestureTimer: GestureTimer, up: () -> Void, left: () -> Void, right: () -> Void, down: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/linearprogressbar\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/padding(_:)-1gds0","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/padding(_:)-9ahn","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/preferspersistentsystemoverlayshidden()","title":"func prefersPersistentSystemOverlaysHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/presentationdetents(undimmed:largestundimmed:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/presentationdetents(undimmed:largestundimmed:selection:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/renameaction(_:)-2hhh7","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/renameaction(_:)-9s7z4","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/safeareainset(edge:alignment:spacing:content:)-1ddba","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/safeareainset(edge:alignment:spacing:content:)-qigp","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/scaleeffect(_:anchor:)-5pusz","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/scaleeffect(_:anchor:)-77ts6","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/searchcompletion(_:)-3q6k9","title":"func searchCompletion<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/searchcompletion(_:)-79mng","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/searchable(if:text:placement:prompt:)","title":"func searchable(if: Bool, text: Binding<String>, placement: SearchFieldPlacement, prompt: String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/searchable(text:placement:prompt:)-22u3q","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/searchable(text:placement:prompt:)-4ivo2","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/searchable(text:placement:prompt:)-9ihxe","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/linearprogressbar\/searchable(text:placement:prompt:suggestions:)-34nks","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/linearprogressbar\/searchable(text:placement:prompt:suggestions:)-5buwm","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/linearprogressbar\/searchable(text:placement:prompt:suggestions:)-775ey","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/searchable(text:tokens:placement:prompt:token:)-2b20d","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/searchable(text:tokens:placement:prompt:token:)-4jepd","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/searchable(text:tokens:placement:prompt:token:)-4ot5n","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-1q1fk","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-22il6","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-5fl16","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/shadow(_:)","title":"func shadow(ViewShadowStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/sheet(_:)","title":"func sheet(SheetContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/linearprogressbar\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/toolbar(content:)-2idb9","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/toolbar(content:)-614zb","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/toolbarbackground(_:for:)-4mf0w","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/toolbarbackground(_:for:)-9tml6","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/visible(if:)","title":"func visible(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/width(_:)","title":"func width(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/linearprogressbar\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/swiftuikit\/linearprogressbar\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/swiftuikit\/linearprogressbar","title":"LinearProgressBar","type":"struct"},{"title":"Views\/Text","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/multilinetext\/init(_:)","title":"init(String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/multilinetext\/body","title":"var body: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetext\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetext\/accessibility(activationpoint:)-102na","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetext\/accessibility(activationpoint:)-54xf6","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetext\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetext\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetext\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetext\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetext\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetext\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetext\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetext\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetext\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/accessibilityaction(named:_:)","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/accessibilityactivationpoint(_:)-10cx8","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/accessibilityactivationpoint(_:)-15q0h","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/accessibilitycustomcontent(_:_:importance:)-2gm6a","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/accessibilitycustomcontent(_:_:importance:)-2lmro","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/accessibilitycustomcontent(_:_:importance:)-3yd14","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/accessibilitycustomcontent(_:_:importance:)-5kssp","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/accessibilitycustomcontent(_:_:importance:)-62arf","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/accessibilitycustomcontent(_:_:importance:)-93l08","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/accessibilitycustomcontent(_:_:importance:)-9o7lp","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/accessibilitycustomcontent(_:_:importance:)-9yc5z","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/accessibilityhint(_:)-2ax52","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/accessibilityhint(_:)-43fkc","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/accessibilityhint(_:)-8re9v","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/accessibilityinputlabels(_:)-3py5r","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/accessibilityinputlabels(_:)-423g9","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/accessibilityinputlabels(_:)-4ap2w","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/accessibilitylabel(_:)-5kqwx","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/accessibilitylabel(_:)-6tep0","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/accessibilitylabel(_:)-9x6fu","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/accessibilityrotor(_:entries:)-4hc4m","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/accessibilityrotor(_:entries:)-7ijv8","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/accessibilityrotor(_:entries:)-9vlnz","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/accessibilityrotor(_:entries:)-gj0x","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/accessibilityrotor(_:entries:entryid:entrylabel:)-1wszd","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/accessibilityrotor(_:entries:entryid:entrylabel:)-3n7an","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/accessibilityrotor(_:entries:entryid:entrylabel:)-739kn","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/accessibilityrotor(_:entries:entryid:entrylabel:)-8n6rq","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/accessibilityrotor(_:entries:entrylabel:)-416vi","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/accessibilityrotor(_:entries:entrylabel:)-41e3","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/accessibilityrotor(_:entries:entrylabel:)-43edy","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/accessibilityrotor(_:entries:entrylabel:)-7s2q","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/accessibilityrotor(_:textranges:)-36iyp","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/accessibilityrotor(_:textranges:)-8774m","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/accessibilityrotor(_:textranges:)-9op3l","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/accessibilityrotor(_:textranges:)-urjv","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/accessibilityvalue(_:)-1xbn8","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/accessibilityvalue(_:)-2xx03","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/accessibilityvalue(_:)-3kp3p","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetext\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetext\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/alert(_:)","title":"func alert(AlertContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/alert(_:ispresented:actions:)-2xku2","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/alert(_:ispresented:actions:)-3qqep","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/alert(_:ispresented:actions:)-57jzv","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/alert(_:ispresented:actions:message:)-12pth","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/alert(_:ispresented:actions:message:)-2xqkj","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/alert(_:ispresented:actions:message:)-9v8r5","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/alert(_:ispresented:presenting:actions:)-41gp2","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/alert(_:ispresented:presenting:actions:)-6kn33","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/alert(_:ispresented:presenting:actions:)-95dgb","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/alert(_:ispresented:presenting:actions:message:)-3wdyk","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/alert(_:ispresented:presenting:actions:message:)-7xdmi","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/alert(_:ispresented:presenting:actions:message:)-9h3b8","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetext\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetext\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/alignmentguide(_:computevalue:)-239uj","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/alignmentguide(_:computevalue:)-4bq6i","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetext\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/any()","title":"func any() -> AnyView","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/aspectratio(_:contentmode:)-58hlj","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/aspectratio(_:contentmode:)-9fsqn","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetext\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/autosave(_:debounceinterval:action:)","title":"func autosave<T>(Published<T>.Publisher, debounceInterval: RunLoop.SchedulerTimeType.Stride, action: () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetext\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/background(_:in:fillstyle:)-4wfm0","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/background(_:in:fillstyle:)-79m6d","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/background(in:fillstyle:)-5923e","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/background(in:fillstyle:)-6zxiz","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/badge(_:)-3j11w","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/badge(_:)-53xe9","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/badge(_:)-577cs","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/badge(_:)-9dpr9","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/bindsafeareainsets(to:)","title":"func bindSafeAreaInsets(to: Binding<EdgeInsets>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/bindsize(to:)","title":"func bindSize(to: Binding<CGSize>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/border(_:width:cornerradius:)","title":"func border<Content>(Content, width: CGFloat, cornerRadius: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/buttonstyle(_:)-3q5x4","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/buttonstyle(_:)-8dugc","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetext\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/confirmationdialog(_:ispresented:titlevisibility:actions:)-1qs40","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/confirmationdialog(_:ispresented:titlevisibility:actions:)-4h0j5","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/confirmationdialog(_:ispresented:titlevisibility:actions:)-9t00e","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-52qzg","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-an4q","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-kmkz","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-1d7fg","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-371y6","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-4rit1","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-4wksh","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-7684o","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-8j347","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetext\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetext\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/cornerradius(_:)","title":"func cornerRadius(CornerRadiusStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetext\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/disabledynamictype(sizecategory:)","title":"func disableDynamicType(sizeCategory: ContentSizeCategory) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/dynamictypesize(_:)-4ttnd","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/dynamictypesize(_:)-8iny1","title":"func dynamicTypeSize<T>(T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetext\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/enabled(_:)","title":"func enabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-8x1mk","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-92pf9","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/fileexporter(ispresented:documents:contenttype:oncompletion:)-1q3qe","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/fileexporter(ispresented:documents:contenttype:oncompletion:)-2uunh","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/focusedobject(_:)-8w58j","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/focusedobject(_:)-yeih","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/focusedsceneobject(_:)-9cuay","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/focusedsceneobject(_:)-ekiz","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/focusedscenevalue(_:_:)-297vg","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/focusedscenevalue(_:_:)-2tyx4","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/focusedvalue(_:_:)-3hogh","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/focusedvalue(_:_:)-7pmcw","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/font(_:)-2qeva","title":"func font(FontStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/font(_:)-86x5a","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/font(identifier:style:weight:)","title":"func font(identifier: FontIdentifier, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/font(name:style:weight:)","title":"func font(name: String, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/frame(_:)","title":"func frame(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/frame(square:)","title":"func frame(square: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/fullscreencover(_:)","title":"func fullScreenCover(FullScreenCoverContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/height(_:)","title":"func height(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/help(_:)-28kfz","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/help(_:)-61nvq","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/help(_:)-94ox8","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/hidden(if:)","title":"func hidden(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/hidekeyboard()","title":"func hideKeyboard()","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/keyboardshortcut(_:)-1tsxy","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/keyboardshortcut(_:)-65ocv","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/linelimit(_:)","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/listitemtint(_:)-1615y","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/listitemtint(_:)-95r63","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetext\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetext\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetext\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetext\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetext\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetext\/navigationbartitle(_:)-4cu2u","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetext\/navigationbartitle(_:)-4ehv0","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetext\/navigationbartitle(_:)-z23q","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetext\/navigationbartitle(_:displaymode:)-11i9r","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetext\/navigationbartitle(_:displaymode:)-13vfq","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetext\/navigationbartitle(_:displaymode:)-1dy54","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/navigationdocument(_:)-36219","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/navigationdocument(_:)-8tzn7","title":"func navigationDocument<D>(D) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/navigationdocument(_:preview:)-1dkfy","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/navigationdocument(_:preview:)-1uq4z","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/navigationdocument(_:preview:)-3zba6","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/navigationdocument(_:preview:)-78cj5","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/navigationtitle(_:)-45i6z","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/navigationtitle(_:)-5bab5","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/navigationtitle(_:)-6f8l3","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/navigationtitle(_:)-79fnl","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/navigationtitle(_:)-ujp4","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetext\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetext\/ondrop(of:delegate:)-4gkod","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/ondrop(of:delegate:)-9iomu","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetext\/ondrop(of:istargeted:perform:)-3jyf4","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/ondrop(of:istargeted:perform:)-3zy7k","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/ondrop(of:istargeted:perform:)-5c60m","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetext\/ondrop(of:istargeted:perform:)-77hq4","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetext\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetext\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/onswipegesture(maximumtime:minimumdistance:maximumdistance:gesturetimer:up:left:right:down:)","title":"func onSwipeGesture(maximumTime: TimeInterval, minimumDistance: CGFloat, maximumDistance: CGFloat, gestureTimer: GestureTimer, up: () -> Void, left: () -> Void, right: () -> Void, down: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetext\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/padding(_:)-4tzj4","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/padding(_:)-5vxwh","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/preferspersistentsystemoverlayshidden()","title":"func prefersPersistentSystemOverlaysHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/presentationdetents(undimmed:largestundimmed:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/presentationdetents(undimmed:largestundimmed:selection:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/renameaction(_:)-3xfkz","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/renameaction(_:)-46ek1","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/safeareainset(edge:alignment:spacing:content:)-5v57n","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/safeareainset(edge:alignment:spacing:content:)-81l59","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/scaleeffect(_:anchor:)-6km1y","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/scaleeffect(_:anchor:)-6ojoe","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/searchcompletion(_:)-1oh2b","title":"func searchCompletion<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/searchcompletion(_:)-54iwf","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/searchable(if:text:placement:prompt:)","title":"func searchable(if: Bool, text: Binding<String>, placement: SearchFieldPlacement, prompt: String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/searchable(text:placement:prompt:)-2moxg","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/searchable(text:placement:prompt:)-600ck","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/searchable(text:placement:prompt:)-6tv9x","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetext\/searchable(text:placement:prompt:suggestions:)-14rp2","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetext\/searchable(text:placement:prompt:suggestions:)-3sao2","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetext\/searchable(text:placement:prompt:suggestions:)-4bazc","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/searchable(text:tokens:placement:prompt:token:)-6uvrn","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/searchable(text:tokens:placement:prompt:token:)-87jsi","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/searchable(text:tokens:placement:prompt:token:)-942c0","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-6uiuf","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-7h2la","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-8xtct","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/shadow(_:)","title":"func shadow(ViewShadowStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/sheet(_:)","title":"func sheet(SheetContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetext\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/tint(_:)-184cz","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/tint(_:)-1bp0r","title":"func tint<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/toolbar(content:)-5lj98","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/toolbar(content:)-9dgc3","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/toolbarbackground(_:for:)-11tfs","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/toolbarbackground(_:for:)-151al","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/visible(if:)","title":"func visible(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/width(_:)","title":"func width(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetext\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/swiftuikit\/multilinetext\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/swiftuikit\/multilinetext","title":"MultilineText","type":"struct"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/coordinator\/init(text:)","title":"init(text: Binding<String>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/coordinator\/text","title":"var text: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/coordinator\/textviewdidchange(_:)","title":"func textViewDidChange(UITextView)","type":"method"}],"path":"\/documentation\/swiftuikit\/multilinetextfield\/coordinator","title":"MultilineTextField.Coordinator","type":"class"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/init(text:configuration:)","title":"init(text: Binding<String>, configuration: Configuration)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/text","title":"var text: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/makecoordinator()","title":"func makeCoordinator() -> Coordinator","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/makeuiview(context:)","title":"func makeUIView(context: Context) -> UITextView","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/updateuiview(_:context:)","title":"func updateUIView(UITextView, context: Context)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/configuration","title":"MultilineTextField.Configuration","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/body","title":"var body: Never","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/sizethatfits(_:uiview:context:)","title":"func sizeThatFits(ProposedViewSize, uiView: Self.UIViewType, context: Self.Context) -> CGSize?","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/dismantleuiview(_:coordinator:)","title":"static func dismantleUIView(Self.UIViewType, coordinator: Self.Coordinator)","type":"method"}],"path":"\/documentation\/swiftuikit\/multilinetextfield\/uiviewrepresentable-implementations","title":"UIViewRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetextfield\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibility(activationpoint:)-12h3w","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibility(activationpoint:)-8xtg1","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibilityaction(named:_:)","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibilityactivationpoint(_:)-3zi2k","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibilityactivationpoint(_:)-7d6h2","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibilitycustomcontent(_:_:importance:)-1zu3m","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibilitycustomcontent(_:_:importance:)-2jz6h","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibilitycustomcontent(_:_:importance:)-2nhkr","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibilitycustomcontent(_:_:importance:)-4acqx","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibilitycustomcontent(_:_:importance:)-7qgj9","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibilitycustomcontent(_:_:importance:)-7san1","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibilitycustomcontent(_:_:importance:)-8j239","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibilitycustomcontent(_:_:importance:)-8wyh4","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibilityhint(_:)-59ngf","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibilityhint(_:)-8p9le","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibilityhint(_:)-8w1r6","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibilityinputlabels(_:)-1wsgj","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibilityinputlabels(_:)-2q9d","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibilityinputlabels(_:)-64kuf","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibilitylabel(_:)-7acw2","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibilitylabel(_:)-83kjw","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibilitylabel(_:)-9gpcy","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibilityrotor(_:entries:)-62fla","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibilityrotor(_:entries:)-784oi","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibilityrotor(_:entries:)-9b3y5","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibilityrotor(_:entries:)-vogk","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibilityrotor(_:entries:entryid:entrylabel:)-63abt","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibilityrotor(_:entries:entryid:entrylabel:)-6g2v8","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibilityrotor(_:entries:entryid:entrylabel:)-8ub1l","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibilityrotor(_:entries:entryid:entrylabel:)-94vm8","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibilityrotor(_:entries:entrylabel:)-2ga6s","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibilityrotor(_:entries:entrylabel:)-85wsr","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibilityrotor(_:entries:entrylabel:)-918si","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibilityrotor(_:entries:entrylabel:)-9pcz6","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibilityrotor(_:textranges:)-14toa","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibilityrotor(_:textranges:)-3gwc0","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibilityrotor(_:textranges:)-5dym8","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibilityrotor(_:textranges:)-7xq68","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibilityvalue(_:)-44yff","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibilityvalue(_:)-5biyl","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/accessibilityvalue(_:)-jhkq","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetextfield\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetextfield\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/alert(_:)","title":"func alert(AlertContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/alert(_:ispresented:actions:)-1867u","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/alert(_:ispresented:actions:)-3fstp","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/alert(_:ispresented:actions:)-7j54x","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/alert(_:ispresented:actions:message:)-3p2m8","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/alert(_:ispresented:actions:message:)-3pwmo","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/alert(_:ispresented:actions:message:)-d25l","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/alert(_:ispresented:presenting:actions:)-357bd","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/alert(_:ispresented:presenting:actions:)-5vjl","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/alert(_:ispresented:presenting:actions:)-980rr","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/alert(_:ispresented:presenting:actions:message:)-52kif","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/alert(_:ispresented:presenting:actions:message:)-6rjpb","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/alert(_:ispresented:presenting:actions:message:)-8mdny","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetextfield\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetextfield\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/alignmentguide(_:computevalue:)-3jvta","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/alignmentguide(_:computevalue:)-99j33","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetextfield\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/any()","title":"func any() -> AnyView","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/aspectratio(_:contentmode:)-503hj","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/aspectratio(_:contentmode:)-8puje","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetextfield\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/autosave(_:debounceinterval:action:)","title":"func autosave<T>(Published<T>.Publisher, debounceInterval: RunLoop.SchedulerTimeType.Stride, action: () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetextfield\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/background(_:in:fillstyle:)-2vqnl","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/background(_:in:fillstyle:)-8yixn","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/background(in:fillstyle:)-8cdz0","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/background(in:fillstyle:)-zrx3","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/badge(_:)-2l6g4","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/badge(_:)-2nxvb","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/badge(_:)-4amrx","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/badge(_:)-5j4wh","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/bindsafeareainsets(to:)","title":"func bindSafeAreaInsets(to: Binding<EdgeInsets>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/bindsize(to:)","title":"func bindSize(to: Binding<CGSize>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/border(_:width:cornerradius:)","title":"func border<Content>(Content, width: CGFloat, cornerRadius: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/buttonstyle(_:)-8lck3","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/buttonstyle(_:)-9kwsk","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetextfield\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/confirmationdialog(_:ispresented:titlevisibility:actions:)-5oux5","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/confirmationdialog(_:ispresented:titlevisibility:actions:)-6v02c","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/confirmationdialog(_:ispresented:titlevisibility:actions:)-79r5l","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-1jbor","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-4mz63","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-8fnla","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-1j6fz","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-4pdb1","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-85wlk","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-2grbl","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-4esx","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-4rkx0","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetextfield\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetextfield\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/cornerradius(_:)","title":"func cornerRadius(CornerRadiusStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetextfield\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/disabledynamictype(sizecategory:)","title":"func disableDynamicType(sizeCategory: ContentSizeCategory) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/dynamictypesize(_:)-5o5gx","title":"func dynamicTypeSize<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/dynamictypesize(_:)-7kha6","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetextfield\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/enabled(_:)","title":"func enabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-6t97k","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-8t12p","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/fileexporter(ispresented:documents:contenttype:oncompletion:)-5zswl","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/fileexporter(ispresented:documents:contenttype:oncompletion:)-97c4r","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/focusedobject(_:)-38vbv","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/focusedobject(_:)-5swrj","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/focusedsceneobject(_:)-5di71","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/focusedsceneobject(_:)-6p5s","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/focusedscenevalue(_:_:)-8uo32","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/focusedscenevalue(_:_:)-9106o","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/focusedvalue(_:_:)-1slo4","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/focusedvalue(_:_:)-4n5ce","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/font(_:)-6clmn","title":"func font(FontStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/font(_:)-709z","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/font(identifier:style:weight:)","title":"func font(identifier: FontIdentifier, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/font(name:style:weight:)","title":"func font(name: String, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/frame(_:)","title":"func frame(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/frame(square:)","title":"func frame(square: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/fullscreencover(_:)","title":"func fullScreenCover(FullScreenCoverContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/height(_:)","title":"func height(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/help(_:)-1z1an","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/help(_:)-8pgi6","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/help(_:)-xswx","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/hidden(if:)","title":"func hidden(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/hidekeyboard()","title":"func hideKeyboard()","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/keyboardshortcut(_:)-5e9sp","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/keyboardshortcut(_:)-wc07","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/linelimit(_:)","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/listitemtint(_:)-4noj1","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/listitemtint(_:)-8lo9d","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetextfield\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetextfield\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetextfield\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetextfield\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetextfield\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetextfield\/navigationbartitle(_:)-28gzw","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetextfield\/navigationbartitle(_:)-5y3um","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetextfield\/navigationbartitle(_:)-7havp","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetextfield\/navigationbartitle(_:displaymode:)-290z5","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetextfield\/navigationbartitle(_:displaymode:)-94w9m","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetextfield\/navigationbartitle(_:displaymode:)-9pfbz","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/navigationdocument(_:)-26281","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/navigationdocument(_:)-7eks4","title":"func navigationDocument<D>(D) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/navigationdocument(_:preview:)-1zj6q","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/navigationdocument(_:preview:)-4alrl","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/navigationdocument(_:preview:)-79n0t","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/navigationdocument(_:preview:)-9b2um","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/navigationtitle(_:)-4jbw6","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/navigationtitle(_:)-4nq4h","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/navigationtitle(_:)-54g2h","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/navigationtitle(_:)-6zpon","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/navigationtitle(_:)-7f42s","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetextfield\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetextfield\/ondrop(of:delegate:)-4x7cz","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/ondrop(of:delegate:)-85twe","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/ondrop(of:istargeted:perform:)-203ww","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetextfield\/ondrop(of:istargeted:perform:)-3keu4","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/ondrop(of:istargeted:perform:)-440uj","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetextfield\/ondrop(of:istargeted:perform:)-9xyx3","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetextfield\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetextfield\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/onswipegesture(maximumtime:minimumdistance:maximumdistance:gesturetimer:up:left:right:down:)","title":"func onSwipeGesture(maximumTime: TimeInterval, minimumDistance: CGFloat, maximumDistance: CGFloat, gestureTimer: GestureTimer, up: () -> Void, left: () -> Void, right: () -> Void, down: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetextfield\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/padding(_:)-2uty9","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/padding(_:)-3qkdh","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/preferspersistentsystemoverlayshidden()","title":"func prefersPersistentSystemOverlaysHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/presentationdetents(undimmed:largestundimmed:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/presentationdetents(undimmed:largestundimmed:selection:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/renameaction(_:)-4r5o6","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/renameaction(_:)-7to6t","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/safeareainset(edge:alignment:spacing:content:)-4orsc","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/safeareainset(edge:alignment:spacing:content:)-7asfx","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/scaleeffect(_:anchor:)-5bllx","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/scaleeffect(_:anchor:)-8kgrl","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/searchcompletion(_:)-2vu60","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/searchcompletion(_:)-40kac","title":"func searchCompletion<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/searchable(if:text:placement:prompt:)","title":"func searchable(if: Bool, text: Binding<String>, placement: SearchFieldPlacement, prompt: String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/searchable(text:placement:prompt:)-1crkv","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/searchable(text:placement:prompt:)-3smhg","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/searchable(text:placement:prompt:)-6re3k","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetextfield\/searchable(text:placement:prompt:suggestions:)-6nyy3","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetextfield\/searchable(text:placement:prompt:suggestions:)-9qlwu","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetextfield\/searchable(text:placement:prompt:suggestions:)-ofcw","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/searchable(text:tokens:placement:prompt:token:)-1iwz9","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/searchable(text:tokens:placement:prompt:token:)-3xmi9","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/searchable(text:tokens:placement:prompt:token:)-5qus6","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-19vdr","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-22b2i","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-5r5rn","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/shadow(_:)","title":"func shadow(ViewShadowStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/sheet(_:)","title":"func sheet(SheetContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/multilinetextfield\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/tint(_:)-3qjsu","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/tint(_:)-90x3d","title":"func tint<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/toolbar(content:)-1hlgy","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/toolbar(content:)-40rgf","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/toolbarbackground(_:for:)-3xnov","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/toolbarbackground(_:for:)-6hewj","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/visible(if:)","title":"func visible(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/width(_:)","title":"func width(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/multilinetextfield\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/swiftuikit\/multilinetextfield\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/swiftuikit\/multilinetextfield","title":"MultilineTextField","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/textfieldclearbutton\/init(text:)","title":"init(text: Binding<String>)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/textfieldclearbutton\/body(content:)","title":"func body(content: Content) -> some View","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/textfieldclearbutton\/animation(_:)","title":"func animation(Animation?) -> some ViewModifier","type":"method"},{"path":"\/documentation\/swiftuikit\/textfieldclearbutton\/concat(_:)","title":"func concat<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/swiftuikit\/textfieldclearbutton\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some ViewModifier","type":"method"}],"path":"\/documentation\/swiftuikit\/textfieldclearbutton\/viewmodifier-implementations","title":"ViewModifier Implementations","type":"symbol"}],"path":"\/documentation\/swiftuikit\/textfieldclearbutton","title":"TextFieldClearButton","type":"struct"},{"title":"Views\/Toggle","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/init(_:ison:onaction:offaction:)","title":"init(String, isOn: Binding<Bool>, onAction: () -> Void, offAction: () -> Void)","type":"init"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/init(ison:label:onaction:offaction:)","title":"init(isOn: Binding<Bool>, label: LabelBuilder, onAction: () -> Void, offAction: () -> Void)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/body","title":"var body: some View","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/labelbuilder","title":"ActionToggle.LabelBuilder","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/actiontoggle\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibility(activationpoint:)-2oh87","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibility(activationpoint:)-4cqv0","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibilityaction(named:_:)","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibilityactivationpoint(_:)-8ma7o","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibilityactivationpoint(_:)-8vnpc","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibilitycustomcontent(_:_:importance:)-16q04","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibilitycustomcontent(_:_:importance:)-1ga4x","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibilitycustomcontent(_:_:importance:)-3a6rw","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibilitycustomcontent(_:_:importance:)-6pg9j","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibilitycustomcontent(_:_:importance:)-8wcfl","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibilitycustomcontent(_:_:importance:)-9d827","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibilitycustomcontent(_:_:importance:)-9i987","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibilitycustomcontent(_:_:importance:)-omng","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibilityhint(_:)-1poqh","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibilityhint(_:)-9lp61","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibilityhint(_:)-hkj1","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibilityinputlabels(_:)-31ufo","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibilityinputlabels(_:)-3raem","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibilityinputlabels(_:)-zeg7","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibilitylabel(_:)-67as9","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibilitylabel(_:)-9g0o7","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibilitylabel(_:)-9jfej","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibilityrotor(_:entries:)-4xxjw","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibilityrotor(_:entries:)-5y73h","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibilityrotor(_:entries:)-82y9k","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibilityrotor(_:entries:)-ax6g","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibilityrotor(_:entries:entryid:entrylabel:)-2zn7a","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibilityrotor(_:entries:entryid:entrylabel:)-44hpj","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibilityrotor(_:entries:entryid:entrylabel:)-6bm7e","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibilityrotor(_:entries:entryid:entrylabel:)-8wsuk","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibilityrotor(_:entries:entrylabel:)-1k6z1","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibilityrotor(_:entries:entrylabel:)-415gm","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibilityrotor(_:entries:entrylabel:)-7m2le","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibilityrotor(_:entries:entrylabel:)-9t03i","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibilityrotor(_:textranges:)-13dmu","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibilityrotor(_:textranges:)-1d6no","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibilityrotor(_:textranges:)-2a2hg","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibilityrotor(_:textranges:)-7wbu5","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibilityvalue(_:)-2ijx2","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibilityvalue(_:)-42zvs","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/accessibilityvalue(_:)-q9v1","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/actiontoggle\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/actiontoggle\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/alert(_:)","title":"func alert(AlertContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/alert(_:ispresented:actions:)-10lzb","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/alert(_:ispresented:actions:)-53uwq","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/alert(_:ispresented:actions:)-zvbe","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/alert(_:ispresented:actions:message:)-15lia","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/alert(_:ispresented:actions:message:)-32m59","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/alert(_:ispresented:actions:message:)-5o2lm","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/alert(_:ispresented:presenting:actions:)-2abjn","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/alert(_:ispresented:presenting:actions:)-4znza","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/alert(_:ispresented:presenting:actions:)-5tr6l","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/alert(_:ispresented:presenting:actions:message:)-106e8","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/alert(_:ispresented:presenting:actions:message:)-57snv","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/alert(_:ispresented:presenting:actions:message:)-8awcv","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/actiontoggle\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/actiontoggle\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/alignmentguide(_:computevalue:)-5h4y0","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/alignmentguide(_:computevalue:)-6izu9","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/actiontoggle\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/any()","title":"func any() -> AnyView","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/aspectratio(_:contentmode:)-5hk4l","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/aspectratio(_:contentmode:)-722jp","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/actiontoggle\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/autosave(_:debounceinterval:action:)","title":"func autosave<T>(Published<T>.Publisher, debounceInterval: RunLoop.SchedulerTimeType.Stride, action: () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/actiontoggle\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/background(_:in:fillstyle:)-302w5","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/background(_:in:fillstyle:)-8aa55","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/background(in:fillstyle:)-5rxi0","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/background(in:fillstyle:)-9128r","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/badge(_:)-2796g","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/badge(_:)-2e6wf","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/badge(_:)-3jb83","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/badge(_:)-554hl","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/bindsafeareainsets(to:)","title":"func bindSafeAreaInsets(to: Binding<EdgeInsets>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/bindsize(to:)","title":"func bindSize(to: Binding<CGSize>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/border(_:width:cornerradius:)","title":"func border<Content>(Content, width: CGFloat, cornerRadius: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/buttonstyle(_:)-5yy9v","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/buttonstyle(_:)-7jyxh","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/actiontoggle\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/confirmationdialog(_:ispresented:titlevisibility:actions:)-1c95z","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/confirmationdialog(_:ispresented:titlevisibility:actions:)-3eqg5","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/confirmationdialog(_:ispresented:titlevisibility:actions:)-50dty","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-2p8fy","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-2u6zf","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-590pr","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-3e7ra","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-69uzv","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-80ykr","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-4h5up","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-5zk89","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-9jd3x","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/actiontoggle\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/actiontoggle\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/cornerradius(_:)","title":"func cornerRadius(CornerRadiusStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/actiontoggle\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/disabledynamictype(sizecategory:)","title":"func disableDynamicType(sizeCategory: ContentSizeCategory) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/dynamictypesize(_:)-1zbrz","title":"func dynamicTypeSize<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/dynamictypesize(_:)-4c6ug","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/actiontoggle\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/enabled(_:)","title":"func enabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-44ala","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-9xs2f","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/fileexporter(ispresented:documents:contenttype:oncompletion:)-3rdt9","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/fileexporter(ispresented:documents:contenttype:oncompletion:)-oqa7","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/focusedobject(_:)-2xiwb","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/focusedobject(_:)-3c5h7","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/focusedsceneobject(_:)-273ju","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/focusedsceneobject(_:)-5lkja","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/focusedscenevalue(_:_:)-2dfwn","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/focusedscenevalue(_:_:)-7clzd","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/focusedvalue(_:_:)-2fgve","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/focusedvalue(_:_:)-79dbd","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/font(_:)-8yh6u","title":"func font(FontStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/font(_:)-c3zr","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/font(identifier:style:weight:)","title":"func font(identifier: FontIdentifier, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/font(name:style:weight:)","title":"func font(name: String, style: UIFont.TextStyle, weight: Font.Weight) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/frame(_:)","title":"func frame(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/frame(square:)","title":"func frame(square: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/fullscreencover(_:)","title":"func fullScreenCover(FullScreenCoverContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/height(_:)","title":"func height(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/help(_:)-1hb5p","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/help(_:)-33r9x","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/help(_:)-3v3l","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/hidden(if:)","title":"func hidden(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/hidekeyboard()","title":"func hideKeyboard()","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/keyboardshortcut(_:)-2dteq","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/keyboardshortcut(_:)-4czm6","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/linelimit(_:)","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/listitemtint(_:)-2wzuf","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/listitemtint(_:)-6qqmz","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/actiontoggle\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/actiontoggle\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/actiontoggle\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/actiontoggle\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/actiontoggle\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/actiontoggle\/navigationbartitle(_:)-40b62","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/actiontoggle\/navigationbartitle(_:)-6le21","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/actiontoggle\/navigationbartitle(_:)-8mb9e","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/actiontoggle\/navigationbartitle(_:displaymode:)-3n9cm","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/actiontoggle\/navigationbartitle(_:displaymode:)-5la4u","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/actiontoggle\/navigationbartitle(_:displaymode:)-7d5e0","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/navigationdocument(_:)-1exby","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/navigationdocument(_:)-2egff","title":"func navigationDocument<D>(D) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/navigationdocument(_:preview:)-43nlc","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/navigationdocument(_:preview:)-4ag4k","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/navigationdocument(_:preview:)-4xze2","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/navigationdocument(_:preview:)-jami","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/navigationtitle(_:)-1vgop","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/navigationtitle(_:)-3to7d","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/navigationtitle(_:)-4vesq","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/navigationtitle(_:)-5kpk7","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/navigationtitle(_:)-8zr01","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/actiontoggle\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/actiontoggle\/ondrop(of:delegate:)-3myw2","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/ondrop(of:delegate:)-jg2f","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/ondrop(of:istargeted:perform:)-1yb2c","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/ondrop(of:istargeted:perform:)-790lz","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/actiontoggle\/ondrop(of:istargeted:perform:)-8gw1a","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/actiontoggle\/ondrop(of:istargeted:perform:)-9vx5f","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/actiontoggle\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/actiontoggle\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/onswipegesture(maximumtime:minimumdistance:maximumdistance:gesturetimer:up:left:right:down:)","title":"func onSwipeGesture(maximumTime: TimeInterval, minimumDistance: CGFloat, maximumDistance: CGFloat, gestureTimer: GestureTimer, up: () -> Void, left: () -> Void, right: () -> Void, down: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/actiontoggle\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/padding(_:)-1d4ae","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/padding(_:)-5mgck","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/preferspersistentsystemoverlayshidden()","title":"func prefersPersistentSystemOverlaysHidden() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/presentationdetents(undimmed:largestundimmed:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/presentationdetents(undimmed:largestundimmed:selection:)","title":"func presentationDetents(undimmed: [UndimmedPresentationDetent], largestUndimmed: UndimmedPresentationDetent?, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/renameaction(_:)-3uyel","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/renameaction(_:)-923c0","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/safeareainset(edge:alignment:spacing:content:)-6og9l","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/safeareainset(edge:alignment:spacing:content:)-8hkpc","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/scaleeffect(_:anchor:)-2hyne","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/scaleeffect(_:anchor:)-3n5xt","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/searchcompletion(_:)-1hisi","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/searchcompletion(_:)-6sbdx","title":"func searchCompletion<T>(T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/searchable(if:text:placement:prompt:)","title":"func searchable(if: Bool, text: Binding<String>, placement: SearchFieldPlacement, prompt: String) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/searchable(text:placement:prompt:)-1g21g","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/searchable(text:placement:prompt:)-233p9","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/searchable(text:placement:prompt:)-yi47","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/actiontoggle\/searchable(text:placement:prompt:suggestions:)-2tk7d","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/actiontoggle\/searchable(text:placement:prompt:suggestions:)-33m2d","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/actiontoggle\/searchable(text:placement:prompt:suggestions:)-34p60","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/searchable(text:tokens:placement:prompt:token:)-11a7k","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/searchable(text:tokens:placement:prompt:token:)-3np1c","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/searchable(text:tokens:placement:prompt:token:)-4lh1z","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-17i88","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-5jepf","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-poyu","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/shadow(_:)","title":"func shadow(ViewShadowStyle) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/sheet(_:)","title":"func sheet(SheetContext) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/swiftuikit\/actiontoggle\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/tint(_:)-3gy0v","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/tint(_:)-6cvoy","title":"func tint<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/toolbar(content:)-6n6xr","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/toolbar(content:)-gb20","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/toolbarbackground(_:for:)-8hv8r","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/toolbarbackground(_:for:)-8ymph","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/visible(if:)","title":"func visible(if: Bool) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/width(_:)","title":"func width(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/swiftuikit\/actiontoggle\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/swiftuikit\/actiontoggle\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/swiftuikit\/actiontoggle","title":"ActionToggle","type":"struct"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftuikit\/undimmedpresentationdetent\/fraction(_:)","title":"case fraction(CGFloat)","type":"case"},{"path":"\/documentation\/swiftuikit\/undimmedpresentationdetent\/height(_:)","title":"case height(CGFloat)","type":"case"},{"path":"\/documentation\/swiftuikit\/undimmedpresentationdetent\/large","title":"case large","type":"case"},{"path":"\/documentation\/swiftuikit\/undimmedpresentationdetent\/medium","title":"case medium","type":"case"}],"path":"\/documentation\/swiftuikit\/undimmedpresentationdetent","title":"UndimmedPresentationDetent","type":"enum"}],"path":"\/documentation\/swiftuikit","title":"SwiftUIKit","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":0}}